<####>
<# TEMPLATE DATA #>
<# DATA:MODEL [ project = Project ] #>
<# DATA:MODEL [ input = Input ] #>
<# DATA:RENDERABLE [ renderable = CustomRenderable() ] #>
<####>
<% const input = this.input %>
<% const crud = input.crud %>
<% const camelCase = this.require("camelCase") %>
<% const pascalCase = this.require("pascalCase") %>
<% const fieldName = input.column?.name || input.name %>

<div class="vtheme(crud.form.input.group)">
    <x-ui.label for="<$ input.name $>"><$ this.helpers.lang(input.label) $></x-ui.label>
    <x-ui.input.select
        wire:model="form.<$ input.column.name $>"
        class="vtheme(crud.form.input.extra)" id="<$ input.name $>" name="<$ input.name $>">
        <# Select options #>
        <% if(input.isBelongsTo()) { %>
            <% const model = input.getRelatedModel() %>
            <% const label = model.table.getLabelColumnName() %>
            <% const primaryKey = model.getPrimaryKeyName() %>
            <option value="">Select data</option>
            @foreach ($<$ camelCase(model.plural) $> as $value => $label)
                <option value="{{ $value }}">{{ $label }}</option>
            @endforeach
        <% } else { %>
            <option value="">Select</option>
            <% for (let item of input.items) { %>
                <option value="<$ item.value $>"><$ item.label $></option>
            <% } %>
        <% } %>
        <# --- #>
    </x-ui.input.select>
    <x-ui.input.error for="<$ input.name $>" />
</div>