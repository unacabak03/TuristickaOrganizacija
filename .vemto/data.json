{
    "tables": {
        "projects": {
            "item_1": {
                "uuid": "a3702e17-33b6-4b07-af94-676904f7f167",
                "id": 1,
                "createdAt": "2025-08-07 17:43:37",
                "updatedAt": "2025-08-07 18:25:14",
                "settings": {
                    "cssFramework": "tailwind",
                    "uiStarterKit": "breeze",
                    "usesLivewire": true,
                    "usesInertia": false,
                    "usesVue": false,
                    "usesReact": false,
                    "usesSvelte": false,
                    "isFreshLaravelProject": false,
                    "blueprintModeEnabled": false,
                    "schemaReaderMode": "db",
                    "schemaReaderDbDriver": "mysql",
                    "schemaReaderDbHost": "127.0.0.1",
                    "schemaReaderDbPort": "3306",
                    "schemaReaderDbUsername": "root",
                    "schemaReaderDbPassword": null,
                    "schemaReaderDbDatabase": "vemto_schema_reader",
                    "laravelVersion": "12.0"
                },
                "canShowSchemaSourceChangesAlert": false,
                "codeGenerationSettings": {
                    "models": true,
                    "factories": true,
                    "seeders": true,
                    "policies": true,
                    "requests": true,
                    "controllers": true,
                    "routes": true,
                    "views": true,
                    "uiComponents": true,
                    "livewireLayout": true,
                    "translationsOnViews": true,
                    "translationsFormat": "underscore"
                },
                "languages": [
                    "en"
                ],
                "defaultLanguage": "en",
                "translations": {
                    "en": {
                        "navigation.home": "Home",
                        "navigation.apps": "Apps",
                        "crud.users.itemTitle": "User",
                        "crud.users.collectionTitle": "Users",
                        "crud.users.inputs.name.label": "Name",
                        "crud.users.inputs.name.placeholder": "Name",
                        "crud.users.inputs.email.label": "Email",
                        "crud.users.inputs.email.placeholder": "Email",
                        "crud.users.inputs.phone_number.label": "Phone number",
                        "crud.users.inputs.phone_number.placeholder": "Phone number",
                        "crud.users.inputs.password.label": "Password",
                        "crud.users.inputs.password.placeholder": "Password",
                        "crud.users.inputs.role.label": "Role",
                        "crud.users.inputs.role.placeholder": "Role",
                        "crud.reservations.itemTitle": "Reservation",
                        "crud.reservations.collectionTitle": "Reservations",
                        "crud.reservations.inputs.tour_id.label": "Tour id",
                        "crud.reservations.inputs.tour_id.placeholder": "Tour id",
                        "crud.reservations.inputs.status.label": "Status",
                        "crud.reservations.inputs.status.placeholder": "Status",
                        "crud.reservations.inputs.number_of_people.label": "Number of people",
                        "crud.reservations.inputs.number_of_people.placeholder": "Number of people",
                        "crud.reviews.itemTitle": "Review",
                        "crud.reviews.collectionTitle": "Reviews",
                        "crud.reviews.inputs.tour_id.label": "Tour id",
                        "crud.reviews.inputs.tour_id.placeholder": "Tour id",
                        "crud.reviews.inputs.rating.label": "Rating",
                        "crud.reviews.inputs.rating.placeholder": "Rating",
                        "crud.reviews.inputs.comment.label": "Comment",
                        "crud.reviews.inputs.comment.placeholder": "Comment",
                        "navigation.users": "Users",
                        "crud.tours.itemTitle": "Tour",
                        "crud.tours.collectionTitle": "Tours",
                        "crud.tours.inputs.title.label": "Title",
                        "crud.tours.inputs.title.placeholder": "Title",
                        "crud.tours.inputs.description.label": "Description",
                        "crud.tours.inputs.description.placeholder": "Description",
                        "crud.tours.inputs.location.label": "Location",
                        "crud.tours.inputs.location.placeholder": "Location",
                        "crud.tours.inputs.price.label": "Price",
                        "crud.tours.inputs.price.placeholder": "Price",
                        "crud.tours.inputs.start_date.label": "Start date",
                        "crud.tours.inputs.start_date.placeholder": "Start date",
                        "crud.tours.inputs.end_date.label": "End date",
                        "crud.tours.inputs.end_date.placeholder": "End date",
                        "crud.tours.inputs.max_participants.label": "Max participants",
                        "crud.tours.inputs.max_participants.placeholder": "Max participants",
                        "crud.reservations.inputs.user_id.label": "User id",
                        "crud.reservations.inputs.user_id.placeholder": "User id",
                        "crud.reviews.inputs.user_id.label": "User id",
                        "crud.reviews.inputs.user_id.placeholder": "User id",
                        "crud.categoryTour.itemTitle": "Category Tour",
                        "crud.categoryTour.collectionTitle": "Category Tour",
                        "crud.categoryTour.inputs.category_id.label": "Category id",
                        "crud.categoryTour.inputs.category_id.placeholder": "Category id",
                        "navigation.tours": "Tours",
                        "navigation.reservations": "Reservations",
                        "navigation.reviews": "Reviews",
                        "crud.categories.itemTitle": "Category",
                        "crud.categories.collectionTitle": "Categories",
                        "crud.categories.inputs.name.label": "Name",
                        "crud.categories.inputs.name.placeholder": "Name",
                        "crud.categories.inputs.description.label": "Description",
                        "crud.categories.inputs.description.placeholder": "Description",
                        "crud.categoryTour.inputs.tour_id.label": "Tour id",
                        "crud.categoryTour.inputs.tour_id.placeholder": "Tour id",
                        "navigation.categories": "Categories"
                    }
                },
                "vthemeKeys": {
                    "default.delay": "opacity-75",
                    "table": "min-w-full divide-y divide-gray-200",
                    "table.container": "overflow-hidden border rounded-lg",
                    "table.head": "bg-gray-50",
                    "table.head.row": "text-gray-500",
                    "table.head.col": "px-5 py-3 text-xs font-medium text-left uppercase",
                    "table.body": "bg-white divide-y divide-gray-200 dark:divide-gray-700",
                    "table.body.row": "text-gray-800",
                    "table.body.col": "px-5 py-4 text-sm whitespace-nowrap",
                    "ui.button": "inline-flex items-center justify-center px-4 py-2 text-sm font-medium tracking-wide text-white transition-colors duration-200 rounded-md bg-indigo-500 hover:bg-indigo-600 focus:ring-2 focus:ring-offset-2 focus:ring-gray-900 focus:shadow-outline focus:outline-none",
                    "ui.input": "inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50",
                    "ui.input.checkbox": "",
                    "ui.label": "block mb-1.5 font-medium text-sm text-gray-700",
                    "ui.input.error": "text-sm text-red-600",
                    "ui.breadcrumbs.container": "flex justify-between py-1",
                    "ui.breadcrumbs.list": "inline-flex items-center mb-3 space-x-1 text-xs text-neutral-500 [&_.active-breadcrumb]:text-neutral-600 [&_.active-breadcrumb]:font-medium sm:mb-0",
                    "ui.breadcrumbs.list.item": "",
                    "ui.breadcrumbs.list.item.link": "inline-flex items-center py-1 font-normal hover:text-neutral-900 focus:outline-none",
                    "ui.breadcrumbs.separator": "w-5 h-5 text-gray-400/70",
                    "crud.index.container": "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4",
                    "crud.table.head.col.extra": "cursor-pointer",
                    "crud.table.head.action-col": "px-5 py-3 text-xs font-medium text-right uppercase",
                    "crud.table.body.col.extra": "max-w-xs truncate",
                    "crud.table.body.action-col": "px-5 py-4 text-sm font-medium text-right whitespace-nowrap space-x-2",
                    "crud.action-link": "text-indigo-600 hover:text-indigo-700 cursor-pointer",
                    "crud.action-link-danger": "text-red-600 hover:text-red-700 cursor-pointer",
                    "crud.index.tools": "flex justify-between align-top py-4",
                    "crud.pagination.container": "mt-2",
                    "crud.container": "max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4",
                    "crud.header": "w-full text-gray-500 text-lg font-semibold py-4 uppercase",
                    "crud.form": "w-full mb-0",
                    "crud.form.container": "overflow-hidden border rounded-lg bg-white",
                    "crud.form.inputs.container": "p-6 space-y-3",
                    "crud.form.input.group": "w-full",
                    "crud.form.input.radio.group": "flex flex-wrap flex-col gap-2",
                    "crud.form.input.radio.box": "inline-flex justify-start gap-2",
                    "ui.input.radio": "!w-4 !h-4 text-indigo-600 transition duration-150 ease-in-out border-gray-300 rounded-md focus:ring-indigo-500",
                    "crud.form.input.extra": "w-full",
                    "crud.form.input.image": "object-cover rounded border border-gray-200 w-36 h-36 cursor-pointer bg-gray-50 hover:opacity-75 transition duration-100 ease-in-out",
                    "crud.form.input.image.button": "p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200",
                    "crud.form.input.file.name": "text-sm text-gray-500 p-1 rounded-sm bg-gray-50 border border-gray-200 mb-1",
                    "crud.form.buttons-container": "flex justify-between mt-4 border-t border-gray-50 p-4"
                },
                "vthemeCdn": "https://cdn.tailwindcss.com",
                "connectionFinished": true,
                "canIgnoreNextSchemaSourceChanges": true,
                "filesQueueStatus": "idle",
                "lastReadSchemaDataHash": "b782beb4b21cff63283a062d3b89e2ac",
                "currentSchemaError": null,
                "currentSchemaErrorStack": null,
                "currentRenderedFilesPaths": [
                    "/lang/en//navigation.php",
                    "/lang/en//crud.php",
                    "resources/views/components/ui//toast.blade.php",
                    "resources/views/components/ui//action/danger.blade.php",
                    "resources/views/components/ui//action/index.blade.php",
                    "resources/views/components/ui//breadcrumbs/index.blade.php",
                    "resources/views/components/ui//breadcrumbs/link.blade.php",
                    "resources/views/components/ui//breadcrumbs/separator.blade.php",
                    "resources/views/components/ui//button/danger.blade.php",
                    "resources/views/components/ui//button/index.blade.php",
                    "resources/views/components/ui//card/body.blade.php",
                    "resources/views/components/ui//card/header.blade.php",
                    "resources/views/components/ui//card/index.blade.php",
                    "resources/views/components/ui//card/title.blade.php",
                    "resources/views/components/ui//container/table.blade.php",
                    "resources/views/components/ui//input/checkbox.blade.php",
                    "resources/views/components/ui//input/color.blade.php",
                    "resources/views/components/ui//input/date.blade.php",
                    "resources/views/components/ui//input/date-time.blade.php",
                    "resources/views/components/ui//input/email.blade.php",
                    "resources/views/components/ui//input/error.blade.php",
                    "resources/views/components/ui//input/file.blade.php",
                    "resources/views/components/ui//input/hidden.blade.php",
                    "resources/views/components/ui//input/image.blade.php",
                    "resources/views/components/ui//input/index.blade.php",
                    "resources/views/components/ui//input/number.blade.php",
                    "resources/views/components/ui//input/password.blade.php",
                    "resources/views/components/ui//input/radio.blade.php",
                    "resources/views/components/ui//input/select.blade.php",
                    "resources/views/components/ui//input/text.blade.php",
                    "resources/views/components/ui//input/textarea.blade.php",
                    "resources/views/components/ui//input/time.blade.php",
                    "resources/views/components/ui//input/url.blade.php",
                    "resources/views/components/ui//label/index.blade.php",
                    "resources/views/components/ui//modal/confirm.blade.php",
                    "resources/views/components/ui//modal/index.blade.php",
                    "resources/views/components/ui//table/action-column.blade.php",
                    "resources/views/components/ui//table/action-header.blade.php",
                    "resources/views/components/ui//table/column.blade.php",
                    "resources/views/components/ui//table/header.blade.php",
                    "resources/views/components/ui//table/image.blade.php",
                    "resources/views/components/ui//table/index.blade.php",
                    "resources/views/components/ui//table/row.blade.php",
                    "resources/views/livewire/layout/navigation.blade.php",
                    "routes/app.php",
                    "routes/app-api.php",
                    "bootstrap/app.php",
                    "database/factories/UserFactory.php",
                    "database/seeders/UserSeeder.php",
                    "app/Policies/UserPolicy.php",
                    "database/factories/TourFactory.php",
                    "database/seeders/TourSeeder.php",
                    "app/Policies/TourPolicy.php",
                    "database/factories/ReservationFactory.php",
                    "database/seeders/ReservationSeeder.php",
                    "app/Policies/ReservationPolicy.php",
                    "database/factories/ReviewFactory.php",
                    "database/seeders/ReviewSeeder.php",
                    "app/Policies/ReviewPolicy.php",
                    "database/factories/CategoryFactory.php",
                    "database/seeders/CategorySeeder.php",
                    "app/Policies/CategoryPolicy.php",
                    "resources/views/livewire/dashboard/users/index.blade.php",
                    "app/Livewire/Dashboard/UserIndex.php",
                    "resources/views/livewire/dashboard/users/create.blade.php",
                    "app/Livewire/Dashboard/UserCreate.php",
                    "resources/views/livewire/dashboard/users/edit.blade.php",
                    "app/Livewire/Dashboard/UserEdit.php",
                    "app/Livewire/Dashboard/Users/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/Users/Forms/UpdateForm.php",
                    "resources/views/livewire/dashboard/users/reservations-detail.blade.php",
                    "resources/views/livewire/dashboard/users/reviews-detail.blade.php",
                    "resources/views/livewire/dashboard/tours/index.blade.php",
                    "app/Livewire/Dashboard/TourIndex.php",
                    "resources/views/livewire/dashboard/tours/create.blade.php",
                    "app/Livewire/Dashboard/UserReservationsDetail.php",
                    "app/Livewire/Dashboard/UserReviewsDetail.php",
                    "app/Livewire/Dashboard/Reservations/Forms/CreateDetailForm.php",
                    "app/Livewire/Dashboard/Reviews/Forms/CreateDetailForm.php",
                    "app/Livewire/Dashboard/Reservations/Forms/UpdateDetailForm.php",
                    "app/Livewire/Dashboard/Reviews/Forms/UpdateDetailForm.php",
                    "app/Livewire/Dashboard/TourCreate.php",
                    "resources/views/livewire/dashboard/tours/edit.blade.php",
                    "app/Livewire/Dashboard/TourEdit.php",
                    "app/Livewire/Dashboard/Tours/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/Tours/Forms/UpdateForm.php",
                    "resources/views/livewire/dashboard/tours/reservations-detail.blade.php",
                    "resources/views/livewire/dashboard/tours/reviews-detail.blade.php",
                    "resources/views/livewire/dashboard/reservations/index.blade.php",
                    "app/Livewire/Dashboard/ReservationIndex.php",
                    "resources/views/livewire/dashboard/reservations/create.blade.php",
                    "app/Livewire/Dashboard/TourReservationsDetail.php",
                    "app/Livewire/Dashboard/TourReviewsDetail.php",
                    "app/Livewire/Dashboard/Reservations/Forms/CreateDetailForm.php",
                    "app/Livewire/Dashboard/Reviews/Forms/CreateDetailForm.php",
                    "app/Livewire/Dashboard/Reservations/Forms/UpdateDetailForm.php",
                    "app/Livewire/Dashboard/Reviews/Forms/UpdateDetailForm.php",
                    "app/Livewire/Dashboard/ReservationCreate.php",
                    "resources/views/livewire/dashboard/reservations/edit.blade.php",
                    "app/Livewire/Dashboard/ReservationEdit.php",
                    "app/Livewire/Dashboard/Reservations/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/Reservations/Forms/UpdateForm.php",
                    "resources/views/livewire/dashboard/reviews/index.blade.php",
                    "app/Livewire/Dashboard/ReviewIndex.php",
                    "resources/views/livewire/dashboard/reviews/create.blade.php",
                    "app/Livewire/Dashboard/ReviewCreate.php",
                    "resources/views/livewire/dashboard/reviews/edit.blade.php",
                    "app/Livewire/Dashboard/ReviewEdit.php",
                    "app/Livewire/Dashboard/Reviews/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/Reviews/Forms/UpdateForm.php",
                    "resources/views/livewire/dashboard/categories/index.blade.php",
                    "app/Livewire/Dashboard/CategoryIndex.php",
                    "resources/views/livewire/dashboard/categories/create.blade.php",
                    "app/Livewire/Dashboard/CategoryCreate.php",
                    "resources/views/livewire/dashboard/categories/edit.blade.php",
                    "app/Livewire/Dashboard/CategoryEdit.php",
                    "app/Livewire/Dashboard/Categories/Forms/CreateForm.php",
                    "app/Livewire/Dashboard/Categories/Forms/UpdateForm.php",
                    "database/seeders/DatabaseSeeder.php",
                    "resources/views/components/layouts/app.blade.php"
                ]
            },
            "__tableData": {
                "count": 1,
                "lastPrimaryKey": 1,
                "index": {
                    "1": {
                        "hasMany": {
                            "tables.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                12,
                                13,
                                14,
                                15
                            ],
                            "models.projectId": [
                                1,
                                2,
                                4,
                                5,
                                6
                            ],
                            "app_sections.projectId": [
                                1,
                                2,
                                3,
                                4
                            ],
                            "schema_sections.projectId": [
                                1,
                                2
                            ],
                            "navs.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7
                            ],
                            "renderable_files.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                15,
                                16,
                                17,
                                18,
                                19,
                                20,
                                21,
                                22,
                                23,
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30,
                                31,
                                32,
                                33,
                                34,
                                35,
                                36,
                                37,
                                38,
                                39,
                                40,
                                41,
                                42,
                                43,
                                44,
                                45,
                                46,
                                47,
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                                58,
                                59,
                                60,
                                61,
                                62,
                                63,
                                64,
                                65,
                                66,
                                67,
                                68,
                                69,
                                70,
                                71,
                                72,
                                73,
                                74,
                                75,
                                76,
                                77,
                                78,
                                79,
                                80,
                                81,
                                82,
                                83,
                                84,
                                85,
                                86,
                                87,
                                88,
                                89,
                                90,
                                91,
                                92,
                                93,
                                94,
                                95,
                                96,
                                97,
                                98,
                                99,
                                100,
                                101,
                                102,
                                103,
                                104,
                                105,
                                106,
                                107,
                                108,
                                109,
                                110,
                                111,
                                112,
                                113,
                                114,
                                115,
                                116
                            ],
                            "relationships.projectId": [
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12
                            ],
                            "cruds.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11
                            ],
                            "routes.projectId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                15
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            }
        },
        "tables": {
            "item_1": {
                "projectId": 1,
                "name": "cache",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "migrationName": "0001_01_01_000001_create_cache_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000001",
                        "createdTables": [
                            "cache",
                            "cache_locks"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "cache",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "migrationName": "0001_01_01_000001_create_cache_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000001",
                            "createdTables": [
                                "cache",
                                "cache_locks"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 1,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38",
                "positionX": 0,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "__tableData": {
                "count": 14,
                "lastPrimaryKey": 15,
                "index": {
                    "1": {
                        "hasMany": {
                            "columns.tableId": [
                                1,
                                2,
                                3
                            ],
                            "indices.tableId": [
                                1
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "columns.tableId": [
                                4,
                                5,
                                6
                            ],
                            "indices.tableId": [
                                2
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "columns.tableId": [
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "columns.tableId": [
                                14,
                                15,
                                16,
                                17,
                                18,
                                19,
                                20,
                                21,
                                22,
                                23
                            ],
                            "indices.tableId": [
                                3
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "columns.tableId": [
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "columns.tableId": [
                                31,
                                32,
                                33
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "columns.tableId": [
                                34,
                                35,
                                36
                            ],
                            "indices.tableId": [
                                4
                            ]
                        }
                    },
                    "8": {
                        "hasMany": {
                            "columns.tableId": [
                                37,
                                38,
                                39,
                                40,
                                41,
                                42
                            ],
                            "indices.tableId": [
                                5
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "columns.tableId": [
                                43,
                                44,
                                45,
                                46,
                                47,
                                48,
                                49,
                                50,
                                51,
                                89
                            ],
                            "models.tableId": [
                                1
                            ],
                            "indices.onTableId": [
                                7,
                                11
                            ],
                            "cruds.tableId": [
                                1
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {
                            "columns.tableId": [
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                                58,
                                59,
                                60,
                                61
                            ],
                            "models.tableId": [
                                2
                            ],
                            "indices.tableId": [],
                            "indices.onTableId": [
                                8,
                                10,
                                12
                            ],
                            "cruds.tableId": [
                                4
                            ]
                        }
                    },
                    "12": {
                        "hasMany": {
                            "columns.tableId": [
                                66,
                                67,
                                68,
                                69,
                                70,
                                71,
                                73
                            ],
                            "models.tableId": [
                                4
                            ],
                            "indices.tableId": [
                                7,
                                8
                            ],
                            "cruds.tableId": [
                                2,
                                5,
                                8
                            ]
                        }
                    },
                    "13": {
                        "hasMany": {
                            "columns.tableId": [
                                74,
                                75,
                                76,
                                77,
                                78,
                                79,
                                80
                            ],
                            "models.tableId": [
                                5
                            ],
                            "indices.tableId": [
                                11,
                                12
                            ],
                            "cruds.tableId": [
                                3,
                                6,
                                9
                            ]
                        }
                    },
                    "14": {
                        "hasMany": {
                            "columns.tableId": [
                                81,
                                82,
                                83,
                                84,
                                85
                            ],
                            "models.tableId": [
                                6
                            ],
                            "indices.onTableId": [
                                9
                            ],
                            "cruds.tableId": [
                                10
                            ]
                        }
                    },
                    "15": {
                        "hasMany": {
                            "columns.tableId": [
                                87,
                                88
                            ],
                            "indices.tableId": [
                                9,
                                10
                            ],
                            "relationships.pivotId": [
                                7,
                                8
                            ],
                            "cruds.tableId": [
                                7,
                                11
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "projectId": 1,
                "name": "cache_locks",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                        "migrationName": "0001_01_01_000001_create_cache_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000001",
                        "createdTables": [
                            "cache",
                            "cache_locks"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "cache_locks",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000001_create_cache_table.php",
                            "migrationName": "0001_01_01_000001_create_cache_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000001",
                            "createdTables": [
                                "cache",
                                "cache_locks"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 2,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38",
                "positionX": 0,
                "positionY": 700,
                "sectionId": 2,
                "removed": false
            },
            "item_3": {
                "projectId": 1,
                "name": "failed_jobs",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "migrationName": "0001_01_01_000002_create_jobs_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000002",
                        "createdTables": [
                            "jobs",
                            "job_batches",
                            "failed_jobs"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "failed_jobs",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "migrationName": "0001_01_01_000002_create_jobs_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000002",
                            "createdTables": [
                                "jobs",
                                "job_batches",
                                "failed_jobs"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 3,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38",
                "positionX": 495,
                "positionY": 495,
                "sectionId": 2,
                "removed": false
            },
            "item_4": {
                "projectId": 1,
                "name": "job_batches",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "migrationName": "0001_01_01_000002_create_jobs_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000002",
                        "createdTables": [
                            "jobs",
                            "job_batches",
                            "failed_jobs"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "job_batches",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "migrationName": "0001_01_01_000002_create_jobs_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000002",
                            "createdTables": [
                                "jobs",
                                "job_batches",
                                "failed_jobs"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 4,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38",
                "positionX": 700,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_5": {
                "projectId": 1,
                "name": "jobs",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                        "migrationName": "0001_01_01_000002_create_jobs_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000002",
                        "createdTables": [
                            "jobs",
                            "job_batches",
                            "failed_jobs"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "jobs",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000002_create_jobs_table.php",
                            "migrationName": "0001_01_01_000002_create_jobs_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000002",
                            "createdTables": [
                                "jobs",
                                "job_batches",
                                "failed_jobs"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 5,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38",
                "positionX": 495,
                "positionY": -495,
                "sectionId": 2,
                "removed": false
            },
            "item_6": {
                "projectId": 1,
                "name": "migrations",
                "migrations": [],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "migrations",
                    "oldNames": [],
                    "migrations": []
                },
                "id": 6,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38",
                "positionX": 0,
                "positionY": -700,
                "sectionId": 2,
                "removed": false
            },
            "item_7": {
                "projectId": 1,
                "name": "password_reset_tokens",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/0001_01_01_000000_create_users_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                        "migrationName": "0001_01_01_000000_create_users_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000000",
                        "createdTables": [
                            "users",
                            "password_reset_tokens",
                            "sessions"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "password_reset_tokens",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/0001_01_01_000000_create_users_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                            "migrationName": "0001_01_01_000000_create_users_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000000",
                            "createdTables": [
                                "users",
                                "password_reset_tokens",
                                "sessions"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 7,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38",
                "positionX": -495,
                "positionY": -495,
                "sectionId": 2,
                "removed": false
            },
            "item_8": {
                "projectId": 1,
                "name": "sessions",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/0001_01_01_000000_create_users_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                        "migrationName": "0001_01_01_000000_create_users_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000000",
                        "createdTables": [
                            "users",
                            "password_reset_tokens",
                            "sessions"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "sessions",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/0001_01_01_000000_create_users_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                            "migrationName": "0001_01_01_000000_create_users_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000000",
                            "createdTables": [
                                "users",
                                "password_reset_tokens",
                                "sessions"
                            ],
                            "changedTables": []
                        }
                    ]
                },
                "id": 8,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38",
                "positionX": -700,
                "positionY": 0,
                "sectionId": 2,
                "removed": false
            },
            "item_9": {
                "projectId": 1,
                "name": "users",
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/0001_01_01_000000_create_users_table.php",
                        "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                        "migrationName": "0001_01_01_000000_create_users_table",
                        "datePrefix": "0001_01_01",
                        "fullPrefix": "0001_01_01_000000",
                        "createdTables": [
                            "users",
                            "password_reset_tokens",
                            "sessions"
                        ],
                        "changedTables": []
                    },
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/2025_08_07_162121_006_update_users_table.php",
                        "relativePath": "/database/migrations/2025_08_07_162121_006_update_users_table.php",
                        "migrationName": "2025_08_07_162121_006_update_users_table",
                        "datePrefix": "2025_08_07",
                        "fullPrefix": "2025_08_07_162121",
                        "createdTables": [],
                        "changedTables": [
                            "users"
                        ]
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "users",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/0001_01_01_000000_create_users_table.php",
                            "relativePath": "/database/migrations/0001_01_01_000000_create_users_table.php",
                            "migrationName": "0001_01_01_000000_create_users_table",
                            "datePrefix": "0001_01_01",
                            "fullPrefix": "0001_01_01_000000",
                            "createdTables": [
                                "users",
                                "password_reset_tokens",
                                "sessions"
                            ],
                            "changedTables": []
                        },
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/2025_08_07_162121_006_update_users_table.php",
                            "relativePath": "/database/migrations/2025_08_07_162121_006_update_users_table.php",
                            "migrationName": "2025_08_07_162121_006_update_users_table",
                            "datePrefix": "2025_08_07",
                            "fullPrefix": "2025_08_07_162121",
                            "createdTables": [],
                            "changedTables": [
                                "users"
                            ]
                        }
                    ]
                },
                "id": 9,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38",
                "positionX": "-585.222",
                "positionY": "86.3333",
                "sectionId": 1,
                "removed": false
            },
            "item_10": {
                "projectId": 1,
                "sectionId": 1,
                "name": "tours",
                "createdFromInterface": false,
                "id": 10,
                "createdAt": "2025-08-07 17:52:00",
                "updatedAt": "2025-08-07 18:21:38",
                "positionX": "-594",
                "positionY": "-460.429",
                "removed": false,
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/2025_08_07_162120_001_create_tours_table.php",
                        "relativePath": "/database/migrations/2025_08_07_162120_001_create_tours_table.php",
                        "migrationName": "2025_08_07_162120_001_create_tours_table",
                        "datePrefix": "2025_08_07",
                        "fullPrefix": "2025_08_07_162120",
                        "createdTables": [
                            "tours"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "tours",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/2025_08_07_162120_001_create_tours_table.php",
                            "relativePath": "/database/migrations/2025_08_07_162120_001_create_tours_table.php",
                            "migrationName": "2025_08_07_162120_001_create_tours_table",
                            "datePrefix": "2025_08_07",
                            "fullPrefix": "2025_08_07_162120",
                            "createdTables": [
                                "tours"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_12": {
                "projectId": 1,
                "sectionId": 1,
                "name": "reservations",
                "createdFromInterface": false,
                "id": 12,
                "createdAt": "2025-08-07 17:53:51",
                "updatedAt": "2025-08-07 18:21:38",
                "positionX": "-1045.11",
                "positionY": "-97.6667",
                "removed": false,
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/2025_08_07_162121_003_create_reservations_table.php",
                        "relativePath": "/database/migrations/2025_08_07_162121_003_create_reservations_table.php",
                        "migrationName": "2025_08_07_162121_003_create_reservations_table",
                        "datePrefix": "2025_08_07",
                        "fullPrefix": "2025_08_07_162121",
                        "createdTables": [
                            "reservations"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "reservations",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/2025_08_07_162121_003_create_reservations_table.php",
                            "relativePath": "/database/migrations/2025_08_07_162121_003_create_reservations_table.php",
                            "migrationName": "2025_08_07_162121_003_create_reservations_table",
                            "datePrefix": "2025_08_07",
                            "fullPrefix": "2025_08_07_162121",
                            "createdTables": [
                                "reservations"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_13": {
                "projectId": 1,
                "sectionId": 1,
                "name": "reviews",
                "createdFromInterface": false,
                "id": 13,
                "createdAt": "2025-08-07 17:56:08",
                "updatedAt": "2025-08-07 18:21:38",
                "positionX": "-80.2222",
                "positionY": "-111.333",
                "removed": false,
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/2025_08_07_162121_004_create_reviews_table.php",
                        "relativePath": "/database/migrations/2025_08_07_162121_004_create_reviews_table.php",
                        "migrationName": "2025_08_07_162121_004_create_reviews_table",
                        "datePrefix": "2025_08_07",
                        "fullPrefix": "2025_08_07_162121",
                        "createdTables": [
                            "reviews"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "reviews",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/2025_08_07_162121_004_create_reviews_table.php",
                            "relativePath": "/database/migrations/2025_08_07_162121_004_create_reviews_table.php",
                            "migrationName": "2025_08_07_162121_004_create_reviews_table",
                            "datePrefix": "2025_08_07",
                            "fullPrefix": "2025_08_07_162121",
                            "createdTables": [
                                "reviews"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_14": {
                "projectId": 1,
                "sectionId": 1,
                "name": "categories",
                "createdFromInterface": false,
                "id": 14,
                "createdAt": "2025-08-07 17:57:10",
                "updatedAt": "2025-08-07 18:21:38",
                "positionX": "-1380",
                "positionY": "-448",
                "removed": false,
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/2025_08_07_162121_002_create_categories_table.php",
                        "relativePath": "/database/migrations/2025_08_07_162121_002_create_categories_table.php",
                        "migrationName": "2025_08_07_162121_002_create_categories_table",
                        "datePrefix": "2025_08_07",
                        "fullPrefix": "2025_08_07_162121",
                        "createdTables": [
                            "categories"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "labelColumnId": null,
                "schemaState": {
                    "name": "categories",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/2025_08_07_162121_002_create_categories_table.php",
                            "relativePath": "/database/migrations/2025_08_07_162121_002_create_categories_table.php",
                            "migrationName": "2025_08_07_162121_002_create_categories_table",
                            "datePrefix": "2025_08_07",
                            "fullPrefix": "2025_08_07_162121",
                            "createdTables": [
                                "categories"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            },
            "item_15": {
                "projectId": 1,
                "name": "category_tour",
                "sectionId": 1,
                "id": 15,
                "createdAt": "2025-08-07 18:03:15",
                "updatedAt": "2025-08-07 18:21:38",
                "positionX": "-992",
                "positionY": "-362",
                "removed": false,
                "migrations": [
                    {
                        "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/2025_08_07_162121_005_create_category_tour_table.php",
                        "relativePath": "/database/migrations/2025_08_07_162121_005_create_category_tour_table.php",
                        "migrationName": "2025_08_07_162121_005_create_category_tour_table",
                        "datePrefix": "2025_08_07",
                        "fullPrefix": "2025_08_07_162121",
                        "createdTables": [
                            "category_tour"
                        ],
                        "changedTables": []
                    }
                ],
                "oldNames": [],
                "createdFromInterface": false,
                "labelColumnId": null,
                "schemaState": {
                    "name": "category_tour",
                    "oldNames": [],
                    "migrations": [
                        {
                            "migration": "C:\\Users\\gacic\\OneDrive\\Радна површина\\LakiranjeAutomobila\\TuristickaOrganizacija/database/migrations/2025_08_07_162121_005_create_category_tour_table.php",
                            "relativePath": "/database/migrations/2025_08_07_162121_005_create_category_tour_table.php",
                            "migrationName": "2025_08_07_162121_005_create_category_tour_table",
                            "datePrefix": "2025_08_07",
                            "fullPrefix": "2025_08_07_162121",
                            "createdTables": [
                                "category_tour"
                            ],
                            "changedTables": []
                        }
                    ]
                }
            }
        },
        "columns": {
            "item_1": {
                "name": "key",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "key",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 1,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "__tableData": {
                "count": 83,
                "lastPrimaryKey": 89,
                "index": {
                    "1": {
                        "hasMany": {
                            "index_column.columnId": [
                                1
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {
                            "index_column.columnId": [
                                2
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {
                            "index_column.columnId": [
                                3
                            ]
                        }
                    },
                    "15": {
                        "hasMany": {}
                    },
                    "16": {
                        "hasMany": {}
                    },
                    "17": {
                        "hasMany": {}
                    },
                    "18": {
                        "hasMany": {}
                    },
                    "19": {
                        "hasMany": {}
                    },
                    "20": {
                        "hasMany": {}
                    },
                    "21": {
                        "hasMany": {}
                    },
                    "22": {
                        "hasMany": {}
                    },
                    "23": {
                        "hasMany": {}
                    },
                    "24": {
                        "hasMany": {}
                    },
                    "25": {
                        "hasMany": {}
                    },
                    "26": {
                        "hasMany": {}
                    },
                    "27": {
                        "hasMany": {}
                    },
                    "28": {
                        "hasMany": {}
                    },
                    "29": {
                        "hasMany": {}
                    },
                    "30": {
                        "hasMany": {}
                    },
                    "31": {
                        "hasMany": {}
                    },
                    "32": {
                        "hasMany": {}
                    },
                    "33": {
                        "hasMany": {}
                    },
                    "34": {
                        "hasMany": {
                            "index_column.columnId": [
                                4
                            ]
                        }
                    },
                    "35": {
                        "hasMany": {}
                    },
                    "36": {
                        "hasMany": {}
                    },
                    "37": {
                        "hasMany": {
                            "index_column.columnId": [
                                5
                            ]
                        }
                    },
                    "38": {
                        "hasMany": {}
                    },
                    "39": {
                        "hasMany": {}
                    },
                    "40": {
                        "hasMany": {}
                    },
                    "41": {
                        "hasMany": {}
                    },
                    "42": {
                        "hasMany": {}
                    },
                    "43": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                7,
                                11
                            ],
                            "relationships.parentKeyId": [
                                3,
                                4,
                                9,
                                10
                            ]
                        }
                    },
                    "44": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                1
                            ],
                            "cruds.defaultSearchColumnId": [
                                1
                            ],
                            "inputs.columnId": [
                                1
                            ]
                        }
                    },
                    "45": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                2
                            ],
                            "inputs.columnId": [
                                2
                            ]
                        }
                    },
                    "46": {
                        "hasMany": {
                            "casts_model_column.columnId": [
                                1
                            ]
                        }
                    },
                    "47": {
                        "hasMany": {
                            "fillable_model_column.columnId": [
                                3
                            ],
                            "hidden_model_column.columnId": [
                                1
                            ],
                            "casts_model_column.columnId": [
                                2
                            ],
                            "inputs.columnId": [
                                4
                            ]
                        }
                    },
                    "48": {
                        "hasMany": {
                            "hidden_model_column.columnId": [
                                2
                            ]
                        }
                    },
                    "49": {
                        "hasMany": {}
                    },
                    "50": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                1
                            ]
                        }
                    },
                    "51": {
                        "hasMany": {
                            "inputs.columnId": [
                                5
                            ]
                        }
                    },
                    "52": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                8,
                                10,
                                12
                            ],
                            "relationships.parentKeyId": [
                                5,
                                6,
                                11,
                                12
                            ]
                        }
                    },
                    "53": {
                        "hasMany": {}
                    },
                    "54": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                4
                            ]
                        }
                    },
                    "55": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                4
                            ],
                            "inputs.columnId": [
                                12
                            ]
                        }
                    },
                    "56": {
                        "hasMany": {
                            "inputs.columnId": [
                                13
                            ]
                        }
                    },
                    "57": {
                        "hasMany": {
                            "inputs.columnId": [
                                14
                            ]
                        }
                    },
                    "58": {
                        "hasMany": {
                            "inputs.columnId": [
                                15
                            ]
                        }
                    },
                    "59": {
                        "hasMany": {
                            "inputs.columnId": [
                                16
                            ]
                        }
                    },
                    "60": {
                        "hasMany": {
                            "inputs.columnId": [
                                17
                            ]
                        }
                    },
                    "61": {
                        "hasMany": {
                            "inputs.columnId": [
                                18
                            ]
                        }
                    },
                    "66": {
                        "hasMany": {}
                    },
                    "67": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                2,
                                5,
                                8
                            ]
                        }
                    },
                    "68": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                2,
                                5,
                                8
                            ]
                        }
                    },
                    "69": {
                        "hasMany": {
                            "index_column.columnId": [
                                7
                            ],
                            "relationships.foreignKeyId": [
                                3,
                                4
                            ],
                            "inputs.columnId": [
                                19,
                                26
                            ]
                        }
                    },
                    "70": {
                        "hasMany": {
                            "index_column.columnId": [
                                8
                            ],
                            "relationships.foreignKeyId": [
                                5,
                                6
                            ],
                            "inputs.columnId": [
                                6,
                                27
                            ]
                        }
                    },
                    "71": {
                        "hasMany": {
                            "inputs.columnId": [
                                7,
                                20,
                                28
                            ]
                        }
                    },
                    "73": {
                        "hasMany": {
                            "inputs.columnId": [
                                8,
                                21,
                                29
                            ]
                        }
                    },
                    "74": {
                        "hasMany": {}
                    },
                    "75": {
                        "hasMany": {}
                    },
                    "76": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                3,
                                6,
                                9
                            ]
                        }
                    },
                    "77": {
                        "hasMany": {
                            "index_column.columnId": [
                                11
                            ],
                            "relationships.foreignKeyId": [
                                9,
                                10
                            ],
                            "inputs.columnId": [
                                22,
                                30
                            ]
                        }
                    },
                    "78": {
                        "hasMany": {
                            "index_column.columnId": [
                                12
                            ],
                            "relationships.foreignKeyId": [
                                11,
                                12
                            ],
                            "inputs.columnId": [
                                9,
                                31
                            ]
                        }
                    },
                    "79": {
                        "hasMany": {
                            "inputs.columnId": [
                                10,
                                23,
                                32
                            ]
                        }
                    },
                    "80": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                3,
                                6,
                                9
                            ],
                            "inputs.columnId": [
                                11,
                                24,
                                33
                            ]
                        }
                    },
                    "81": {
                        "hasMany": {
                            "indices.referencesColumnId": [
                                9
                            ],
                            "relationships.parentKeyId": []
                        }
                    },
                    "82": {
                        "hasMany": {}
                    },
                    "83": {
                        "hasMany": {
                            "cruds.defaultSortColumnId": [
                                10
                            ]
                        }
                    },
                    "84": {
                        "hasMany": {
                            "cruds.defaultSearchColumnId": [
                                10
                            ],
                            "inputs.columnId": [
                                34
                            ]
                        }
                    },
                    "85": {
                        "hasMany": {
                            "inputs.columnId": [
                                35
                            ]
                        }
                    },
                    "87": {
                        "hasMany": {
                            "index_column.columnId": [
                                9
                            ],
                            "relationships.foreignPivotKeyId": [
                                8
                            ],
                            "relationships.relatedPivotKeyId": [
                                7
                            ],
                            "inputs.columnId": [
                                25
                            ]
                        }
                    },
                    "88": {
                        "hasMany": {
                            "index_column.columnId": [
                                10
                            ],
                            "relationships.relatedPivotKeyId": [
                                8
                            ],
                            "relationships.foreignPivotKeyId": [
                                7
                            ],
                            "inputs.columnId": [
                                36
                            ]
                        }
                    },
                    "89": {
                        "hasMany": {
                            "inputs.columnId": [
                                3
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "value",
                "type": "mediumText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "value",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "mediumText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 2,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_3": {
                "name": "expiration",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 1,
                "removed": false,
                "schemaState": {
                    "name": "expiration",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 3,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_4": {
                "name": "key",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 2,
                "removed": false,
                "schemaState": {
                    "name": "key",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 4,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_5": {
                "name": "owner",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 2,
                "removed": false,
                "schemaState": {
                    "name": "owner",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 5,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_6": {
                "name": "expiration",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 2,
                "removed": false,
                "schemaState": {
                    "name": "expiration",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 6,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_7": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 7,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_8": {
                "name": "uuid",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": true,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "uuid",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": true,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->uuid()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 8,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_9": {
                "name": "connection",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "connection",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 9,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_10": {
                "name": "queue",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "queue",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 10,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_11": {
                "name": "payload",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "payload",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 11,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_12": {
                "name": "exception",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "exception",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 12,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_13": {
                "name": "failed_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 3,
                "removed": false,
                "schemaState": {
                    "name": "failed_at",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": "CURRENT_TIMESTAMP",
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": "CURRENT_TIMESTAMP",
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 13,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_14": {
                "name": "id",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 14,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_15": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 15,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_16": {
                "name": "total_jobs",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "total_jobs",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 16,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_17": {
                "name": "pending_jobs",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "pending_jobs",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 17,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_18": {
                "name": "failed_jobs",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "failed_jobs",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 18,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_19": {
                "name": "failed_job_ids",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "failed_job_ids",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 19,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_20": {
                "name": "options",
                "type": "mediumText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "options",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "mediumText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "[]",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 20,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_21": {
                "name": "cancelled_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "cancelled_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 7,
                "total": null,
                "places": null,
                "options": [],
                "id": 21,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_22": {
                "name": "created_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 8,
                "total": null,
                "places": null,
                "options": [],
                "id": 22,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_23": {
                "name": "finished_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 4,
                "removed": false,
                "schemaState": {
                    "name": "finished_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 9,
                "total": null,
                "places": null,
                "options": [],
                "id": 23,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_24": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 24,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_25": {
                "name": "queue",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "queue",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 25,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_26": {
                "name": "payload",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "payload",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 26,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_27": {
                "name": "attempts",
                "type": "tinyInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "attempts",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "tinyInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->numberBetween(0, 127)",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 27,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_28": {
                "name": "reserved_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "reserved_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 28,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_29": {
                "name": "available_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "available_at",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 29,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_30": {
                "name": "created_at",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 5,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 30,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_31": {
                "name": "id",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 31,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_32": {
                "name": "migration",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "migration",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 32,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_33": {
                "name": "batch",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 6,
                "removed": false,
                "schemaState": {
                    "name": "batch",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 33,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_34": {
                "name": "email",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "email",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->unique()->safeEmail()",
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 34,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_35": {
                "name": "token",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "token",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 35,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_36": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 7,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 36,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_37": {
                "name": "id",
                "type": "string",
                "index": true,
                "length": "255",
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 37,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_38": {
                "name": "user_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "user_id",
                    "length": null,
                    "nullable": true,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 38,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_39": {
                "name": "ip_address",
                "type": "string",
                "index": false,
                "length": "45",
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "ip_address",
                    "length": "45",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->ipv4()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 39,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_40": {
                "name": "user_agent",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "user_agent",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->userAgent()",
                "order": 3,
                "total": null,
                "places": null,
                "options": [],
                "id": 40,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_41": {
                "name": "payload",
                "type": "longText",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "payload",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "longText",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 41,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_42": {
                "name": "last_activity",
                "type": "integer",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 8,
                "removed": false,
                "schemaState": {
                    "name": "last_activity",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 42,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_43": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "total": null,
                "places": null,
                "options": [],
                "id": 43,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_44": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "order": 1,
                "total": null,
                "places": null,
                "options": [],
                "id": 44,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_45": {
                "name": "email",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": true,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "email",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": true,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->unique()->safeEmail()",
                "order": 2,
                "total": null,
                "places": null,
                "options": [],
                "id": 45,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_46": {
                "name": "email_verified_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "email_verified_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "now()",
                "order": 4,
                "total": null,
                "places": null,
                "options": [],
                "id": 46,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_47": {
                "name": "password",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "password",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "\\Hash::make('password')",
                "order": 5,
                "total": null,
                "places": null,
                "options": [],
                "id": 47,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_48": {
                "name": "remember_token",
                "type": "string",
                "index": false,
                "length": "100",
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "remember_token",
                    "length": "100",
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "Str::random(10)",
                "order": 6,
                "total": null,
                "places": null,
                "options": [],
                "id": 48,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_49": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 8,
                "total": null,
                "places": null,
                "options": [],
                "id": 49,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_50": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 9,
                "total": null,
                "places": null,
                "options": [],
                "id": 50,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38"
            },
            "item_51": {
                "name": "role",
                "type": "enum",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "role",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "enum",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": [
                        "user",
                        "admin",
                        "manager"
                    ]
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->word()",
                "id": 51,
                "createdAt": "2025-08-07 17:50:56",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 7,
                "options": [
                    "user",
                    "admin",
                    "manager"
                ],
                "total": null,
                "places": null
            },
            "item_52": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "id": 52,
                "createdAt": "2025-08-07 17:52:00",
                "updatedAt": "2025-08-07 18:21:38",
                "total": null,
                "places": null,
                "options": []
            },
            "item_53": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 8,
                "id": 53,
                "createdAt": "2025-08-07 17:52:00",
                "updatedAt": "2025-08-07 18:21:38",
                "total": null,
                "places": null,
                "options": []
            },
            "item_54": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 9,
                "id": 54,
                "createdAt": "2025-08-07 17:52:00",
                "updatedAt": "2025-08-07 18:21:38",
                "total": null,
                "places": null,
                "options": []
            },
            "item_55": {
                "name": "title",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "title",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->sentence(10)",
                "id": 55,
                "createdAt": "2025-08-07 17:52:12",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_56": {
                "name": "description",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "description",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->sentence(15)",
                "id": 56,
                "createdAt": "2025-08-07 17:52:21",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_57": {
                "name": "location",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "location",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text({LENGTH})",
                "id": 57,
                "createdAt": "2025-08-07 17:52:24",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 3,
                "total": null,
                "places": null,
                "options": []
            },
            "item_58": {
                "name": "price",
                "type": "decimal",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "price",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "decimal",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": 8,
                    "places": 2,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomFloat(2, 0, 9999)",
                "id": 58,
                "createdAt": "2025-08-07 17:52:35",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 4,
                "total": 8,
                "places": 2,
                "options": []
            },
            "item_59": {
                "name": "start_date",
                "type": "date",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "start_date",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "date",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->date()",
                "id": 59,
                "createdAt": "2025-08-07 17:52:41",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 5,
                "total": null,
                "places": null,
                "options": []
            },
            "item_60": {
                "name": "end_date",
                "type": "date",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "end_date",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "date",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->date()",
                "id": 60,
                "createdAt": "2025-08-07 17:52:49",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 6,
                "total": null,
                "places": null,
                "options": []
            },
            "item_61": {
                "name": "max_participants",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 10,
                "removed": false,
                "schemaState": {
                    "name": "max_participants",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "id": 61,
                "createdAt": "2025-08-07 17:53:00",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 7,
                "total": null,
                "places": null,
                "options": []
            },
            "item_66": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "id": 66,
                "createdAt": "2025-08-07 17:53:51",
                "updatedAt": "2025-08-07 18:21:38",
                "total": null,
                "places": null,
                "options": []
            },
            "item_67": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 5,
                "id": 67,
                "createdAt": "2025-08-07 17:53:51",
                "updatedAt": "2025-08-07 18:21:38",
                "total": null,
                "places": null,
                "options": []
            },
            "item_68": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 6,
                "id": 68,
                "createdAt": "2025-08-07 17:53:51",
                "updatedAt": "2025-08-07 18:21:38",
                "total": null,
                "places": null,
                "options": []
            },
            "item_69": {
                "name": "user_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "user_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 69,
                "createdAt": "2025-08-07 17:54:05",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_70": {
                "name": "tour_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "tour_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 70,
                "createdAt": "2025-08-07 17:54:18",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_71": {
                "name": "status",
                "type": "enum",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "status",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "enum",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": [
                        "placed",
                        "confirmed",
                        "canceled"
                    ]
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->word()",
                "id": 71,
                "createdAt": "2025-08-07 17:54:51",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 3,
                "options": [
                    "placed",
                    "confirmed",
                    "canceled"
                ],
                "total": null,
                "places": null
            },
            "item_73": {
                "name": "number_of_people",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 12,
                "removed": false,
                "schemaState": {
                    "name": "number_of_people",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber(0)",
                "id": 73,
                "createdAt": "2025-08-07 17:55:34",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 4,
                "total": null,
                "places": null,
                "options": []
            },
            "item_74": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "id": 74,
                "createdAt": "2025-08-07 17:56:08",
                "updatedAt": "2025-08-07 18:21:38",
                "total": null,
                "places": null,
                "options": []
            },
            "item_75": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 5,
                "id": 75,
                "createdAt": "2025-08-07 17:56:08",
                "updatedAt": "2025-08-07 18:21:38",
                "total": null,
                "places": null,
                "options": []
            },
            "item_76": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 6,
                "id": 76,
                "createdAt": "2025-08-07 17:56:08",
                "updatedAt": "2025-08-07 18:21:38",
                "total": null,
                "places": null,
                "options": []
            },
            "item_77": {
                "name": "user_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "user_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 77,
                "createdAt": "2025-08-07 17:56:15",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_78": {
                "name": "tour_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "tour_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 78,
                "createdAt": "2025-08-07 17:56:23",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_79": {
                "name": "rating",
                "type": "integer",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "rating",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "integer",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomFloat(1, 1, 5)",
                "id": 79,
                "createdAt": "2025-08-07 17:56:41",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 3,
                "total": null,
                "places": null,
                "options": []
            },
            "item_80": {
                "name": "comment",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 13,
                "removed": false,
                "schemaState": {
                    "name": "comment",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->text()",
                "id": 80,
                "createdAt": "2025-08-07 17:56:58",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 4,
                "total": null,
                "places": null,
                "options": []
            },
            "item_81": {
                "name": "id",
                "type": "bigInteger",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 14,
                "removed": false,
                "schemaState": {
                    "name": "id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": true,
                    "type": "bigInteger",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": true,
                "order": 0,
                "id": 81,
                "createdAt": "2025-08-07 17:57:10",
                "updatedAt": "2025-08-07 18:21:38",
                "total": null,
                "places": null,
                "options": []
            },
            "item_82": {
                "name": "created_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 14,
                "removed": false,
                "schemaState": {
                    "name": "created_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 3,
                "id": 82,
                "createdAt": "2025-08-07 17:57:10",
                "updatedAt": "2025-08-07 18:21:38",
                "total": null,
                "places": null,
                "options": []
            },
            "item_83": {
                "name": "updated_at",
                "type": "timestamp",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 14,
                "removed": false,
                "schemaState": {
                    "name": "updated_at",
                    "length": null,
                    "nullable": true,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "timestamp",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": true,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->dateTime()",
                "order": 4,
                "id": 83,
                "createdAt": "2025-08-07 17:57:10",
                "updatedAt": "2025-08-07 18:21:38",
                "total": null,
                "places": null,
                "options": []
            },
            "item_84": {
                "name": "name",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 14,
                "removed": false,
                "schemaState": {
                    "name": "name",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->name()",
                "id": 84,
                "createdAt": "2025-08-07 17:57:15",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_85": {
                "name": "description",
                "type": "text",
                "index": false,
                "length": null,
                "unique": false,
                "tableId": 14,
                "removed": false,
                "schemaState": {
                    "name": "description",
                    "length": null,
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "text",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->sentence(15)",
                "id": 85,
                "createdAt": "2025-08-07 17:57:18",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 2,
                "total": null,
                "places": null,
                "options": []
            },
            "item_87": {
                "name": "category_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "category_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 87,
                "createdAt": "2025-08-07 18:03:15",
                "updatedAt": "2025-08-07 18:25:14",
                "order": 0,
                "total": null,
                "places": null,
                "options": []
            },
            "item_88": {
                "name": "tour_id",
                "type": "bigInteger",
                "index": true,
                "length": null,
                "unique": false,
                "tableId": 15,
                "removed": false,
                "schemaState": {
                    "name": "tour_id",
                    "length": null,
                    "nullable": false,
                    "unsigned": true,
                    "autoIncrement": false,
                    "type": "bigInteger",
                    "index": true,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": true,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->randomNumber()",
                "id": 88,
                "createdAt": "2025-08-07 18:03:15",
                "updatedAt": "2025-08-07 18:25:14",
                "order": 1,
                "total": null,
                "places": null,
                "options": []
            },
            "item_89": {
                "name": "phone_number",
                "type": "string",
                "index": false,
                "length": "255",
                "unique": false,
                "tableId": 9,
                "removed": false,
                "schemaState": {
                    "name": "phone_number",
                    "length": "255",
                    "nullable": false,
                    "unsigned": false,
                    "autoIncrement": false,
                    "type": "string",
                    "index": false,
                    "unique": false,
                    "default": null,
                    "total": null,
                    "places": null,
                    "options": []
                },
                "nullable": false,
                "unsigned": false,
                "default": null,
                "autoIncrement": false,
                "faker": "fake()->phoneNumber()",
                "id": 89,
                "createdAt": "2025-08-07 18:06:37",
                "updatedAt": "2025-08-07 18:21:38",
                "order": 3,
                "total": null,
                "places": null,
                "options": []
            }
        },
        "indices": {
            "item_1": {
                "tableId": 1,
                "name": "",
                "columns": [
                    "key"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "key"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 1,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38",
                "removed": false
            },
            "__tableData": {
                "count": 11,
                "lastPrimaryKey": 12,
                "index": {
                    "1": {
                        "hasMany": {
                            "index_column.indexId": [
                                1
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "index_column.indexId": [
                                2
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "index_column.indexId": [
                                3
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "index_column.indexId": [
                                4
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "index_column.indexId": [
                                5
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "index_column.indexId": [
                                7
                            ]
                        }
                    },
                    "8": {
                        "hasMany": {
                            "index_column.indexId": [
                                8
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "index_column.indexId": [
                                9
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {
                            "index_column.indexId": [
                                10
                            ]
                        }
                    },
                    "11": {
                        "hasMany": {
                            "index_column.indexId": [
                                11
                            ]
                        }
                    },
                    "12": {
                        "hasMany": {
                            "index_column.indexId": [
                                12
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "tableId": 2,
                "name": "",
                "columns": [
                    "key"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "key"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 2,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 18:21:38",
                "removed": false
            },
            "item_3": {
                "tableId": 4,
                "name": "",
                "columns": [
                    "id"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "id"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 3,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 18:21:38",
                "removed": false
            },
            "item_4": {
                "tableId": 7,
                "name": "",
                "columns": [
                    "email"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "email"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 4,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 18:21:38",
                "removed": false
            },
            "item_5": {
                "tableId": 8,
                "name": "",
                "columns": [
                    "id"
                ],
                "algorithm": null,
                "type": "primary",
                "on": null,
                "references": null,
                "onUpdate": null,
                "onDelete": null,
                "schemaState": {
                    "name": "",
                    "columns": [
                        "id"
                    ],
                    "algorithm": null,
                    "type": "primary",
                    "on": null,
                    "references": null,
                    "onUpdate": null,
                    "onDelete": null
                },
                "id": 5,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 18:21:38",
                "removed": false
            },
            "item_7": {
                "tableId": 12,
                "name": "reservations_user_id_foreign",
                "columns": [
                    "user_id"
                ],
                "type": "foreign",
                "on": "users",
                "onTableId": 9,
                "references": "id",
                "referencesColumnId": 43,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 7,
                "createdAt": "2025-08-07 18:01:05",
                "updatedAt": "2025-08-07 18:21:38",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "reservations_user_id_foreign",
                    "columns": [
                        "user_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "users",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_8": {
                "tableId": 12,
                "name": "reservations_tour_id_foreign",
                "columns": [
                    "tour_id"
                ],
                "type": "foreign",
                "on": "tours",
                "onTableId": 10,
                "references": "id",
                "referencesColumnId": 52,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 8,
                "createdAt": "2025-08-07 18:01:40",
                "updatedAt": "2025-08-07 18:21:38",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "reservations_tour_id_foreign",
                    "columns": [
                        "tour_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "tours",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_9": {
                "tableId": 15,
                "name": "category_tour_category_id_foreign",
                "columns": [
                    "category_id"
                ],
                "type": "foreign",
                "on": "categories",
                "onTableId": 14,
                "references": "id",
                "referencesColumnId": 81,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 9,
                "createdAt": "2025-08-07 18:03:15",
                "updatedAt": "2025-08-07 18:21:38",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "category_tour_category_id_foreign",
                    "columns": [
                        "category_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "categories",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_10": {
                "tableId": 15,
                "name": "category_tour_tour_id_foreign",
                "columns": [
                    "tour_id"
                ],
                "type": "foreign",
                "on": "tours",
                "onTableId": 10,
                "references": "id",
                "referencesColumnId": 52,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 10,
                "createdAt": "2025-08-07 18:03:15",
                "updatedAt": "2025-08-07 18:21:38",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "category_tour_tour_id_foreign",
                    "columns": [
                        "tour_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "tours",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_11": {
                "tableId": 13,
                "name": "reviews_user_id_foreign",
                "columns": [
                    "user_id"
                ],
                "type": "foreign",
                "on": "users",
                "onTableId": 9,
                "references": "id",
                "referencesColumnId": 43,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 11,
                "createdAt": "2025-08-07 18:04:24",
                "updatedAt": "2025-08-07 18:21:38",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "reviews_user_id_foreign",
                    "columns": [
                        "user_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "users",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            },
            "item_12": {
                "tableId": 13,
                "name": "reviews_tour_id_foreign",
                "columns": [
                    "tour_id"
                ],
                "type": "foreign",
                "on": "tours",
                "onTableId": 10,
                "references": "id",
                "referencesColumnId": 52,
                "onUpdate": "cascade",
                "onDelete": "cascade",
                "id": 12,
                "createdAt": "2025-08-07 18:04:30",
                "updatedAt": "2025-08-07 18:21:38",
                "removed": false,
                "algorithm": null,
                "schemaState": {
                    "name": "reviews_tour_id_foreign",
                    "columns": [
                        "tour_id"
                    ],
                    "algorithm": null,
                    "type": "foreign",
                    "on": "tours",
                    "references": "id",
                    "onUpdate": "cascade",
                    "onDelete": "cascade"
                }
            }
        },
        "index_column": {
            "item_1": {
                "indexId": 1,
                "columnId": 1,
                "id": 1,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 17:43:42"
            },
            "__tableData": {
                "count": 11,
                "lastPrimaryKey": 12,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "indexId": 2,
                "columnId": 4,
                "id": 2,
                "createdAt": "2025-08-07 17:43:42",
                "updatedAt": "2025-08-07 17:43:42"
            },
            "item_3": {
                "indexId": 3,
                "columnId": 14,
                "id": 3,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 17:43:43"
            },
            "item_4": {
                "indexId": 4,
                "columnId": 34,
                "id": 4,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 17:43:43"
            },
            "item_5": {
                "indexId": 5,
                "columnId": 37,
                "id": 5,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 17:43:43"
            },
            "item_7": {
                "indexId": 7,
                "columnId": 69,
                "id": 7,
                "createdAt": "2025-08-07 18:01:05",
                "updatedAt": "2025-08-07 18:01:05"
            },
            "item_8": {
                "indexId": 8,
                "columnId": 70,
                "id": 8,
                "createdAt": "2025-08-07 18:01:40",
                "updatedAt": "2025-08-07 18:01:40"
            },
            "item_9": {
                "indexId": 9,
                "columnId": 87,
                "id": 9,
                "createdAt": "2025-08-07 18:03:15",
                "updatedAt": "2025-08-07 18:03:15"
            },
            "item_10": {
                "indexId": 10,
                "columnId": 88,
                "id": 10,
                "createdAt": "2025-08-07 18:03:15",
                "updatedAt": "2025-08-07 18:03:15"
            },
            "item_11": {
                "indexId": 11,
                "columnId": 77,
                "id": 11,
                "createdAt": "2025-08-07 18:04:24",
                "updatedAt": "2025-08-07 18:04:24"
            },
            "item_12": {
                "indexId": 12,
                "columnId": 78,
                "id": 12,
                "createdAt": "2025-08-07 18:04:30",
                "updatedAt": "2025-08-07 18:04:30"
            }
        },
        "models": {
            "item_1": {
                "projectId": 1,
                "name": "User",
                "fileName": "User.php",
                "tableName": "users",
                "class": "App\\Models\\User",
                "namespace": "App\\Models",
                "path": "Models\\User.php",
                "casts": {
                    "email_verified_at": "datetime",
                    "password": "hashed"
                },
                "fillable": [
                    "name",
                    "email",
                    "password"
                ],
                "guarded": [
                    "*"
                ],
                "dates": [],
                "hidden": [
                    "password",
                    "remember_token"
                ],
                "appends": [],
                "methods": [],
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                "interfaces": [],
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Notifications\\Notifiable"
                ],
                "allImports": [
                    "Illuminate\\Notifications\\Notifiable",
                    "Illuminate\\Contracts\\Auth\\MustVerifyEmail",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                    "Illuminate\\Foundation\\Auth\\User as Authenticatable"
                ],
                "hasGuarded": false,
                "hasFillable": true,
                "hasTimestamps": true,
                "hasSoftDeletes": false,
                "isAuthenticatable": true,
                "schemaState": {
                    "name": "User",
                    "fileName": "User.php",
                    "tableName": "users",
                    "class": "App\\Models\\User",
                    "namespace": "App\\Models",
                    "path": "Models\\User.php",
                    "casts": {
                        "email_verified_at": "datetime",
                        "password": "hashed"
                    },
                    "fillable": [
                        "name",
                        "email",
                        "password"
                    ],
                    "guarded": [
                        "*"
                    ],
                    "dates": [],
                    "hidden": [
                        "password",
                        "remember_token"
                    ],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Foundation\\Auth\\User as Authenticatable",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Notifications\\Notifiable"
                    ],
                    "allImports": [
                        "Illuminate\\Notifications\\Notifiable",
                        "Illuminate\\Contracts\\Auth\\MustVerifyEmail",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory",
                        "Illuminate\\Foundation\\Auth\\User as Authenticatable"
                    ],
                    "hasGuarded": false,
                    "hasFillable": true,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": true
                },
                "id": 1,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 18:25:14",
                "plural": "Users",
                "pluralAndSingularAreSame": false,
                "tableId": 9,
                "callSeeder": false,
                "seederQuantity": 5,
                "attributesComments": true,
                "methodsComments": true,
                "hooksWhenSchemaWasRead": {},
                "removed": false
            },
            "__tableData": {
                "count": 5,
                "lastPrimaryKey": 7,
                "index": {
                    "1": {
                        "hasMany": {
                            "fillable_model_column.modelId": [
                                1,
                                2,
                                3
                            ],
                            "hidden_model_column.modelId": [
                                1,
                                2
                            ],
                            "casts_model_column.modelId": [
                                1,
                                2
                            ],
                            "relationships.modelId": [
                                3,
                                9
                            ],
                            "relationships.relatedModelId": [
                                4,
                                10
                            ],
                            "cruds.modelId": [
                                1
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                6,
                                8,
                                12
                            ],
                            "relationships.modelId": [
                                5,
                                7,
                                11
                            ],
                            "cruds.modelId": [
                                4
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                3,
                                5
                            ],
                            "relationships.modelId": [
                                4,
                                6
                            ],
                            "cruds.modelId": [
                                2,
                                5,
                                8
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "relationships.relatedModelId": [
                                9,
                                11
                            ],
                            "relationships.modelId": [
                                10,
                                12
                            ],
                            "cruds.modelId": [
                                3,
                                6,
                                9
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "relationships.modelId": [
                                8
                            ],
                            "relationships.relatedModelId": [
                                7
                            ],
                            "cruds.modelId": [
                                10
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "tableId": 10,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "Tour",
                "plural": "Tours",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Tour",
                "fileName": "Tour.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 2,
                "createdAt": "2025-08-07 17:52:00",
                "updatedAt": "2025-08-07 18:25:14",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "tours",
                "path": "Models\\Tour.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Tour",
                    "fileName": "Tour.php",
                    "tableName": "tours",
                    "class": "App\\Models\\Tour",
                    "namespace": "App\\Models",
                    "path": "Models\\Tour.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_4": {
                "tableId": 12,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "Reservation",
                "plural": "Reservations",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Reservation",
                "fileName": "Reservation.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 4,
                "createdAt": "2025-08-07 17:53:51",
                "updatedAt": "2025-08-07 18:25:14",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "reservations",
                "path": "Models\\Reservation.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Reservation",
                    "fileName": "Reservation.php",
                    "tableName": "reservations",
                    "class": "App\\Models\\Reservation",
                    "namespace": "App\\Models",
                    "path": "Models\\Reservation.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_5": {
                "tableId": 13,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "Review",
                "plural": "Reviews",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Review",
                "fileName": "Review.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 5,
                "createdAt": "2025-08-07 17:56:08",
                "updatedAt": "2025-08-07 18:25:14",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "reviews",
                "path": "Models\\Review.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Review",
                    "fileName": "Review.php",
                    "tableName": "reviews",
                    "class": "App\\Models\\Review",
                    "namespace": "App\\Models",
                    "path": "Models\\Review.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            },
            "item_6": {
                "tableId": 14,
                "projectId": 1,
                "namespace": "App\\Models",
                "hasGuarded": true,
                "hasTimestamps": true,
                "guarded": [],
                "name": "Category",
                "plural": "Categories",
                "pluralAndSingularAreSame": false,
                "class": "App\\Models\\Category",
                "fileName": "Category.php",
                "createdFromInterface": false,
                "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                "traits": [
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "interfaces": [],
                "callSeeder": true,
                "seederQuantity": 5,
                "attributesComments": false,
                "methodsComments": false,
                "methods": [],
                "allImports": [
                    "Illuminate\\Database\\Eloquent\\Model",
                    "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                ],
                "fillable": [],
                "hidden": [],
                "dates": [],
                "casts": [],
                "appends": [],
                "id": 6,
                "createdAt": "2025-08-07 17:57:10",
                "updatedAt": "2025-08-07 18:25:14",
                "hooksWhenSchemaWasRead": {},
                "removed": false,
                "tableName": "categories",
                "path": "Models\\Category.php",
                "hasFillable": false,
                "hasSoftDeletes": false,
                "isAuthenticatable": false,
                "schemaState": {
                    "name": "Category",
                    "fileName": "Category.php",
                    "tableName": "categories",
                    "class": "App\\Models\\Category",
                    "namespace": "App\\Models",
                    "path": "Models\\Category.php",
                    "casts": [],
                    "fillable": [],
                    "guarded": [],
                    "dates": [],
                    "hidden": [],
                    "appends": [],
                    "methods": [],
                    "parentClass": "Illuminate\\Database\\Eloquent\\Model",
                    "interfaces": [],
                    "traits": [
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "allImports": [
                        "Illuminate\\Database\\Eloquent\\Model",
                        "Illuminate\\Database\\Eloquent\\Factories\\HasFactory"
                    ],
                    "hasGuarded": true,
                    "hasFillable": false,
                    "hasTimestamps": true,
                    "hasSoftDeletes": false,
                    "isAuthenticatable": false
                }
            }
        },
        "fillable_model_column": {
            "item_1": {
                "modelId": 1,
                "columnId": 44,
                "id": 1,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 17:43:43"
            },
            "__tableData": {
                "count": 3,
                "lastPrimaryKey": 3,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 1,
                "columnId": 45,
                "id": 2,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 17:43:43"
            },
            "item_3": {
                "modelId": 1,
                "columnId": 47,
                "id": 3,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 17:43:43"
            }
        },
        "hidden_model_column": {
            "item_1": {
                "modelId": 1,
                "columnId": 47,
                "id": 1,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 17:43:43"
            },
            "__tableData": {
                "count": 2,
                "lastPrimaryKey": 2,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 1,
                "columnId": 48,
                "id": 2,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 17:43:43"
            }
        },
        "casts_model_column": {
            "item_1": {
                "modelId": 1,
                "columnId": 46,
                "id": 1,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 17:43:43",
                "type": "datetime"
            },
            "__tableData": {
                "count": 2,
                "lastPrimaryKey": 2,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "modelId": 1,
                "columnId": 47,
                "id": 2,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 17:43:43",
                "type": "hashed"
            }
        },
        "app_sections": {
            "item_1": {
                "name": "Dashboard",
                "routePrefix": "dashboard",
                "routeBasePath": "dashboard",
                "projectId": 1,
                "requiresAuth": true,
                "id": 1,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 17:43:43"
            },
            "__tableData": {
                "count": 4,
                "lastPrimaryKey": 4,
                "index": {
                    "1": {
                        "hasMany": {
                            "cruds.sectionId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11
                            ],
                            "has_many_details.sectionId": [
                                1,
                                2,
                                3,
                                4
                            ],
                            "belongs_to_many_details.sectionId": [
                                1,
                                2
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "API",
                "routePrefix": "api",
                "routeBasePath": "api",
                "projectId": 1,
                "requiresAuth": true,
                "id": 2,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 17:43:43"
            },
            "item_3": {
                "name": "Site",
                "routePrefix": "",
                "routeBasePath": "",
                "projectId": 1,
                "requiresAuth": false,
                "id": 3,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 17:43:43"
            },
            "item_4": {
                "name": "Filament Panel",
                "routePrefix": "panel",
                "routeBasePath": "panel",
                "projectId": 1,
                "requiresAuth": false,
                "id": 4,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 17:43:43"
            }
        },
        "schema_sections": {
            "item_1": {
                "name": "App",
                "scrollX": 23776,
                "scrollY": 24484,
                "zoom": 70,
                "projectId": 1,
                "id": 1,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 18:25:02"
            },
            "__tableData": {
                "count": 2,
                "lastPrimaryKey": 2,
                "index": {
                    "1": {
                        "hasMany": {
                            "tables.sectionId": [
                                9,
                                10,
                                12,
                                13,
                                14,
                                15
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "tables.sectionId": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "Laravel",
                "scrollX": 0,
                "scrollY": 0,
                "zoom": 100,
                "projectId": 1,
                "id": 2,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 17:43:43"
            }
        },
        "navs": {
            "item_1": {
                "projectId": 1,
                "name": "navigation.home",
                "id": 1,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 17:43:43",
                "tag": "home"
            },
            "__tableData": {
                "count": 7,
                "lastPrimaryKey": 7,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {
                            "navs.parentNavId": [
                                3,
                                4,
                                5,
                                6,
                                7
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "projectId": 1,
                "name": "navigation.apps",
                "id": 2,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 17:43:43",
                "tag": "apps"
            },
            "item_3": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 1,
                "name": "navigation.users",
                "id": 3,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21",
                "parentNavId": 2
            },
            "item_4": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 4,
                "name": "navigation.tours",
                "id": 4,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25",
                "parentNavId": 2
            },
            "item_5": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 8,
                "name": "navigation.reservations",
                "id": 5,
                "createdAt": "2025-08-07 18:24:29",
                "updatedAt": "2025-08-07 18:24:29",
                "parentNavId": 2
            },
            "item_6": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 9,
                "name": "navigation.reviews",
                "id": 6,
                "createdAt": "2025-08-07 18:24:32",
                "updatedAt": "2025-08-07 18:24:32",
                "parentNavId": 2
            },
            "item_7": {
                "projectId": 1,
                "navigableType": "Crud",
                "navigableId": 10,
                "name": "navigation.categories",
                "id": 7,
                "createdAt": "2025-08-07 18:24:36",
                "updatedAt": "2025-08-07 18:24:36",
                "parentNavId": 2
            }
        },
        "renderable_files": {
            "item_1": {
                "path": "bootstrap",
                "name": "app.php",
                "fullPath": "bootstrap/app.php",
                "template": "laravel/BootstrapApp.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 1,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse Illuminate\\Foundation\\Application;\nuse Illuminate\\Foundation\\Configuration\\Exceptions;\nuse Illuminate\\Foundation\\Configuration\\Middleware;\n\nreturn Application::configure(basePath: dirname(__DIR__))\n    ->withProviders()\n    ->withRouting(\n        web: __DIR__ . '/../routes/web.php',\n        // api: __DIR__.'/../routes/api.php',\n        commands: __DIR__ . '/../routes/console.php',\n        // channels: __DIR__.'/../routes/channels.php',\n        health: '/up',\n\n        then: function () {\n            Route::middleware('web')->group(__DIR__ . '/../routes/app.php');\n            Route::middleware('api')->group(__DIR__ . '/../routes/app-api.php');\n        }\n    )\n    ->withMiddleware(function (Middleware $middleware) {\n        //\n    })\n    ->withExceptions(function (Exceptions $exceptions) {\n        //\n    })\n    ->create();\n"
            },
            "__tableData": {
                "count": 116,
                "lastPrimaryKey": 116,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {}
                    },
                    "15": {
                        "hasMany": {}
                    },
                    "16": {
                        "hasMany": {}
                    },
                    "17": {
                        "hasMany": {}
                    },
                    "18": {
                        "hasMany": {}
                    },
                    "19": {
                        "hasMany": {}
                    },
                    "20": {
                        "hasMany": {}
                    },
                    "21": {
                        "hasMany": {}
                    },
                    "22": {
                        "hasMany": {}
                    },
                    "23": {
                        "hasMany": {}
                    },
                    "24": {
                        "hasMany": {}
                    },
                    "25": {
                        "hasMany": {}
                    },
                    "26": {
                        "hasMany": {}
                    },
                    "27": {
                        "hasMany": {}
                    },
                    "28": {
                        "hasMany": {}
                    },
                    "29": {
                        "hasMany": {}
                    },
                    "30": {
                        "hasMany": {}
                    },
                    "31": {
                        "hasMany": {}
                    },
                    "32": {
                        "hasMany": {}
                    },
                    "33": {
                        "hasMany": {}
                    },
                    "34": {
                        "hasMany": {}
                    },
                    "35": {
                        "hasMany": {}
                    },
                    "36": {
                        "hasMany": {}
                    },
                    "37": {
                        "hasMany": {}
                    },
                    "38": {
                        "hasMany": {}
                    },
                    "39": {
                        "hasMany": {}
                    },
                    "40": {
                        "hasMany": {}
                    },
                    "41": {
                        "hasMany": {}
                    },
                    "42": {
                        "hasMany": {}
                    },
                    "43": {
                        "hasMany": {}
                    },
                    "44": {
                        "hasMany": {}
                    },
                    "45": {
                        "hasMany": {}
                    },
                    "46": {
                        "hasMany": {}
                    },
                    "47": {
                        "hasMany": {}
                    },
                    "48": {
                        "hasMany": {}
                    },
                    "49": {
                        "hasMany": {}
                    },
                    "50": {
                        "hasMany": {}
                    },
                    "51": {
                        "hasMany": {}
                    },
                    "52": {
                        "hasMany": {}
                    },
                    "53": {
                        "hasMany": {}
                    },
                    "54": {
                        "hasMany": {}
                    },
                    "55": {
                        "hasMany": {}
                    },
                    "56": {
                        "hasMany": {}
                    },
                    "57": {
                        "hasMany": {}
                    },
                    "58": {
                        "hasMany": {}
                    },
                    "59": {
                        "hasMany": {}
                    },
                    "60": {
                        "hasMany": {}
                    },
                    "61": {
                        "hasMany": {}
                    },
                    "62": {
                        "hasMany": {}
                    },
                    "63": {
                        "hasMany": {}
                    },
                    "64": {
                        "hasMany": {}
                    },
                    "65": {
                        "hasMany": {}
                    },
                    "66": {
                        "hasMany": {}
                    },
                    "67": {
                        "hasMany": {}
                    },
                    "68": {
                        "hasMany": {}
                    },
                    "69": {
                        "hasMany": {}
                    },
                    "70": {
                        "hasMany": {}
                    },
                    "71": {
                        "hasMany": {}
                    },
                    "72": {
                        "hasMany": {}
                    },
                    "73": {
                        "hasMany": {}
                    },
                    "74": {
                        "hasMany": {}
                    },
                    "75": {
                        "hasMany": {}
                    },
                    "76": {
                        "hasMany": {}
                    },
                    "77": {
                        "hasMany": {}
                    },
                    "78": {
                        "hasMany": {}
                    },
                    "79": {
                        "hasMany": {}
                    },
                    "80": {
                        "hasMany": {}
                    },
                    "81": {
                        "hasMany": {}
                    },
                    "82": {
                        "hasMany": {}
                    },
                    "83": {
                        "hasMany": {}
                    },
                    "84": {
                        "hasMany": {}
                    },
                    "85": {
                        "hasMany": {}
                    },
                    "86": {
                        "hasMany": {}
                    },
                    "87": {
                        "hasMany": {}
                    },
                    "88": {
                        "hasMany": {}
                    },
                    "89": {
                        "hasMany": {}
                    },
                    "90": {
                        "hasMany": {}
                    },
                    "91": {
                        "hasMany": {}
                    },
                    "92": {
                        "hasMany": {}
                    },
                    "93": {
                        "hasMany": {}
                    },
                    "94": {
                        "hasMany": {}
                    },
                    "95": {
                        "hasMany": {}
                    },
                    "96": {
                        "hasMany": {}
                    },
                    "97": {
                        "hasMany": {}
                    },
                    "98": {
                        "hasMany": {}
                    },
                    "99": {
                        "hasMany": {}
                    },
                    "100": {
                        "hasMany": {}
                    },
                    "101": {
                        "hasMany": {}
                    },
                    "102": {
                        "hasMany": {}
                    },
                    "103": {
                        "hasMany": {}
                    },
                    "104": {
                        "hasMany": {}
                    },
                    "105": {
                        "hasMany": {}
                    },
                    "106": {
                        "hasMany": {}
                    },
                    "107": {
                        "hasMany": {}
                    },
                    "108": {
                        "hasMany": {}
                    },
                    "109": {
                        "hasMany": {}
                    },
                    "110": {
                        "hasMany": {}
                    },
                    "111": {
                        "hasMany": {}
                    },
                    "112": {
                        "hasMany": {}
                    },
                    "113": {
                        "hasMany": {}
                    },
                    "114": {
                        "hasMany": {}
                    },
                    "115": {
                        "hasMany": {}
                    },
                    "116": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "path": "routes",
                "name": "app.php",
                "fullPath": "routes/app.php",
                "template": "routes/Routes.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 2,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\n\n/*\n|--------------------------------------------------------------------------\n| Web Routes - Generated by Vemto\n|--------------------------------------------------------------------------\n|\n| It is not recommended to edit this file directly. Although you can do so,\n| it will generate a conflict on Vemto's next build.\n|\n*/\n\n// Dashboard\nRoute::prefix('/dashboard')\n    ->name('dashboard.')\n    ->group(function () {\n        Route::get('/users', App\\Livewire\\Dashboard\\UserIndex::class)->name(\n            'users.index'\n        );\n\n        Route::get(\n            '/users/create',\n            App\\Livewire\\Dashboard\\UserCreate::class\n        )->name('users.create');\n\n        Route::get(\n            '/users/{user}',\n            App\\Livewire\\Dashboard\\UserEdit::class\n        )->name('users.edit');\n\n        Route::get('/tours', App\\Livewire\\Dashboard\\TourIndex::class)->name(\n            'tours.index'\n        );\n\n        Route::get(\n            '/tours/create',\n            App\\Livewire\\Dashboard\\TourCreate::class\n        )->name('tours.create');\n\n        Route::get(\n            '/tours/{tour}',\n            App\\Livewire\\Dashboard\\TourEdit::class\n        )->name('tours.edit');\n\n        Route::get(\n            '/reservations',\n            App\\Livewire\\Dashboard\\ReservationIndex::class\n        )->name('reservations.index');\n\n        Route::get(\n            '/reservations/create',\n            App\\Livewire\\Dashboard\\ReservationCreate::class\n        )->name('reservations.create');\n\n        Route::get(\n            '/reservations/{reservation}',\n            App\\Livewire\\Dashboard\\ReservationEdit::class\n        )->name('reservations.edit');\n\n        Route::get('/reviews', App\\Livewire\\Dashboard\\ReviewIndex::class)->name(\n            'reviews.index'\n        );\n\n        Route::get(\n            '/reviews/create',\n            App\\Livewire\\Dashboard\\ReviewCreate::class\n        )->name('reviews.create');\n\n        Route::get(\n            '/reviews/{review}',\n            App\\Livewire\\Dashboard\\ReviewEdit::class\n        )->name('reviews.edit');\n\n        Route::get(\n            '/categories',\n            App\\Livewire\\Dashboard\\CategoryIndex::class\n        )->name('categories.index');\n\n        Route::get(\n            '/categories/create',\n            App\\Livewire\\Dashboard\\CategoryCreate::class\n        )->name('categories.create');\n\n        Route::get(\n            '/categories/{category}',\n            App\\Livewire\\Dashboard\\CategoryEdit::class\n        )->name('categories.edit');\n    });\n\n// API\nRoute::prefix('/api')\n    ->name('api.')\n    ->group(function () {});\n\n// Site\nRoute::prefix('/')->group(function () {});\n\n// Filament Panel\nRoute::prefix('/panel')\n    ->name('panel.')\n    ->group(function () {});\n"
            },
            "item_3": {
                "path": "routes",
                "name": "app-api.php",
                "fullPath": "routes/app-api.php",
                "template": "routes/ApiRoutes.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 3,
                "createdAt": "2025-08-07 17:43:43",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nuse Illuminate\\Support\\Facades\\Route;\nuse App\\Http\\Controllers\\Api\\AuthController;\n\n/*\n|--------------------------------------------------------------------------\n| Api Routes - Generated by Vemto\n|--------------------------------------------------------------------------\n|\n| It is not recommended to edit this file directly. Although you can do so,\n| it will generate a conflict on Vemto's next build.\n|\n*/\n\nRoute::name('api.')\n    ->prefix('api')\n    ->group(function () {\n        Route::post('/login', [AuthController::class, 'login'])->name(\n            'api.login'\n        );\n\n        Route::middleware('auth:sanctum')->group(function () {});\n    });\n"
            },
            "item_4": {
                "path": "resources/views/components/ui",
                "name": "/toast.blade.php",
                "fullPath": "resources/views/components/ui//toast.blade.php",
                "template": "blade/ui/Toast.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 4,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props([\r\n    'on',\r\n    'timeout' => 2000,\r\n    'closeable' => true,\r\n])\r\n\r\n<div x-data=\"{ shown: false, timeout: null }\"\r\n    x-init=\"@this.on('{{ $on }}', () => { clearTimeout(timeout); shown = true; timeout = setTimeout(() => { shown = false }, {{ $timeout }});  })\"\r\n    x-show.transition.out.opacity.duration.500ms=\"shown\"\r\n    x-transition:leave.opacity.duration.500ms\r\n    x-transition:enter.opacity.duration.500ms\r\n    style=\"display: none;\"\r\n    {{ $attributes->merge(['class' => 'fixed right-0 top-0 p-2']) }}>\r\n    <div class=\"flex items-center bg-green-500 text-white rounded px-6 py-4\">\r\n        <div>\r\n            {{ $slot->isEmpty() ? 'Saved.' : $slot }}\r\n        </div>\r\n\r\n        @if($closeable)\r\n        <div @click=\"shown = false\" class=\"ml-4 cursor-pointer\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-4 h-4\">\r\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>              \r\n        </div>\r\n        @endif\r\n    </div>\r\n</div>"
            },
            "item_5": {
                "path": "resources/views/components/ui",
                "name": "/action/danger.blade.php",
                "fullPath": "resources/views/components/ui//action/danger.blade.php",
                "template": "blade/ui/action/Danger.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 5,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n<a {!! $attributes->merge(['class' => 'text-red-600 hover:text-red-700 cursor-pointer']) !!}>\r\n    {{ $slot }}\r\n</a>"
            },
            "item_6": {
                "path": "resources/views/components/ui",
                "name": "/action/index.blade.php",
                "fullPath": "resources/views/components/ui//action/index.blade.php",
                "template": "blade/ui/action/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 6,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n<a {!! $attributes->merge(['class' => 'text-indigo-600 hover:text-indigo-700 cursor-pointer']) !!}>\r\n    {{ $slot }}\r\n</a>"
            },
            "item_7": {
                "path": "resources/views/components/ui",
                "name": "/breadcrumbs/index.blade.php",
                "fullPath": "resources/views/components/ui//breadcrumbs/index.blade.php",
                "template": "blade/ui/breadcrumbs/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 7,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n<nav class=\"flex justify-between py-1\">\r\n    <ol class=\"inline-flex items-center mb-3 space-x-1 text-xs text-neutral-500 [&_.active-breadcrumb]:text-neutral-600 [&_.active-breadcrumb]:font-medium sm:mb-0\"> \r\n        {{ $slot }}\r\n    </ol>\r\n</nav>"
            },
            "item_8": {
                "path": "resources/views/components/ui",
                "name": "/breadcrumbs/link.blade.php",
                "fullPath": "resources/views/components/ui//breadcrumbs/link.blade.php",
                "template": "blade/ui/breadcrumbs/Link.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 8,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props([\r\n    'href' => false,\r\n    'active' => false,\r\n])\r\n\r\n<li class=\"\">\r\n    <a \r\n        @if($href)\r\n            wire:navigate\r\n            href=\"{{ $href }}\"\r\n        @endif\r\n        class=\"inline-flex items-center py-1 font-normal hover:text-neutral-900 focus:outline-none {{ $active ? 'active-breadcrumb' : '' }}\"\r\n    >\r\n        {{ $slot }}\r\n    </a>\r\n</li>"
            },
            "item_9": {
                "path": "resources/views/components/ui",
                "name": "/breadcrumbs/separator.blade.php",
                "fullPath": "resources/views/components/ui//breadcrumbs/separator.blade.php",
                "template": "blade/ui/breadcrumbs/Separator.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 9,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n<svg class=\"w-5 h-5 text-gray-400/70\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><g fill=\"none\" stroke=\"none\"><path d=\"M10 8.013l4 4-4 4\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g></svg>"
            },
            "item_10": {
                "path": "resources/views/components/ui",
                "name": "/button/danger.blade.php",
                "fullPath": "resources/views/components/ui//button/danger.blade.php",
                "template": "blade/ui/button/Danger.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 10,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n<button {{ $attributes->merge(['type' => 'button', 'class' => 'inline-flex items-center justify-center px-4 py-2 bg-red-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-red-500 active:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 transition ease-in-out duration-150']) }}>\r\n    {{ $slot }}\r\n</button>"
            },
            "item_11": {
                "path": "resources/views/components/ui",
                "name": "/button/index.blade.php",
                "fullPath": "resources/views/components/ui//button/index.blade.php",
                "template": "blade/ui/button/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 11,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n<button {{ $attributes->merge(['type' => 'submit', 'class' => 'inline-flex items-center justify-center px-4 py-2 text-sm font-medium tracking-wide text-white transition-colors duration-200 rounded-md bg-indigo-500 hover:bg-indigo-600 focus:ring-2 focus:ring-offset-2 focus:ring-gray-900 focus:shadow-outline focus:outline-none']) }}>\r\n    {{ $slot }}\r\n</button>"
            },
            "item_12": {
                "path": "resources/views/components/ui",
                "name": "/card/body.blade.php",
                "fullPath": "resources/views/components/ui//card/body.blade.php",
                "template": "blade/ui/card/Body.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 12,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": ""
            },
            "item_13": {
                "path": "resources/views/components/ui",
                "name": "/card/header.blade.php",
                "fullPath": "resources/views/components/ui//card/header.blade.php",
                "template": "blade/ui/card/Header.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 13,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": ""
            },
            "item_14": {
                "path": "resources/views/components/ui",
                "name": "/card/index.blade.php",
                "fullPath": "resources/views/components/ui//card/index.blade.php",
                "template": "blade/ui/card/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 14,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": ""
            },
            "item_15": {
                "path": "resources/views/components/ui",
                "name": "/card/title.blade.php",
                "fullPath": "resources/views/components/ui//card/title.blade.php",
                "template": "blade/ui/card/Title.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 15,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": ""
            },
            "item_16": {
                "path": "resources/views/components/ui",
                "name": "/container/table.blade.php",
                "fullPath": "resources/views/components/ui//container/table.blade.php",
                "template": "blade/ui/container/Table.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 16,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n<div class=\"flex flex-col\">\r\n    <div class=\"overflow-x-auto\">\r\n        <div class=\"inline-block min-w-full\">\r\n            {{ $slot }}\r\n        </div>\r\n    </div>\r\n</div>\r\n"
            },
            "item_17": {
                "path": "resources/views/components/ui",
                "name": "/input/checkbox.blade.php",
                "fullPath": "resources/views/components/ui//input/checkbox.blade.php",
                "template": "blade/ui/input/Checkbox.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 17,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['disabled' => false])\r\n\r\n<input \r\n    {{ $disabled ? 'disabled' : '' }} \r\n    type=\"checkbox\"\r\n    {!! $attributes->merge(['class' => '']) !!}\r\n>"
            },
            "item_18": {
                "path": "resources/views/components/ui",
                "name": "/input/color.blade.php",
                "fullPath": "resources/views/components/ui//input/color.blade.php",
                "template": "blade/ui/input/Color.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 18,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"color\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_19": {
                "path": "resources/views/components/ui",
                "name": "/input/date.blade.php",
                "fullPath": "resources/views/components/ui//input/date.blade.php",
                "template": "blade/ui/input/Date.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 19,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"date\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_20": {
                "path": "resources/views/components/ui",
                "name": "/input/date-time.blade.php",
                "fullPath": "resources/views/components/ui//input/date-time.blade.php",
                "template": "blade/ui/input/DateTime.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 20,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"datetime-local\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_21": {
                "path": "resources/views/components/ui",
                "name": "/input/email.blade.php",
                "fullPath": "resources/views/components/ui//input/email.blade.php",
                "template": "blade/ui/input/Email.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 21,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"email\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_22": {
                "path": "resources/views/components/ui",
                "name": "/input/error.blade.php",
                "fullPath": "resources/views/components/ui//input/error.blade.php",
                "template": "blade/ui/input/Error.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 22,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['for'])\r\n\r\n@error($for)\r\n    <p {{ $attributes->merge(['class' => 'text-sm text-red-600']) }}>{{ $message }}</p>\r\n@enderror\r\n"
            },
            "item_23": {
                "path": "resources/views/components/ui",
                "name": "/input/file.blade.php",
                "fullPath": "resources/views/components/ui//input/file.blade.php",
                "template": "blade/ui/input/File.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 23,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props([\r\n    'src' => '',\r\n    'accept' => '*',\r\n])\r\n\r\n<div {!! $attributes->except(['wire:model']) !!} x-data=\"{\r\n    fileUrl: '{{ $src }}',\r\n    file: null,\r\n    fileInput: null,\r\n    initFileInput() {\r\n        this.fileInput = this.$el.querySelector('input[type=file]')\r\n\r\n        this.fileInput.addEventListener('change', () => {\r\n            this.file = this.fileInput.files[0]\r\n            this.fileUrl = URL.createObjectURL(this.file)\r\n        })\r\n    },\r\n    destroyFileInput() {\r\n        this.fileInput.removeEventListener('change')\r\n    },\r\n    remove() {\r\n        if (!confirm('Are you sure?')) return\r\n\r\n        this.fileUrl = ''\r\n        this.file = null\r\n        this.fileInput.value = ''\r\n\r\n        this.$dispatch('removed')\r\n    }\r\n}\" x-init=\"initFileInput\" x-on:destroy.window=\"destroyFileInput\">\r\n    <div class=\"mb-2\">\r\n        {{-- Show the filename --}}\r\n        <template x-if=\"file\">\r\n            <div class=\"text-sm text-gray-500 p-1 rounded-sm bg-gray-50 border border-gray-200 mb-1\" x-text=\"file.name\"></div>\r\n        </template>\r\n\r\n        {{-- File selector --}}\r\n        <input style=\"display: none;\" type=\"file\" accept=\"{{ $accept }}\" {!! $attributes->only([ 'wire:model']) !!}>\r\n\r\n        {{-- Upload and remove buttons --}}\r\n        <div>\r\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" @click.stop=\"fileInput.click()\">Upload</button>\r\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" x-show=\"fileUrl\" @click.stop=\"remove()\">Remove</button>\r\n        </div>\r\n    </div>\r\n</div>"
            },
            "item_24": {
                "path": "resources/views/components/ui",
                "name": "/input/hidden.blade.php",
                "fullPath": "resources/views/components/ui//input/hidden.blade.php",
                "template": "blade/ui/input/Hidden.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 24,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"hidden\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_25": {
                "path": "resources/views/components/ui",
                "name": "/input/image.blade.php",
                "fullPath": "resources/views/components/ui//input/image.blade.php",
                "template": "blade/ui/input/Image.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 25,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props([\r\n    'src' => '',\r\n    'accept' => 'image/*',\r\n])\r\n\r\n<div {!! $attributes->except(['wire:model']) !!} x-data=\"{\r\n    imageUrl: '{{ $src }}',\r\n    imageFile: null,\r\n    imageInput: null,\r\n    initFileInput() {\r\n        this.imageInput = this.$el.querySelector('input[type=file]')\r\n\r\n        this.imageInput.addEventListener('change', () => {\r\n            this.imageFile = this.imageInput.files[0]\r\n            this.imageUrl = URL.createObjectURL(this.imageFile)\r\n        })\r\n    },\r\n    destroyFileInput() {\r\n        this.imageInput.removeEventListener('change')\r\n    },\r\n    remove() {\r\n        if (!confirm('Are you sure?')) return\r\n\r\n        this.imageUrl = ''\r\n        this.imageFile = null\r\n        this.imageInput.value = ''\r\n\r\n        this.$dispatch('removed')\r\n    }\r\n}\" x-init=\"initFileInput\" x-on:destroy.window=\"destroyFileInput\">\r\n    <div class=\"mb-2\">\r\n\r\n        {{-- Show the image --}}\r\n        <template x-if=\"imageUrl\">\r\n            <img @click.stop=\"imageInput.click()\" :src=\"imageUrl\" class=\"object-cover rounded border border-gray-200 w-36 h-36 cursor-pointer bg-gray-50 hover:opacity-75 transition duration-100 ease-in-out\">\r\n        </template>\r\n\r\n        {{-- Show the gray box when image is not available --}}\r\n        <template x-if=\"!imageUrl\">\r\n            <div @click.stop=\"imageInput.click()\" class=\"object-cover rounded border border-gray-200 w-36 h-36 cursor-pointer bg-gray-50 hover:opacity-75 transition duration-100 ease-in-out\"></div>\r\n        </template>\r\n\r\n        {{-- Image file selector --}}\r\n        <input style=\"display: none;\" type=\"file\" accept=\"{{ $accept }}\" {!! $attributes->only([ 'wire:model']) !!}>\r\n\r\n        {{-- Upload and remove buttons --}}\r\n        <div>\r\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" @click.stop=\"imageInput.click()\">Upload</button>\r\n            <button type=\"button\" class=\"p-0.5 px-1 text-xs border border-gray-200 rounded hover:bg-gray-200\" x-show=\"imageUrl\" @click.stop=\"remove()\">Remove</button>\r\n        </div>\r\n    </div>\r\n</div>"
            },
            "item_26": {
                "path": "resources/views/components/ui",
                "name": "/input/index.blade.php",
                "fullPath": "resources/views/components/ui//input/index.blade.php",
                "template": "blade/ui/input/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 26,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['disabled' => false])\r\n\r\n<input \r\n    {{ $disabled ? 'disabled' : '' }} \r\n    {!! $attributes->merge(['class' => 'inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50']) !!}\r\n>\r\n"
            },
            "item_27": {
                "path": "resources/views/components/ui",
                "name": "/input/number.blade.php",
                "fullPath": "resources/views/components/ui//input/number.blade.php",
                "template": "blade/ui/input/Number.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 27,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"number\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_28": {
                "path": "resources/views/components/ui",
                "name": "/input/password.blade.php",
                "fullPath": "resources/views/components/ui//input/password.blade.php",
                "template": "blade/ui/input/Password.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 28,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"password\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_29": {
                "path": "resources/views/components/ui",
                "name": "/input/radio.blade.php",
                "fullPath": "resources/views/components/ui//input/radio.blade.php",
                "template": "blade/ui/input/Radio.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 29,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['disabled' => false])\r\n\r\n<input \r\n    :disabled=\"$disabled\" \r\n    type=\"radio\"\r\n    {!! $attributes->merge(['class' => '!w-4 !h-4 text-indigo-600 transition duration-150 ease-in-out border-gray-300 rounded-md focus:ring-indigo-500']) !!}\r\n/>"
            },
            "item_30": {
                "path": "resources/views/components/ui",
                "name": "/input/select.blade.php",
                "fullPath": "resources/views/components/ui//input/select.blade.php",
                "template": "blade/ui/input/Select.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 30,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['disabled' => false])\r\n\r\n<select \r\n    {{ $disabled ? 'disabled' : '' }} \r\n    {!! $attributes->merge(['class' => 'inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50']) !!}\r\n>\r\n    {{ $slot }}\r\n</select>"
            },
            "item_31": {
                "path": "resources/views/components/ui",
                "name": "/input/text.blade.php",
                "fullPath": "resources/views/components/ui//input/text.blade.php",
                "template": "blade/ui/input/Text.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 31,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"text\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_32": {
                "path": "resources/views/components/ui",
                "name": "/input/textarea.blade.php",
                "fullPath": "resources/views/components/ui//input/textarea.blade.php",
                "template": "blade/ui/input/Textarea.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 32,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['disabled' => false])\r\n\r\n<textarea \r\n    {{ $disabled ? 'disabled' : '' }} \r\n    {!! $attributes->merge(['class' => 'inline-flex h-10 px-3 py-2 text-sm bg-white border rounded-md border-gray-300 ring-offset-background placeholder:text-gray-500 focus:border-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-400 disabled:cursor-not-allowed disabled:opacity-50']) !!}\r\n></textarea>"
            },
            "item_33": {
                "path": "resources/views/components/ui",
                "name": "/input/time.blade.php",
                "fullPath": "resources/views/components/ui//input/time.blade.php",
                "template": "blade/ui/input/Time.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 33,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"time\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_34": {
                "path": "resources/views/components/ui",
                "name": "/input/url.blade.php",
                "fullPath": "resources/views/components/ui//input/url.blade.php",
                "template": "blade/ui/input/Url.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 34,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['disabled' => false])\r\n\r\n<x-ui.input \r\n    :disabled=\"$disabled\" \r\n    type=\"url\"\r\n    :attributes=\"$attributes\"\r\n/>"
            },
            "item_35": {
                "path": "resources/views/components/ui",
                "name": "/label/index.blade.php",
                "fullPath": "resources/views/components/ui//label/index.blade.php",
                "template": "blade/ui/label/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 35,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['value'])\r\n\r\n<label {{ $attributes->merge(['class' => 'block mb-1.5 font-medium text-sm text-gray-700']) }}>\r\n    {{ $value ?? $slot }}\r\n</label>"
            },
            "item_36": {
                "path": "resources/views/components/ui",
                "name": "/modal/confirm.blade.php",
                "fullPath": "resources/views/components/ui//modal/confirm.blade.php",
                "template": "blade/ui/modal/Confirm.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 36,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['id' => null, 'maxWidth' => null])\r\n\r\n<x-ui.modal :id=\"$id\" :maxWidth=\"$maxWidth\" {{ $attributes }}>\r\n    <div class=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n        <div class=\"sm:flex sm:items-start\">\r\n            <div class=\"mx-auto shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\r\n                <svg class=\"h-6 w-6 text-red-600\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z\" />\r\n                </svg>\r\n            </div>\r\n\r\n            <div class=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n                <h3 class=\"text-lg font-medium text-gray-900\">\r\n                    {{ $title }}\r\n                </h3>\r\n\r\n                <div class=\"mt-4 text-sm text-gray-600\">\r\n                    {{ $content }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"flex flex-row justify-between p-4 bg-gray-100 text-right\">\r\n        {{ $footer }}\r\n    </div>\r\n</x-ui.modal>"
            },
            "item_37": {
                "path": "resources/views/components/ui",
                "name": "/modal/index.blade.php",
                "fullPath": "resources/views/components/ui//modal/index.blade.php",
                "template": "blade/ui/modal/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 37,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props(['id', 'maxWidth'])\r\n\r\n@php\r\n$id = $id ?? md5($attributes->wire('model'));\r\n\r\n$maxWidth = [\r\n    'sm' => 'sm:max-w-sm',\r\n    'md' => 'sm:max-w-md',\r\n    'lg' => 'sm:max-w-lg',\r\n    'xl' => 'sm:max-w-xl',\r\n    '2xl' => 'sm:max-w-2xl',\r\n][$maxWidth ?? '2xl'];\r\n@endphp\r\n\r\n<div\r\n    x-data=\"{ show: @entangle($attributes->wire('model')) }\"\r\n    x-on:close.stop=\"show = false\"\r\n    x-on:keydown.escape.window=\"show = false\"\r\n    x-show=\"show\"\r\n    id=\"{{ $id }}\"\r\n    class=\"jetstream-modal fixed inset-0 overflow-y-auto px-4 py-6 sm:px-0 z-50\"\r\n    style=\"display: none;\"\r\n>\r\n    <div x-show=\"show\" class=\"fixed inset-0 transform transition-all\" x-on:click=\"show = false\" x-transition:enter=\"ease-out duration-300\"\r\n                    x-transition:enter-start=\"opacity-0\"\r\n                    x-transition:enter-end=\"opacity-100\"\r\n                    x-transition:leave=\"ease-in duration-200\"\r\n                    x-transition:leave-start=\"opacity-100\"\r\n                    x-transition:leave-end=\"opacity-0\">\r\n        <div class=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n    </div>\r\n\r\n    <div x-show=\"show\" \r\n        class=\"mb-6 bg-white rounded-lg overflow-hidden shadow-xl transform transition-all sm:w-full {{ $maxWidth }} sm:mx-auto\"\r\n        x-trap.inert.noscroll=\"show\"\r\n        x-transition:enter=\"ease-out duration-300\"\r\n        x-transition:enter-start=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n        x-transition:enter-end=\"opacity-100 translate-y-0 sm:scale-100\"\r\n        x-transition:leave=\"ease-in duration-200\"\r\n        x-transition:leave-start=\"opacity-100 translate-y-0 sm:scale-100\"\r\n        x-transition:leave-end=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\">\r\n        {{ $slot }}\r\n    </div>\r\n</div>\r\n"
            },
            "item_38": {
                "path": "resources/views/components/ui",
                "name": "/table/action-column.blade.php",
                "fullPath": "resources/views/components/ui//table/action-column.blade.php",
                "template": "blade/ui/table/ActionColumn.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 38,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n<td {!! $attributes->merge(['class' => 'px-5 py-4 text-sm font-medium text-right whitespace-nowrap space-x-2']) !!}>\r\n    {{ $slot }}\r\n</td>"
            },
            "item_39": {
                "path": "resources/views/components/ui",
                "name": "/table/action-header.blade.php",
                "fullPath": "resources/views/components/ui//table/action-header.blade.php",
                "template": "blade/ui/table/ActionHeader.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 39,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n<th {!! $attributes->merge(['class' => 'px-5 py-3 text-xs font-medium text-right uppercase']) !!}>\r\n    {{ $slot }}\r\n</th>"
            },
            "item_40": {
                "path": "resources/views/components/ui",
                "name": "/table/column.blade.php",
                "fullPath": "resources/views/components/ui//table/column.blade.php",
                "template": "blade/ui/table/Column.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 40,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props([\r\n    'forCrud' => false\r\n])\r\n\r\n@php\r\n$allClasses = [\r\n    'px-5 py-3 text-xs font-medium text-left uppercase' => true,\r\n    'max-w-xs truncate' => $forCrud,\r\n];\r\n\r\n$classes = join(' ', array_keys(array_filter($allClasses)));\r\n@endphp\r\n\r\n<td {!! $attributes->merge(['class' => 'px-5 py-4 text-sm whitespace-nowrap']) !!}>\r\n    {{ $slot }}\r\n</td>"
            },
            "item_41": {
                "path": "resources/views/components/ui",
                "name": "/table/header.blade.php",
                "fullPath": "resources/views/components/ui//table/header.blade.php",
                "template": "blade/ui/table/Header.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 41,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props([\r\n    'forCrud' => false\r\n])\r\n\r\n@php\r\n$allClasses = [\r\n    'px-5 py-3 text-xs font-medium text-left uppercase' => true,\r\n    'cursor-pointer' => $forCrud,\r\n];\r\n\r\n$classes = join(' ', array_keys(array_filter($allClasses)));\r\n@endphp\r\n\r\n<th {!! $attributes->merge(['class' => $classes]) !!}>\r\n    {{ $slot }}\r\n</th>"
            },
            "item_42": {
                "path": "resources/views/components/ui",
                "name": "/table/image.blade.php",
                "fullPath": "resources/views/components/ui//table/image.blade.php",
                "template": "blade/ui/table/Image.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 42,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props([\r\n    'url' => '',\r\n    'alt' => ''\r\n])\r\n\r\n<img\r\n    src=\"{{ $url }}\"\r\n    alt=\"{{ $alt }}\"\r\n    class=\"w-12 h-12 rounded-lg bg-center\"\r\n/>"
            },
            "item_43": {
                "path": "resources/views/components/ui",
                "name": "/table/index.blade.php",
                "fullPath": "resources/views/components/ui//table/index.blade.php",
                "template": "blade/ui/table/Index.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 43,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n@props([\r\n    'head',\r\n    'body',\r\n    'foot'\r\n])\r\n\r\n<div class=\"overflow-hidden border rounded-lg\">\r\n    <table {!! $attributes->merge(['class' => 'min-w-full divide-y divide-gray-200']) !!}>\r\n        @if(isset($head))\r\n        <thead class=\"bg-gray-50\">\r\n            <tr class=\"text-gray-500\">\r\n                {{ $head }}\r\n            </tr>\r\n        </thead>\r\n        @endif\r\n\r\n        @if(isset($body))\r\n        <tbody class=\"bg-white divide-y divide-gray-200 dark:divide-gray-700\">\r\n            {{ $body }}\r\n        </tbody>\r\n        @endif\r\n\r\n        @if(isset($foot))\r\n        <tfoot class=\"\">\r\n            {{ $foot }}\r\n        </tfoot>\r\n        @endif\r\n    </table>\r\n    \r\n</div>"
            },
            "item_44": {
                "path": "resources/views/components/ui",
                "name": "/table/row.blade.php",
                "fullPath": "resources/views/components/ui//table/row.blade.php",
                "template": "blade/ui/table/Row.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 44,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n<tr {!! $attributes->merge(['class' => 'text-gray-800']) !!}>\r\n    {{ $slot }}\r\n</tr>"
            },
            "item_45": {
                "path": "resources/views/livewire/layout",
                "name": "navigation.blade.php",
                "fullPath": "resources/views/livewire/layout/navigation.blade.php",
                "template": "menu/breeze/Navigation.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 45,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\n\n\nuse App\\Livewire\\Actions\\Logout;\nuse Livewire\\Volt\\Component;\n\nnew class extends Component\n{\n    /**\n     * Log the current user out of the application.\n     */\n    public function logout(Logout $logout): void\n    {\n        $logout();\n\n        $this->redirect('/', navigate: true); } }; ?>\n\n<nav x-data=\"{ open: false }\" class=\"bg-white border-b border-gray-100\">\n    <!-- Primary Navigation Menu -->\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div class=\"flex justify-between h-16\">\n            <div class=\"flex\">\n                <!-- Logo -->\n                <div class=\"shrink-0 flex items-center\">\n                    <a href=\"{{ route('dashboard') }}\" wire:navigate>\n                        <x-application-logo\n                            class=\"block h-9 w-auto fill-current text-gray-800\"\n                        />\n                    </a>\n                </div>\n\n                <!-- Navigation Links -->\n                <div class=\"hidden sm:flex sm:items-center sm:ml-6\">\n                    <div class=\"ml-3 relative\">\n                        <x-dropdown align=\"right\" width=\"48\">\n                            <x-slot name=\"trigger\">\n                                <span class=\"inline-flex rounded-md\">\n                                    <button\n                                        type=\"button\"\n                                        class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150\"\n                                    >\n                                        {{ __('navigation.home') }}\n\n                                        <svg\n                                            class=\"ml-2 -mr-0.5 h-4 w-4\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                            fill=\"none\"\n                                            viewBox=\"0 0 24 24\"\n                                            stroke-width=\"1.5\"\n                                            stroke=\"currentColor\"\n                                        >\n                                            <path\n                                                stroke-linecap=\"round\"\n                                                stroke-linejoin=\"round\"\n                                                d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\"\n                                            />\n                                        </svg>\n                                    </button>\n                                </span>\n                            </x-slot>\n\n                            <x-slot name=\"content\">\n                                <x-dropdown-link>\n                                    No items found\n                                </x-dropdown-link>\n                            </x-slot>\n                        </x-dropdown>\n                    </div>\n                    <div class=\"ml-3 relative\">\n                        <x-dropdown align=\"right\" width=\"48\">\n                            <x-slot name=\"trigger\">\n                                <span class=\"inline-flex rounded-md\">\n                                    <button\n                                        type=\"button\"\n                                        class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none focus:bg-gray-50 active:bg-gray-50 transition ease-in-out duration-150\"\n                                    >\n                                        {{ __('navigation.apps') }}\n\n                                        <svg\n                                            class=\"ml-2 -mr-0.5 h-4 w-4\"\n                                            xmlns=\"http://www.w3.org/2000/svg\"\n                                            fill=\"none\"\n                                            viewBox=\"0 0 24 24\"\n                                            stroke-width=\"1.5\"\n                                            stroke=\"currentColor\"\n                                        >\n                                            <path\n                                                stroke-linecap=\"round\"\n                                                stroke-linejoin=\"round\"\n                                                d=\"M19.5 8.25l-7.5 7.5-7.5-7.5\"\n                                            />\n                                        </svg>\n                                    </button>\n                                </span>\n                            </x-slot>\n\n                            <x-slot name=\"content\">\n                                @can('view-any', App\\Models\\User::class)\n                                <x-dropdown-link\n                                    wire:navigate\n                                    href=\"{{ route('dashboard.users.index') }}\"\n                                >\n                                    {{ __('navigation.users') }}\n                                </x-dropdown-link>\n                                @endcan @can('view-any', App\\Models\\Tour::class)\n                                <x-dropdown-link\n                                    wire:navigate\n                                    href=\"{{ route('dashboard.tours.index') }}\"\n                                >\n                                    {{ __('navigation.tours') }}\n                                </x-dropdown-link>\n                                @endcan @can('view-any',\n                                App\\Models\\Reservation::class)\n                                <x-dropdown-link\n                                    wire:navigate\n                                    href=\"{{ route('dashboard.reservations.index') }}\"\n                                >\n                                    {{ __('navigation.reservations') }}\n                                </x-dropdown-link>\n                                @endcan @can('view-any',\n                                App\\Models\\Review::class)\n                                <x-dropdown-link\n                                    wire:navigate\n                                    href=\"{{ route('dashboard.reviews.index') }}\"\n                                >\n                                    {{ __('navigation.reviews') }}\n                                </x-dropdown-link>\n                                @endcan @can('view-any',\n                                App\\Models\\Category::class)\n                                <x-dropdown-link\n                                    wire:navigate\n                                    href=\"{{ route('dashboard.categories.index') }}\"\n                                >\n                                    {{ __('navigation.categories') }}\n                                </x-dropdown-link>\n                                @endcan\n                            </x-slot>\n                        </x-dropdown>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Settings Dropdown -->\n            <div class=\"hidden sm:flex sm:items-center sm:ms-6\">\n                <x-dropdown align=\"right\" width=\"48\">\n                    <x-slot name=\"trigger\">\n                        <button\n                            class=\"inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-gray-500 bg-white hover:text-gray-700 focus:outline-none transition ease-in-out duration-150\"\n                        >\n                            <div\n                                x-data=\"{{ json_encode(['name' => auth()->user()->name]) }}\"\n                                x-text=\"name\"\n                                x-on:profile-updated.window=\"name = $event.detail.name\"\n                            ></div>\n\n                            <div class=\"ms-1\">\n                                <svg\n                                    class=\"fill-current h-4 w-4\"\n                                    xmlns=\"http://www.w3.org/2000/svg\"\n                                    viewBox=\"0 0 20 20\"\n                                >\n                                    <path\n                                        fill-rule=\"evenodd\"\n                                        d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                                        clip-rule=\"evenodd\"\n                                    />\n                                </svg>\n                            </div>\n                        </button>\n                    </x-slot>\n\n                    <x-slot name=\"content\">\n                        <x-dropdown-link :href=\"route('profile')\" wire:navigate>\n                            {{ __('Profile') }}\n                        </x-dropdown-link>\n\n                        <!-- Authentication -->\n                        <button wire:click=\"logout\" class=\"w-full text-start\">\n                            <x-dropdown-link>\n                                {{ __('Log Out') }}\n                            </x-dropdown-link>\n                        </button>\n                    </x-slot>\n                </x-dropdown>\n            </div>\n\n            <!-- Hamburger -->\n            <div class=\"-me-2 flex items-center sm:hidden\">\n                <button\n                    @click=\"open = ! open\"\n                    class=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:bg-gray-100 focus:text-gray-500 transition duration-150 ease-in-out\"\n                >\n                    <svg\n                        class=\"h-6 w-6\"\n                        stroke=\"currentColor\"\n                        fill=\"none\"\n                        viewBox=\"0 0 24 24\"\n                    >\n                        <path\n                            :class=\"{'hidden': open, 'inline-flex': ! open }\"\n                            class=\"inline-flex\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            stroke-width=\"2\"\n                            d=\"M4 6h16M4 12h16M4 18h16\"\n                        />\n                        <path\n                            :class=\"{'hidden': ! open, 'inline-flex': open }\"\n                            class=\"hidden\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            stroke-width=\"2\"\n                            d=\"M6 18L18 6M6 6l12 12\"\n                        />\n                    </svg>\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <!-- Responsive Navigation Menu -->\n    <div :class=\"{'block': open, 'hidden': ! open}\" class=\"hidden sm:hidden\">\n        <div class=\"pt-2 pb-3 space-y-1\">\n            @can('view-any', App\\Models\\User::class)\n            <x-responsive-nav-link\n                href=\"{{ route('dashboard.users.index') }}\"\n                :active=\"request()->routeIs('dashboard.users.index')\"\n            >\n                {{ __('navigation.users') }}\n            </x-responsive-nav-link>\n            @endcan @can('view-any', App\\Models\\Tour::class)\n            <x-responsive-nav-link\n                href=\"{{ route('dashboard.tours.index') }}\"\n                :active=\"request()->routeIs('dashboard.tours.index')\"\n            >\n                {{ __('navigation.tours') }}\n            </x-responsive-nav-link>\n            @endcan @can('view-any', App\\Models\\Reservation::class)\n            <x-responsive-nav-link\n                href=\"{{ route('dashboard.reservations.index') }}\"\n                :active=\"request()->routeIs('dashboard.reservations.index')\"\n            >\n                {{ __('navigation.reservations') }}\n            </x-responsive-nav-link>\n            @endcan @can('view-any', App\\Models\\Review::class)\n            <x-responsive-nav-link\n                href=\"{{ route('dashboard.reviews.index') }}\"\n                :active=\"request()->routeIs('dashboard.reviews.index')\"\n            >\n                {{ __('navigation.reviews') }}\n            </x-responsive-nav-link>\n            @endcan @can('view-any', App\\Models\\Category::class)\n            <x-responsive-nav-link\n                href=\"{{ route('dashboard.categories.index') }}\"\n                :active=\"request()->routeIs('dashboard.categories.index')\"\n            >\n                {{ __('navigation.categories') }}\n            </x-responsive-nav-link>\n            @endcan\n        </div>\n\n        <!-- Responsive Settings Options -->\n        <div class=\"pt-4 pb-1 border-t border-gray-200\">\n            <div class=\"px-4\">\n                <div\n                    class=\"font-medium text-base text-gray-800\"\n                    x-data=\"{{ json_encode(['name' => auth()->user()->name]) }}\"\n                    x-text=\"name\"\n                    x-on:profile-updated.window=\"name = $event.detail.name\"\n                ></div>\n                <div class=\"font-medium text-sm text-gray-500\">\n                    {{ auth()->user()->email }}\n                </div>\n            </div>\n\n            <div class=\"mt-3 space-y-1\">\n                <x-responsive-nav-link :href=\"route('profile')\" wire:navigate>\n                    {{ __('Profile') }}\n                </x-responsive-nav-link>\n\n                <!-- Authentication -->\n                <button wire:click=\"logout\" class=\"w-full text-start\">\n                    <x-responsive-nav-link>\n                        {{ __('Log Out') }}\n                    </x-responsive-nav-link>\n                </button>\n            </div>\n        </div>\n    </div>\n</nav>\n",
                "conflictFileName": "QOkZoRgzHjg8QLjeq2vuiyPOpbGXcQvg.json"
            },
            "item_46": {
                "path": "database/factories",
                "name": "UserFactory.php",
                "fullPath": "database/factories/UserFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 46,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\User;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass UserFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = User::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'email' => fake()\n                ->unique()\n                ->safeEmail(),\n            'phone_number' => fake()->phoneNumber(),\n            'email_verified_at' => now(),\n            'password' => \\Hash::make('password'),\n            'remember_token' => \\Str::random(10),\n            'role' => fake()->word(),\n        ];\n    }\n\n    /**\n     * Indicate that the model's email address should be unverified.\n     */\n    public function unverified(): Factory\n    {\n        return $this->state(function (array $attributes) {\n            return [\n                'email_verified_at' => null,\n            ];\n        });\n    }\n}\n",
                "conflictFileName": "1tNMCv52MFsH4nEj59mLiGE2HWJyZPHN.json"
            },
            "item_47": {
                "path": "database/seeders",
                "name": "UserSeeder.php",
                "fullPath": "database/seeders/UserSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 47,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\User;\nuse Illuminate\\Database\\Seeder;\n\nclass UserSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        User::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_48": {
                "path": "app/Policies",
                "name": "UserPolicy.php",
                "fullPath": "app/Policies/UserPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 48,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\n\nclass UserPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, User $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, User $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_49": {
                "path": "database/factories",
                "name": "TourFactory.php",
                "fullPath": "database/factories/TourFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 49,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Tour;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass TourFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Tour::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'title' => fake()->sentence(10),\n            'description' => fake()->sentence(15),\n            'location' => fake()->text(255),\n            'price' => fake()->randomFloat(2, 0, 9999),\n            'start_date' => fake()->date(),\n            'end_date' => fake()->date(),\n            'max_participants' => fake()->randomNumber(0),\n        ];\n    }\n}\n"
            },
            "item_50": {
                "path": "database/seeders",
                "name": "TourSeeder.php",
                "fullPath": "database/seeders/TourSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 50,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Tour;\nuse Illuminate\\Database\\Seeder;\n\nclass TourSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Tour::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_51": {
                "path": "app/Policies",
                "name": "TourPolicy.php",
                "fullPath": "app/Policies/TourPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 51,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\Tour;\nuse App\\Models\\User;\n\nclass TourPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Tour $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Tour $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Tour $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Tour $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Tour $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_52": {
                "path": "database/factories",
                "name": "ReservationFactory.php",
                "fullPath": "database/factories/ReservationFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 52,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Reservation;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass ReservationFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Reservation::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'status' => fake()->word(),\n            'number_of_people' => fake()->randomNumber(0),\n            'user_id' => \\App\\Models\\User::factory(),\n            'tour_id' => \\App\\Models\\Tour::factory(),\n        ];\n    }\n}\n"
            },
            "item_53": {
                "path": "database/seeders",
                "name": "ReservationSeeder.php",
                "fullPath": "database/seeders/ReservationSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 53,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Reservation;\nuse Illuminate\\Database\\Seeder;\n\nclass ReservationSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Reservation::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_54": {
                "path": "app/Policies",
                "name": "ReservationPolicy.php",
                "fullPath": "app/Policies/ReservationPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 54,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Reservation;\n\nclass ReservationPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Reservation $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Reservation $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Reservation $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Reservation $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Reservation $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_55": {
                "path": "database/factories",
                "name": "ReviewFactory.php",
                "fullPath": "database/factories/ReviewFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 55,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Review;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass ReviewFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Review::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'rating' => fake()->randomFloat(1, 1, 5),\n            'comment' => fake()->text(),\n            'user_id' => \\App\\Models\\User::factory(),\n            'tour_id' => \\App\\Models\\Tour::factory(),\n        ];\n    }\n}\n"
            },
            "item_56": {
                "path": "database/seeders",
                "name": "ReviewSeeder.php",
                "fullPath": "database/seeders/ReviewSeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 56,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Review;\nuse Illuminate\\Database\\Seeder;\n\nclass ReviewSeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Review::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_57": {
                "path": "app/Policies",
                "name": "ReviewPolicy.php",
                "fullPath": "app/Policies/ReviewPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 57,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Review;\n\nclass ReviewPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Review $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Review $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Review $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Review $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Review $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_58": {
                "path": "database/factories",
                "name": "CategoryFactory.php",
                "fullPath": "database/factories/CategoryFactory.php",
                "template": "database/Factory.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 58,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace Database\\Factories;\n\nuse App\\Models\\Category;\nuse Illuminate\\Support\\Str;\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\n\nclass CategoryFactory extends Factory\n{\n    /**\n     * The name of the factory's corresponding model.\n     *\n     * @var string\n     */\n    protected $model = Category::class;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'description' => fake()->sentence(15),\n        ];\n    }\n}\n"
            },
            "item_59": {
                "path": "database/seeders",
                "name": "CategorySeeder.php",
                "fullPath": "database/seeders/CategorySeeder.php",
                "template": "database/Seeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 59,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse App\\Models\\Category;\nuse Illuminate\\Database\\Seeder;\n\nclass CategorySeeder extends Seeder\n{\n    /**\n     * Run the database seeds.\n     */\n    public function run(): void\n    {\n        Category::factory()\n            ->count(5)\n            ->create();\n    }\n}\n"
            },
            "item_60": {
                "path": "app/Policies",
                "name": "CategoryPolicy.php",
                "fullPath": "app/Policies/CategoryPolicy.php",
                "template": "models/Policy.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 60,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Policies;\n\nuse App\\Models\\User;\nuse App\\Models\\Category;\n\nclass CategoryPolicy\n{\n    /**\n     * Determine whether the user can view any models.\n     */\n    public function viewAny(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can view the model.\n     */\n    public function view(User $user, Category $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can create models.\n     */\n    public function create(User $user): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can update the model.\n     */\n    public function update(User $user, Category $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can delete the model.\n     */\n    public function delete(User $user, Category $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can restore the model.\n     */\n    public function restore(User $user, Category $model): bool\n    {\n        return true;\n    }\n\n    /**\n     * Determine whether the user can permanently delete the model.\n     */\n    public function forceDelete(User $user, Category $model): bool\n    {\n        return true;\n    }\n}\n"
            },
            "item_61": {
                "path": "resources/views/livewire/dashboard/users",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/users/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 61,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >{{ __('crud.users.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"search\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.users.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\User::class)\n        <a wire:navigate href=\"{{ route('dashboard.users.create') }}\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"delete({{ $deletingUser }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-crud wire:click=\"sortBy('name')\"\n                    >{{ __('crud.users.inputs.name.label') }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('email')\"\n                    >{{ __('crud.users.inputs.email.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('phone_number')\"\n                    >{{ __('crud.users.inputs.phone_number.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('role')\"\n                    >{{ __('crud.users.inputs.role.label') }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($users as $user)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-crud\n                        >{{ $user->name }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $user->email }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $user->phone_number }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $user->role }}</x-ui.table.column\n                    >\n                    <x-ui.table.action-column>\n                        @can('update', $user)\n                        <x-ui.action\n                            wire:navigate\n                            href=\"{{ route('dashboard.users.edit', $user) }}\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $user)\n                        <x-ui.action.danger\n                            wire:click=\"confirmDeletion({{ $user->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"5\"\n                        >No {{ __('crud.users.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $users->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_62": {
                "path": "app/Livewire/Dashboard",
                "name": "UserIndex.php",
                "fullPath": "app/Livewire/Dashboard/UserIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 62,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\User;\nuse Livewire\\Component;\nuse Livewire\\WithPagination;\n\nclass UserIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingUser;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingUser = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(User $user)\n    {\n        $user->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return User::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('name', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.users.index', [\n            'users' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_63": {
                "path": "resources/views/livewire/dashboard/users",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/users/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 63,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.users.index') }}\"\n            >{{ __('crud.users.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Create {{ __('crud.users.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Create {{ __('crud.users.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.users.inputs.name.label') }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.users.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"email\"\n                        >{{ __('crud.users.inputs.email.label') }}</x-ui.label\n                    >\n                    <x-ui.input.email\n                        class=\"w-full\"\n                        wire:model=\"form.email\"\n                        name=\"email\"\n                        id=\"email\"\n                        placeholder=\"{{ __('crud.users.inputs.email.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.email\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"phone_number\"\n                        >{{ __('crud.users.inputs.phone_number.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.phone_number\"\n                        name=\"phone_number\"\n                        id=\"phone_number\"\n                        placeholder=\"{{ __('crud.users.inputs.phone_number.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.phone_number\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"password\"\n                        >{{ __('crud.users.inputs.password.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.password\n                        class=\"w-full\"\n                        wire:model=\"form.password\"\n                        name=\"password\"\n                        id=\"password\"\n                        placeholder=\"{{ __('crud.users.inputs.password.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.password\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"role\"\n                        >{{ __('crud.users.inputs.role.label') }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.role\"\n                        class=\"w-full\"\n                        id=\"role\"\n                        name=\"role\"\n                    >\n                        <option value=\"\">Select</option>\n                        <option value=\"user\">User</option>\n                        <option value=\"admin\">Admin</option>\n                        <option value=\"manager\">Manager</option>\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"role\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_64": {
                "path": "app/Livewire/Dashboard",
                "name": "UserCreate.php",
                "fullPath": "app/Livewire/Dashboard/UserCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 64,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Users\\Forms\\CreateForm;\n\nclass UserCreate extends Component\n{\n    use WithFileUploads;\n\n    public CreateForm $form;\n\n    public function mount()\n    {\n    }\n\n    public function save()\n    {\n        $this->authorize('create', User::class);\n\n        $this->validate();\n\n        $user = $this->form->save();\n\n        return redirect()->route('dashboard.users.edit', $user);\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.users.create', []);\n    }\n}\n"
            },
            "item_65": {
                "path": "resources/views/livewire/dashboard/users",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/users/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 65,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.users.index') }}\"\n            >{{ __('crud.users.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Edit {{ __('crud.users.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <x-ui.toast on=\"saved\"> User saved successfully. </x-ui.toast>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Edit {{ __('crud.users.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.users.inputs.name.label') }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.users.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"email\"\n                        >{{ __('crud.users.inputs.email.label') }}</x-ui.label\n                    >\n                    <x-ui.input.email\n                        class=\"w-full\"\n                        wire:model=\"form.email\"\n                        name=\"email\"\n                        id=\"email\"\n                        placeholder=\"{{ __('crud.users.inputs.email.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.email\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"phone_number\"\n                        >{{ __('crud.users.inputs.phone_number.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.phone_number\"\n                        name=\"phone_number\"\n                        id=\"phone_number\"\n                        placeholder=\"{{ __('crud.users.inputs.phone_number.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.phone_number\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"password\"\n                        >{{ __('crud.users.inputs.password.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.password\n                        class=\"w-full\"\n                        wire:model=\"form.password\"\n                        name=\"password\"\n                        id=\"password\"\n                        placeholder=\"{{ __('crud.users.inputs.password.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.password\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"role\"\n                        >{{ __('crud.users.inputs.role.label') }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.role\"\n                        class=\"w-full\"\n                        id=\"role\"\n                        name=\"role\"\n                    >\n                        <option value=\"\">Select</option>\n                        <option value=\"user\">User</option>\n                        <option value=\"admin\">Admin</option>\n                        <option value=\"manager\">Manager</option>\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"role\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n\n    @can('view-any', App\\Models\\Reservation::class)\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <div class=\"w-full mb-0\">\n            <div class=\"p-6 space-y-3\">\n                <div\n                    class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\"\n                >\n                    <h2>{{ __('crud.reservations.collectionTitle') }}</h2>\n                </div>\n\n                <livewire:dashboard.user-reservations-detail :user=\"$user\" />\n            </div>\n        </div>\n    </div>\n    @endcan @can('view-any', App\\Models\\Review::class)\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <div class=\"w-full mb-0\">\n            <div class=\"p-6 space-y-3\">\n                <div\n                    class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\"\n                >\n                    <h2>{{ __('crud.reviews.collectionTitle') }}</h2>\n                </div>\n\n                <livewire:dashboard.user-reviews-detail :user=\"$user\" />\n            </div>\n        </div>\n    </div>\n    @endcan\n</div>\n"
            },
            "item_66": {
                "path": "app/Livewire/Dashboard",
                "name": "UserEdit.php",
                "fullPath": "app/Livewire/Dashboard/UserEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 66,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\User;\nuse Livewire\\Component;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Users\\Forms\\UpdateForm;\n\nclass UserEdit extends Component\n{\n    public ?User $user = null;\n\n    public UpdateForm $form;\n\n    public function mount(User $user)\n    {\n        $this->authorize('view-any', User::class);\n\n        $this->user = $user;\n\n        $this->form->setUser($user);\n    }\n\n    public function save()\n    {\n        $this->authorize('update', $this->user);\n\n        $this->validate();\n\n        $this->form->save();\n\n        $this->dispatch('saved');\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.users.edit', []);\n    }\n}\n"
            },
            "item_67": {
                "path": "app/Livewire/Dashboard/Users/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/Users/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 67,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Users\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\User;\nuse Livewire\\Attributes\\Rule;\nuse Illuminate\\Support\\Facades\\Hash;\n\nclass CreateForm extends Form\n{\n    #[Rule('required|string')]\n    public $name = '';\n\n    #[Rule('required|string|unique:users,email')]\n    public $email = '';\n\n    #[Rule('required|string')]\n    public $phone_number = '';\n\n    #[Rule('required|string|min:6')]\n    public $password = '';\n\n    #[Rule('required')]\n    public $role = '';\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->password = Hash::make($this->password);\n\n        $user = User::create($this->except([]));\n\n        $this->reset();\n\n        return $user;\n    }\n}\n"
            },
            "item_68": {
                "path": "app/Livewire/Dashboard/Users/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/Users/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 68,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Users\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\User;\nuse Illuminate\\Validation\\Rule;\nuse Illuminate\\Support\\Facades\\Hash;\n\nclass UpdateForm extends Form\n{\n    public ?User $user;\n\n    public $name = '';\n\n    public $email = '';\n\n    public $phone_number = '';\n\n    public $password = '';\n\n    public $role = '';\n\n    public function rules(): array\n    {\n        return [\n            'name' => ['required', 'string'],\n            'email' => [\n                'required',\n                'string',\n                Rule::unique('users', 'email')->ignore($this->user),\n            ],\n            'phone_number' => ['required', 'string'],\n            'password' => ['nullable', 'string', 'min:6'],\n            'role' => ['required'],\n        ];\n    }\n\n    public function setUser(User $user)\n    {\n        $this->user = $user;\n\n        $this->name = $user->name;\n        $this->email = $user->email;\n        $this->phone_number = $user->phone_number;\n        $this->role = $user->role;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->password = Hash::make($this->password);\n\n        $this->user->update($this->except(['user']));\n    }\n}\n"
            },
            "item_69": {
                "path": "resources/views/livewire/dashboard/users",
                "name": "reservations-detail.blade.php",
                "fullPath": "resources/views/livewire/dashboard/users/reservations-detail.blade.php",
                "template": "crud/views/livewire/HasManyDetailView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 69,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div>\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"detailReservationsSearch\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.reservations.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\Reservation::class)\n        <a wire:click=\"newReservation()\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Modal --}}\n    <x-ui.modal wire:model=\"showingModal\">\n        <div class=\"overflow-hidden border rounded-lg bg-white\">\n            <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n                <div class=\"p-6 space-y-3\">\n                    <div class=\"w-full\">\n                        <x-ui.label for=\"tour_id\"\n                            >{{ __('crud.reservations.inputs.tour_id.label')\n                            }}</x-ui.label\n                        >\n                        <x-ui.input.select\n                            wire:model=\"form.tour_id\"\n                            name=\"tour_id\"\n                            id=\"tour_id\"\n                            class=\"w-full\"\n                        >\n                            <option value=\"\">Select data</option>\n                            @foreach ($tours as $value => $label)\n                            <option value=\"{{ $value }}\">{{ $label }}</option>\n                            @endforeach\n                        </x-ui.input.select>\n                        <x-ui.input.error for=\"form.tour_id\" />\n                    </div>\n\n                    <div class=\"w-full\">\n                        <x-ui.label for=\"status\"\n                            >{{ __('crud.reservations.inputs.status.label')\n                            }}</x-ui.label\n                        >\n                        <x-ui.input.select\n                            wire:model=\"form.status\"\n                            class=\"w-full\"\n                            id=\"status\"\n                            name=\"status\"\n                        >\n                            <option value=\"\">Select</option>\n                            <option value=\"placed\">Placed</option>\n                            <option value=\"confirmed\">Confirmed</option>\n                            <option value=\"canceled\">Canceled</option>\n                        </x-ui.input.select>\n                        <x-ui.input.error for=\"status\" />\n                    </div>\n\n                    <div class=\"w-full\">\n                        <x-ui.label for=\"number_of_people\"\n                            >{{\n                            __('crud.reservations.inputs.number_of_people.label')\n                            }}</x-ui.label\n                        >\n                        <x-ui.input.number\n                            class=\"w-full\"\n                            wire:model=\"form.number_of_people\"\n                            name=\"number_of_people\"\n                            id=\"number_of_people\"\n                            placeholder=\"{{ __('crud.reservations.inputs.number_of_people.placeholder') }}\"\n                            step=\"1\"\n                        />\n                        <x-ui.input.error for=\"form.number_of_people\" />\n                    </div>\n                </div>\n\n                <div\n                    class=\"flex justify-between mt-4 border-t border-gray-50 bg-gray-50 p-4\"\n                >\n                    <div>\n                        <!-- Other buttons here -->\n                    </div>\n                    <div>\n                        <x-ui.button type=\"submit\">Save</x-ui.button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </x-ui.modal>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingReservationDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingReservationDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"deleteReservation({{ $deletingReservation }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-detailCrud wire:click=\"sortBy('tour_id')\"\n                    >{{ __('crud.reservations.inputs.tour_id.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-detailCrud wire:click=\"sortBy('status')\"\n                    >{{ __('crud.reservations.inputs.status.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header\n                    for-detailCrud\n                    wire:click=\"sortBy('number_of_people')\"\n                    >{{ __('crud.reservations.inputs.number_of_people.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($detailReservations as $reservation)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-detailCrud\n                        >{{ $reservation->tour_id }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-detailCrud\n                        >{{ $reservation->status }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-detailCrud\n                        >{{ $reservation->number_of_people }}</x-ui.table.column\n                    >\n                    <x-ui.table.action-column>\n                        @can('update', $reservation)\n                        <x-ui.action\n                            wire:click=\"editReservation({{ $reservation->id }})\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $reservation)\n                        <x-ui.action.danger\n                            wire:click=\"confirmReservationDeletion({{ $reservation->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"4\"\n                        >No {{ __('crud.reservations.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $detailReservations->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_70": {
                "path": "resources/views/livewire/dashboard/users",
                "name": "reviews-detail.blade.php",
                "fullPath": "resources/views/livewire/dashboard/users/reviews-detail.blade.php",
                "template": "crud/views/livewire/HasManyDetailView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 70,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div>\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"detailReviewsSearch\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.reviews.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\Review::class)\n        <a wire:click=\"newReview()\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Modal --}}\n    <x-ui.modal wire:model=\"showingModal\">\n        <div class=\"overflow-hidden border rounded-lg bg-white\">\n            <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n                <div class=\"p-6 space-y-3\">\n                    <div class=\"w-full\">\n                        <x-ui.label for=\"tour_id\"\n                            >{{ __('crud.reviews.inputs.tour_id.label')\n                            }}</x-ui.label\n                        >\n                        <x-ui.input.select\n                            wire:model=\"form.tour_id\"\n                            name=\"tour_id\"\n                            id=\"tour_id\"\n                            class=\"w-full\"\n                        >\n                            <option value=\"\">Select data</option>\n                            @foreach ($tours as $value => $label)\n                            <option value=\"{{ $value }}\">{{ $label }}</option>\n                            @endforeach\n                        </x-ui.input.select>\n                        <x-ui.input.error for=\"form.tour_id\" />\n                    </div>\n\n                    <div class=\"w-full\">\n                        <x-ui.label for=\"rating\"\n                            >{{ __('crud.reviews.inputs.rating.label')\n                            }}</x-ui.label\n                        >\n                        <x-ui.input.number\n                            class=\"w-full\"\n                            wire:model=\"form.rating\"\n                            name=\"rating\"\n                            id=\"rating\"\n                            placeholder=\"{{ __('crud.reviews.inputs.rating.placeholder') }}\"\n                            step=\"1\"\n                        />\n                        <x-ui.input.error for=\"form.rating\" />\n                    </div>\n\n                    <div class=\"w-full\">\n                        <x-ui.label for=\"comment\"\n                            >{{ __('crud.reviews.inputs.comment.label')\n                            }}</x-ui.label\n                        >\n                        <x-ui.input.text\n                            class=\"w-full\"\n                            wire:model=\"form.comment\"\n                            name=\"comment\"\n                            id=\"comment\"\n                            placeholder=\"{{ __('crud.reviews.inputs.comment.placeholder') }}\"\n                        />\n                        <x-ui.input.error for=\"form.comment\" />\n                    </div>\n                </div>\n\n                <div\n                    class=\"flex justify-between mt-4 border-t border-gray-50 bg-gray-50 p-4\"\n                >\n                    <div>\n                        <!-- Other buttons here -->\n                    </div>\n                    <div>\n                        <x-ui.button type=\"submit\">Save</x-ui.button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </x-ui.modal>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingReviewDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingReviewDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"deleteReview({{ $deletingReview }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-detailCrud wire:click=\"sortBy('tour_id')\"\n                    >{{ __('crud.reviews.inputs.tour_id.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-detailCrud wire:click=\"sortBy('rating')\"\n                    >{{ __('crud.reviews.inputs.rating.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-detailCrud wire:click=\"sortBy('comment')\"\n                    >{{ __('crud.reviews.inputs.comment.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($detailReviews as $review)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-detailCrud\n                        >{{ $review->tour_id }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-detailCrud\n                        >{{ $review->rating }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-detailCrud\n                        >{{ $review->comment }}</x-ui.table.column\n                    >\n                    <x-ui.table.action-column>\n                        @can('update', $review)\n                        <x-ui.action wire:click=\"editReview({{ $review->id }})\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $review)\n                        <x-ui.action.danger\n                            wire:click=\"confirmReviewDeletion({{ $review->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"4\"\n                        >No {{ __('crud.reviews.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $detailReviews->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_71": {
                "path": "resources/views/livewire/dashboard/tours",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/tours/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 71,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >{{ __('crud.tours.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"search\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.tours.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\Tour::class)\n        <a wire:navigate href=\"{{ route('dashboard.tours.create') }}\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"delete({{ $deletingTour }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-crud wire:click=\"sortBy('title')\"\n                    >{{ __('crud.tours.inputs.title.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('description')\"\n                    >{{ __('crud.tours.inputs.description.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('location')\"\n                    >{{ __('crud.tours.inputs.location.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('price')\"\n                    >{{ __('crud.tours.inputs.price.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('start_date')\"\n                    >{{ __('crud.tours.inputs.start_date.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('end_date')\"\n                    >{{ __('crud.tours.inputs.end_date.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header\n                    for-crud\n                    wire:click=\"sortBy('max_participants')\"\n                    >{{ __('crud.tours.inputs.max_participants.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($tours as $tour)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-crud\n                        >{{ $tour->title }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $tour->description }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $tour->location }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $tour->price }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $tour->start_date }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $tour->end_date }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $tour->max_participants }}</x-ui.table.column\n                    >\n                    <x-ui.table.action-column>\n                        @can('update', $tour)\n                        <x-ui.action\n                            wire:navigate\n                            href=\"{{ route('dashboard.tours.edit', $tour) }}\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $tour)\n                        <x-ui.action.danger\n                            wire:click=\"confirmDeletion({{ $tour->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"8\"\n                        >No {{ __('crud.tours.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $tours->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_72": {
                "path": "app/Livewire/Dashboard",
                "name": "UserReservationsDetail.php",
                "fullPath": "app/Livewire/Dashboard/UserReservationsDetail.php",
                "template": "crud/views/livewire/HasManyDetailComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 72,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Form;\nuse App\\Models\\User;\nuse App\\Models\\Tour;\nuse Livewire\\Component;\nuse App\\Models\\Reservation;\nuse Livewire\\WithPagination;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Livewire\\Dashboard\\Reservations\\Forms\\CreateDetailForm;\nuse App\\Livewire\\Dashboard\\Reservations\\Forms\\UpdateDetailForm;\n\nclass UserReservationsDetail extends Component\n{\n    use WithFileUploads, WithPagination;\n\n    public CreateDetailForm|UpdateDetailForm $form;\n\n    public ?Reservation $reservation;\n    public User $user;\n\n    public Collection $tours;\n\n    public $showingModal = false;\n\n    public $detailReservationsSearch = '';\n    public $detailReservationsSortField = 'updated_at';\n    public $detailReservationsSortDirection = 'desc';\n\n    public $queryString = [\n        'detailReservationsSearch',\n        'detailReservationsSortField',\n        'detailReservationsSortDirection',\n    ];\n\n    public $confirmingReservationDeletion = false;\n    public string $deletingReservation;\n\n    public function mount()\n    {\n        $this->form = new CreateDetailForm($this, 'form');\n\n        $this->tours = Tour::pluck('title', 'id');\n    }\n\n    public function newReservation()\n    {\n        $this->form = new CreateDetailForm($this, 'form');\n        $this->reservation = null;\n\n        $this->showModal();\n    }\n\n    public function editReservation(Reservation $reservation)\n    {\n        $this->form = new UpdateDetailForm($this, 'form');\n        $this->form->setReservation($reservation);\n        $this->reservation = $reservation;\n\n        $this->showModal();\n    }\n\n    public function showModal()\n    {\n        $this->showingModal = true;\n    }\n\n    public function closeModal()\n    {\n        $this->showingModal = false;\n    }\n\n    public function confirmReservationDeletion(string $id)\n    {\n        $this->deletingReservation = $id;\n\n        $this->confirmingReservationDeletion = true;\n    }\n\n    public function deleteReservation(Reservation $reservation)\n    {\n        $this->authorize('delete', $reservation);\n\n        $reservation->delete();\n\n        $this->confirmingReservationDeletion = false;\n    }\n\n    public function save()\n    {\n        if (empty($this->reservation)) {\n            $this->authorize('create', Reservation::class);\n        } else {\n            $this->authorize('update', $this->reservation);\n        }\n\n        $this->form->user_id = $this->user->id;\n        $this->form->save();\n\n        $this->closeModal();\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->detailReservationsSortField === $field) {\n            $this->detailReservationsSortDirection =\n                $this->detailReservationsSortDirection === 'asc'\n                    ? 'desc'\n                    : 'asc';\n        } else {\n            $this->detailReservationsSortDirection = 'asc';\n        }\n\n        $this->detailReservationsSortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return $this->user\n            ->reservations()\n            ->orderBy(\n                $this->detailReservationsSortField,\n                $this->detailReservationsSortDirection\n            )\n            ->where(\n                'created_at',\n                'like',\n                \"%{$this->detailReservationsSearch}%\"\n            );\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.users.reservations-detail', [\n            'detailReservations' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_73": {
                "path": "app/Livewire/Dashboard",
                "name": "UserReviewsDetail.php",
                "fullPath": "app/Livewire/Dashboard/UserReviewsDetail.php",
                "template": "crud/views/livewire/HasManyDetailComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 73,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Form;\nuse App\\Models\\User;\nuse App\\Models\\Tour;\nuse App\\Models\\Review;\nuse Livewire\\Component;\nuse Livewire\\WithPagination;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Livewire\\Dashboard\\Reviews\\Forms\\CreateDetailForm;\nuse App\\Livewire\\Dashboard\\Reviews\\Forms\\UpdateDetailForm;\n\nclass UserReviewsDetail extends Component\n{\n    use WithFileUploads, WithPagination;\n\n    public CreateDetailForm|UpdateDetailForm $form;\n\n    public ?Review $review;\n    public User $user;\n\n    public Collection $tours;\n\n    public $showingModal = false;\n\n    public $detailReviewsSearch = '';\n    public $detailReviewsSortField = 'updated_at';\n    public $detailReviewsSortDirection = 'desc';\n\n    public $queryString = [\n        'detailReviewsSearch',\n        'detailReviewsSortField',\n        'detailReviewsSortDirection',\n    ];\n\n    public $confirmingReviewDeletion = false;\n    public string $deletingReview;\n\n    public function mount()\n    {\n        $this->form = new CreateDetailForm($this, 'form');\n\n        $this->tours = Tour::pluck('title', 'id');\n    }\n\n    public function newReview()\n    {\n        $this->form = new CreateDetailForm($this, 'form');\n        $this->review = null;\n\n        $this->showModal();\n    }\n\n    public function editReview(Review $review)\n    {\n        $this->form = new UpdateDetailForm($this, 'form');\n        $this->form->setReview($review);\n        $this->review = $review;\n\n        $this->showModal();\n    }\n\n    public function showModal()\n    {\n        $this->showingModal = true;\n    }\n\n    public function closeModal()\n    {\n        $this->showingModal = false;\n    }\n\n    public function confirmReviewDeletion(string $id)\n    {\n        $this->deletingReview = $id;\n\n        $this->confirmingReviewDeletion = true;\n    }\n\n    public function deleteReview(Review $review)\n    {\n        $this->authorize('delete', $review);\n\n        $review->delete();\n\n        $this->confirmingReviewDeletion = false;\n    }\n\n    public function save()\n    {\n        if (empty($this->review)) {\n            $this->authorize('create', Review::class);\n        } else {\n            $this->authorize('update', $this->review);\n        }\n\n        $this->form->user_id = $this->user->id;\n        $this->form->save();\n\n        $this->closeModal();\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->detailReviewsSortField === $field) {\n            $this->detailReviewsSortDirection =\n                $this->detailReviewsSortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->detailReviewsSortDirection = 'asc';\n        }\n\n        $this->detailReviewsSortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return $this->user\n            ->reviews()\n            ->orderBy(\n                $this->detailReviewsSortField,\n                $this->detailReviewsSortDirection\n            )\n            ->where('comment', 'like', \"%{$this->detailReviewsSearch}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.users.reviews-detail', [\n            'detailReviews' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_74": {
                "path": "app/Livewire/Dashboard",
                "name": "TourIndex.php",
                "fullPath": "app/Livewire/Dashboard/TourIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 74,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\Tour;\nuse Livewire\\Component;\nuse Livewire\\WithPagination;\n\nclass TourIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingTour;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingTour = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(Tour $tour)\n    {\n        $tour->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return Tour::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('title', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.tours.index', [\n            'tours' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_75": {
                "path": "app/Livewire/Dashboard/Reservations/Forms",
                "name": "CreateDetailForm.php",
                "fullPath": "app/Livewire/Dashboard/Reservations/Forms/CreateDetailForm.php",
                "template": "crud/views/livewire/CreateDetailFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 75,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Reservations\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Reservation;\nuse Livewire\\Attributes\\Rule;\n\nclass CreateDetailForm extends Form\n{\n    public $tour_id = null;\n\n    #[Rule('required')]\n    public $user_id = '';\n\n    #[Rule('required')]\n    public $status = '';\n\n    #[Rule('required')]\n    public $number_of_people = '';\n\n    public function save()\n    {\n        $this->validate();\n\n        $reservation = Reservation::create($this->except([]));\n\n        $this->reset();\n\n        return $reservation;\n    }\n}\n"
            },
            "item_76": {
                "path": "app/Livewire/Dashboard/Reviews/Forms",
                "name": "CreateDetailForm.php",
                "fullPath": "app/Livewire/Dashboard/Reviews/Forms/CreateDetailForm.php",
                "template": "crud/views/livewire/CreateDetailFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 76,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Reviews\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Review;\nuse Livewire\\Attributes\\Rule;\n\nclass CreateDetailForm extends Form\n{\n    public $tour_id = null;\n\n    #[Rule('required')]\n    public $user_id = '';\n\n    #[Rule('required')]\n    public $rating = '';\n\n    #[Rule('required|string')]\n    public $comment = '';\n\n    public function save()\n    {\n        $this->validate();\n\n        $review = Review::create($this->except([]));\n\n        $this->reset();\n\n        return $review;\n    }\n}\n"
            },
            "item_77": {
                "path": "resources/views/livewire/dashboard/tours",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/tours/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 77,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.tours.index') }}\"\n            >{{ __('crud.tours.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Create {{ __('crud.tours.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Create {{ __('crud.tours.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"title\"\n                        >{{ __('crud.tours.inputs.title.label') }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.title\"\n                        name=\"title\"\n                        id=\"title\"\n                        placeholder=\"{{ __('crud.tours.inputs.title.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.title\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"description\"\n                        >{{ __('crud.tours.inputs.description.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.textarea\n                        class=\"w-full\"\n                        wire:model=\"form.description\"\n                        rows=\"6\"\n                        name=\"description\"\n                        id=\"description\"\n                        placeholder=\"{{ __('crud.tours.inputs.description.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.description\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"location\"\n                        >{{ __('crud.tours.inputs.location.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.location\"\n                        name=\"location\"\n                        id=\"location\"\n                        placeholder=\"{{ __('crud.tours.inputs.location.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.location\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"price\"\n                        >{{ __('crud.tours.inputs.price.label') }}</x-ui.label\n                    >\n                    <x-ui.input.number\n                        class=\"w-full\"\n                        wire:model=\"form.price\"\n                        name=\"price\"\n                        id=\"price\"\n                        placeholder=\"{{ __('crud.tours.inputs.price.placeholder') }}\"\n                        step=\"1\"\n                    />\n                    <x-ui.input.error for=\"form.price\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"start_date\"\n                        >{{ __('crud.tours.inputs.start_date.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.date\n                        class=\"w-full\"\n                        wire:model=\"form.start_date\"\n                        name=\"start_date\"\n                        id=\"start_date\"\n                    />\n                    <x-ui.input.error for=\"form.start_date\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"end_date\"\n                        >{{ __('crud.tours.inputs.end_date.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.date\n                        class=\"w-full\"\n                        wire:model=\"form.end_date\"\n                        name=\"end_date\"\n                        id=\"end_date\"\n                    />\n                    <x-ui.input.error for=\"form.end_date\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"max_participants\"\n                        >{{ __('crud.tours.inputs.max_participants.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.number\n                        class=\"w-full\"\n                        wire:model=\"form.max_participants\"\n                        name=\"max_participants\"\n                        id=\"max_participants\"\n                        placeholder=\"{{ __('crud.tours.inputs.max_participants.placeholder') }}\"\n                        step=\"1\"\n                    />\n                    <x-ui.input.error for=\"form.max_participants\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_78": {
                "path": "app/Livewire/Dashboard/Reservations/Forms",
                "name": "UpdateDetailForm.php",
                "fullPath": "app/Livewire/Dashboard/Reservations/Forms/UpdateDetailForm.php",
                "template": "crud/views/livewire/UpdateDetailFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 78,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Reservations\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Reservation;\nuse Livewire\\Attributes\\Rule;\n\nclass UpdateDetailForm extends Form\n{\n    public ?Reservation $reservation;\n\n    public $user_id = '';\n\n    public $status = '';\n\n    public $number_of_people = '';\n\n    public function rules(): array\n    {\n        return [\n            'user_id' => ['required'],\n            'status' => ['required'],\n            'number_of_people' => ['required'],\n        ];\n    }\n\n    public function setReservation(Reservation $reservation)\n    {\n        $this->reservation = $reservation;\n\n        $this->user_id = $reservation->user_id;\n        $this->status = $reservation->status;\n        $this->number_of_people = $reservation->number_of_people;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->reservation->update($this->except(['reservation', 'user_id']));\n    }\n}\n"
            },
            "item_79": {
                "path": "app/Livewire/Dashboard/Reviews/Forms",
                "name": "UpdateDetailForm.php",
                "fullPath": "app/Livewire/Dashboard/Reviews/Forms/UpdateDetailForm.php",
                "template": "crud/views/livewire/UpdateDetailFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 79,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Reviews\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Review;\nuse Livewire\\Attributes\\Rule;\n\nclass UpdateDetailForm extends Form\n{\n    public ?Review $review;\n\n    public $user_id = '';\n\n    public $rating = '';\n\n    public $comment = '';\n\n    public function rules(): array\n    {\n        return [\n            'user_id' => ['required'],\n            'rating' => ['required'],\n            'comment' => ['required', 'string'],\n        ];\n    }\n\n    public function setReview(Review $review)\n    {\n        $this->review = $review;\n\n        $this->user_id = $review->user_id;\n        $this->rating = $review->rating;\n        $this->comment = $review->comment;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->review->update($this->except(['review', 'user_id']));\n    }\n}\n"
            },
            "item_80": {
                "path": "app/Livewire/Dashboard",
                "name": "TourCreate.php",
                "fullPath": "app/Livewire/Dashboard/TourCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 80,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Tours\\Forms\\CreateForm;\n\nclass TourCreate extends Component\n{\n    use WithFileUploads;\n\n    public CreateForm $form;\n\n    public function mount()\n    {\n    }\n\n    public function save()\n    {\n        $this->authorize('create', Tour::class);\n\n        $this->validate();\n\n        $tour = $this->form->save();\n\n        return redirect()->route('dashboard.tours.edit', $tour);\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.tours.create', []);\n    }\n}\n"
            },
            "item_81": {
                "path": "resources/views/livewire/dashboard/tours",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/tours/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 81,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.tours.index') }}\"\n            >{{ __('crud.tours.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Edit {{ __('crud.tours.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <x-ui.toast on=\"saved\"> Tour saved successfully. </x-ui.toast>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Edit {{ __('crud.tours.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"title\"\n                        >{{ __('crud.tours.inputs.title.label') }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.title\"\n                        name=\"title\"\n                        id=\"title\"\n                        placeholder=\"{{ __('crud.tours.inputs.title.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.title\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"description\"\n                        >{{ __('crud.tours.inputs.description.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.textarea\n                        class=\"w-full\"\n                        wire:model=\"form.description\"\n                        rows=\"6\"\n                        name=\"description\"\n                        id=\"description\"\n                        placeholder=\"{{ __('crud.tours.inputs.description.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.description\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"location\"\n                        >{{ __('crud.tours.inputs.location.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.location\"\n                        name=\"location\"\n                        id=\"location\"\n                        placeholder=\"{{ __('crud.tours.inputs.location.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.location\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"price\"\n                        >{{ __('crud.tours.inputs.price.label') }}</x-ui.label\n                    >\n                    <x-ui.input.number\n                        class=\"w-full\"\n                        wire:model=\"form.price\"\n                        name=\"price\"\n                        id=\"price\"\n                        placeholder=\"{{ __('crud.tours.inputs.price.placeholder') }}\"\n                        step=\"1\"\n                    />\n                    <x-ui.input.error for=\"form.price\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"start_date\"\n                        >{{ __('crud.tours.inputs.start_date.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.date\n                        class=\"w-full\"\n                        wire:model=\"form.start_date\"\n                        name=\"start_date\"\n                        id=\"start_date\"\n                    />\n                    <x-ui.input.error for=\"form.start_date\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"end_date\"\n                        >{{ __('crud.tours.inputs.end_date.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.date\n                        class=\"w-full\"\n                        wire:model=\"form.end_date\"\n                        name=\"end_date\"\n                        id=\"end_date\"\n                    />\n                    <x-ui.input.error for=\"form.end_date\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"max_participants\"\n                        >{{ __('crud.tours.inputs.max_participants.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.number\n                        class=\"w-full\"\n                        wire:model=\"form.max_participants\"\n                        name=\"max_participants\"\n                        id=\"max_participants\"\n                        placeholder=\"{{ __('crud.tours.inputs.max_participants.placeholder') }}\"\n                        step=\"1\"\n                    />\n                    <x-ui.input.error for=\"form.max_participants\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n\n    @can('view-any', App\\Models\\Reservation::class)\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <div class=\"w-full mb-0\">\n            <div class=\"p-6 space-y-3\">\n                <div\n                    class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\"\n                >\n                    <h2>{{ __('crud.reservations.collectionTitle') }}</h2>\n                </div>\n\n                <livewire:dashboard.tour-reservations-detail :tour=\"$tour\" />\n            </div>\n        </div>\n    </div>\n    @endcan @can('view-any', App\\Models\\Review::class)\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <div class=\"w-full mb-0\">\n            <div class=\"p-6 space-y-3\">\n                <div\n                    class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\"\n                >\n                    <h2>{{ __('crud.reviews.collectionTitle') }}</h2>\n                </div>\n\n                <livewire:dashboard.tour-reviews-detail :tour=\"$tour\" />\n            </div>\n        </div>\n    </div>\n    @endcan\n</div>\n"
            },
            "item_82": {
                "path": "app/Livewire/Dashboard",
                "name": "TourEdit.php",
                "fullPath": "app/Livewire/Dashboard/TourEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 82,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\Tour;\nuse Livewire\\Component;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Tours\\Forms\\UpdateForm;\n\nclass TourEdit extends Component\n{\n    public ?Tour $tour = null;\n\n    public UpdateForm $form;\n\n    public function mount(Tour $tour)\n    {\n        $this->authorize('view-any', Tour::class);\n\n        $this->tour = $tour;\n\n        $this->form->setTour($tour);\n    }\n\n    public function save()\n    {\n        $this->authorize('update', $this->tour);\n\n        $this->validate();\n\n        $this->form->save();\n\n        $this->dispatch('saved');\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.tours.edit', []);\n    }\n}\n"
            },
            "item_83": {
                "path": "app/Livewire/Dashboard/Tours/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/Tours/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 83,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Tours\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Tour;\nuse Livewire\\Attributes\\Rule;\n\nclass CreateForm extends Form\n{\n    #[Rule('required|string')]\n    public $title = '';\n\n    #[Rule('required|string')]\n    public $description = '';\n\n    #[Rule('required|string')]\n    public $location = '';\n\n    #[Rule('required')]\n    public $price = '';\n\n    #[Rule('required|date')]\n    public $start_date = '';\n\n    #[Rule('required|date')]\n    public $end_date = '';\n\n    #[Rule('nullable')]\n    public $max_participants = '';\n\n    public function save()\n    {\n        $this->validate();\n\n        $tour = Tour::create($this->except([]));\n\n        $this->reset();\n\n        return $tour;\n    }\n}\n"
            },
            "item_84": {
                "path": "app/Livewire/Dashboard/Tours/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/Tours/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 84,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Tours\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Tour;\nuse Illuminate\\Validation\\Rule;\n\nclass UpdateForm extends Form\n{\n    public ?Tour $tour;\n\n    public $title = '';\n\n    public $description = '';\n\n    public $location = '';\n\n    public $price = '';\n\n    public $start_date = '';\n\n    public $end_date = '';\n\n    public $max_participants = '';\n\n    public function rules(): array\n    {\n        return [\n            'title' => ['required', 'string'],\n            'description' => ['required', 'string'],\n            'location' => ['required', 'string'],\n            'price' => ['required'],\n            'start_date' => ['required', 'date'],\n            'end_date' => ['required', 'date'],\n            'max_participants' => ['nullable'],\n        ];\n    }\n\n    public function setTour(Tour $tour)\n    {\n        $this->tour = $tour;\n\n        $this->title = $tour->title;\n        $this->description = $tour->description;\n        $this->location = $tour->location;\n        $this->price = $tour->price;\n        $this->start_date = $tour->start_date;\n        $this->end_date = $tour->end_date;\n        $this->max_participants = $tour->max_participants;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->tour->update($this->except(['tour']));\n    }\n}\n"
            },
            "item_85": {
                "path": "resources/views/livewire/dashboard/tours",
                "name": "reservations-detail.blade.php",
                "fullPath": "resources/views/livewire/dashboard/tours/reservations-detail.blade.php",
                "template": "crud/views/livewire/HasManyDetailView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 85,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div>\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"detailReservationsSearch\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.reservations.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\Reservation::class)\n        <a wire:click=\"newReservation()\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Modal --}}\n    <x-ui.modal wire:model=\"showingModal\">\n        <div class=\"overflow-hidden border rounded-lg bg-white\">\n            <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n                <div class=\"p-6 space-y-3\">\n                    <div class=\"w-full\">\n                        <x-ui.label for=\"user_id\"\n                            >{{ __('crud.reservations.inputs.user_id.label')\n                            }}</x-ui.label\n                        >\n                        <x-ui.input.select\n                            wire:model=\"form.user_id\"\n                            name=\"user_id\"\n                            id=\"user_id\"\n                            class=\"w-full\"\n                        >\n                            <option value=\"\">Select data</option>\n                            @foreach ($users as $value => $label)\n                            <option value=\"{{ $value }}\">{{ $label }}</option>\n                            @endforeach\n                        </x-ui.input.select>\n                        <x-ui.input.error for=\"form.user_id\" />\n                    </div>\n\n                    <div class=\"w-full\">\n                        <x-ui.label for=\"status\"\n                            >{{ __('crud.reservations.inputs.status.label')\n                            }}</x-ui.label\n                        >\n                        <x-ui.input.select\n                            wire:model=\"form.status\"\n                            class=\"w-full\"\n                            id=\"status\"\n                            name=\"status\"\n                        >\n                            <option value=\"\">Select</option>\n                            <option value=\"placed\">Placed</option>\n                            <option value=\"confirmed\">Confirmed</option>\n                            <option value=\"canceled\">Canceled</option>\n                        </x-ui.input.select>\n                        <x-ui.input.error for=\"status\" />\n                    </div>\n\n                    <div class=\"w-full\">\n                        <x-ui.label for=\"number_of_people\"\n                            >{{\n                            __('crud.reservations.inputs.number_of_people.label')\n                            }}</x-ui.label\n                        >\n                        <x-ui.input.number\n                            class=\"w-full\"\n                            wire:model=\"form.number_of_people\"\n                            name=\"number_of_people\"\n                            id=\"number_of_people\"\n                            placeholder=\"{{ __('crud.reservations.inputs.number_of_people.placeholder') }}\"\n                            step=\"1\"\n                        />\n                        <x-ui.input.error for=\"form.number_of_people\" />\n                    </div>\n                </div>\n\n                <div\n                    class=\"flex justify-between mt-4 border-t border-gray-50 bg-gray-50 p-4\"\n                >\n                    <div>\n                        <!-- Other buttons here -->\n                    </div>\n                    <div>\n                        <x-ui.button type=\"submit\">Save</x-ui.button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </x-ui.modal>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingReservationDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingReservationDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"deleteReservation({{ $deletingReservation }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-detailCrud wire:click=\"sortBy('user_id')\"\n                    >{{ __('crud.reservations.inputs.user_id.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-detailCrud wire:click=\"sortBy('status')\"\n                    >{{ __('crud.reservations.inputs.status.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header\n                    for-detailCrud\n                    wire:click=\"sortBy('number_of_people')\"\n                    >{{ __('crud.reservations.inputs.number_of_people.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($detailReservations as $reservation)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-detailCrud\n                        >{{ $reservation->user_id }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-detailCrud\n                        >{{ $reservation->status }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-detailCrud\n                        >{{ $reservation->number_of_people }}</x-ui.table.column\n                    >\n                    <x-ui.table.action-column>\n                        @can('update', $reservation)\n                        <x-ui.action\n                            wire:click=\"editReservation({{ $reservation->id }})\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $reservation)\n                        <x-ui.action.danger\n                            wire:click=\"confirmReservationDeletion({{ $reservation->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"4\"\n                        >No {{ __('crud.reservations.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $detailReservations->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_86": {
                "path": "resources/views/livewire/dashboard/tours",
                "name": "reviews-detail.blade.php",
                "fullPath": "resources/views/livewire/dashboard/tours/reviews-detail.blade.php",
                "template": "crud/views/livewire/HasManyDetailView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 86,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div>\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"detailReviewsSearch\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.reviews.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\Review::class)\n        <a wire:click=\"newReview()\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Modal --}}\n    <x-ui.modal wire:model=\"showingModal\">\n        <div class=\"overflow-hidden border rounded-lg bg-white\">\n            <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n                <div class=\"p-6 space-y-3\">\n                    <div class=\"w-full\">\n                        <x-ui.label for=\"user_id\"\n                            >{{ __('crud.reviews.inputs.user_id.label')\n                            }}</x-ui.label\n                        >\n                        <x-ui.input.select\n                            wire:model=\"form.user_id\"\n                            name=\"user_id\"\n                            id=\"user_id\"\n                            class=\"w-full\"\n                        >\n                            <option value=\"\">Select data</option>\n                            @foreach ($users as $value => $label)\n                            <option value=\"{{ $value }}\">{{ $label }}</option>\n                            @endforeach\n                        </x-ui.input.select>\n                        <x-ui.input.error for=\"form.user_id\" />\n                    </div>\n\n                    <div class=\"w-full\">\n                        <x-ui.label for=\"rating\"\n                            >{{ __('crud.reviews.inputs.rating.label')\n                            }}</x-ui.label\n                        >\n                        <x-ui.input.number\n                            class=\"w-full\"\n                            wire:model=\"form.rating\"\n                            name=\"rating\"\n                            id=\"rating\"\n                            placeholder=\"{{ __('crud.reviews.inputs.rating.placeholder') }}\"\n                            step=\"1\"\n                        />\n                        <x-ui.input.error for=\"form.rating\" />\n                    </div>\n\n                    <div class=\"w-full\">\n                        <x-ui.label for=\"comment\"\n                            >{{ __('crud.reviews.inputs.comment.label')\n                            }}</x-ui.label\n                        >\n                        <x-ui.input.text\n                            class=\"w-full\"\n                            wire:model=\"form.comment\"\n                            name=\"comment\"\n                            id=\"comment\"\n                            placeholder=\"{{ __('crud.reviews.inputs.comment.placeholder') }}\"\n                        />\n                        <x-ui.input.error for=\"form.comment\" />\n                    </div>\n                </div>\n\n                <div\n                    class=\"flex justify-between mt-4 border-t border-gray-50 bg-gray-50 p-4\"\n                >\n                    <div>\n                        <!-- Other buttons here -->\n                    </div>\n                    <div>\n                        <x-ui.button type=\"submit\">Save</x-ui.button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </x-ui.modal>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingReviewDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingReviewDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"deleteReview({{ $deletingReview }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-detailCrud wire:click=\"sortBy('user_id')\"\n                    >{{ __('crud.reviews.inputs.user_id.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-detailCrud wire:click=\"sortBy('rating')\"\n                    >{{ __('crud.reviews.inputs.rating.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-detailCrud wire:click=\"sortBy('comment')\"\n                    >{{ __('crud.reviews.inputs.comment.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($detailReviews as $review)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-detailCrud\n                        >{{ $review->user_id }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-detailCrud\n                        >{{ $review->rating }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-detailCrud\n                        >{{ $review->comment }}</x-ui.table.column\n                    >\n                    <x-ui.table.action-column>\n                        @can('update', $review)\n                        <x-ui.action wire:click=\"editReview({{ $review->id }})\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $review)\n                        <x-ui.action.danger\n                            wire:click=\"confirmReviewDeletion({{ $review->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"4\"\n                        >No {{ __('crud.reviews.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $detailReviews->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_87": {
                "path": "resources/views/livewire/dashboard/reservations",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/reservations/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 87,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >{{ __('crud.reservations.collectionTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"search\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.reservations.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\Reservation::class)\n        <a wire:navigate href=\"{{ route('dashboard.reservations.create') }}\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"delete({{ $deletingReservation }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-crud wire:click=\"sortBy('user_id')\"\n                    >{{ __('crud.reservations.inputs.user_id.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('tour_id')\"\n                    >{{ __('crud.reservations.inputs.tour_id.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('status')\"\n                    >{{ __('crud.reservations.inputs.status.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header\n                    for-crud\n                    wire:click=\"sortBy('number_of_people')\"\n                    >{{ __('crud.reservations.inputs.number_of_people.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($reservations as $reservation)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-crud\n                        >{{ $reservation->user_id }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $reservation->tour_id }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $reservation->status }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $reservation->number_of_people }}</x-ui.table.column\n                    >\n                    <x-ui.table.action-column>\n                        @can('update', $reservation)\n                        <x-ui.action\n                            wire:navigate\n                            href=\"{{ route('dashboard.reservations.edit', $reservation) }}\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $reservation)\n                        <x-ui.action.danger\n                            wire:click=\"confirmDeletion({{ $reservation->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"5\"\n                        >No {{ __('crud.reservations.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $reservations->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_88": {
                "path": "app/Livewire/Dashboard",
                "name": "TourReservationsDetail.php",
                "fullPath": "app/Livewire/Dashboard/TourReservationsDetail.php",
                "template": "crud/views/livewire/HasManyDetailComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 88,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Form;\nuse App\\Models\\Tour;\nuse App\\Models\\User;\nuse Livewire\\Component;\nuse App\\Models\\Reservation;\nuse Livewire\\WithPagination;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Livewire\\Dashboard\\Reservations\\Forms\\CreateDetailForm;\nuse App\\Livewire\\Dashboard\\Reservations\\Forms\\UpdateDetailForm;\n\nclass TourReservationsDetail extends Component\n{\n    use WithFileUploads, WithPagination;\n\n    public CreateDetailForm|UpdateDetailForm $form;\n\n    public ?Reservation $reservation;\n    public Tour $tour;\n\n    public Collection $users;\n\n    public $showingModal = false;\n\n    public $detailReservationsSearch = '';\n    public $detailReservationsSortField = 'updated_at';\n    public $detailReservationsSortDirection = 'desc';\n\n    public $queryString = [\n        'detailReservationsSearch',\n        'detailReservationsSortField',\n        'detailReservationsSortDirection',\n    ];\n\n    public $confirmingReservationDeletion = false;\n    public string $deletingReservation;\n\n    public function mount()\n    {\n        $this->form = new CreateDetailForm($this, 'form');\n\n        $this->users = User::pluck('name', 'id');\n    }\n\n    public function newReservation()\n    {\n        $this->form = new CreateDetailForm($this, 'form');\n        $this->reservation = null;\n\n        $this->showModal();\n    }\n\n    public function editReservation(Reservation $reservation)\n    {\n        $this->form = new UpdateDetailForm($this, 'form');\n        $this->form->setReservation($reservation);\n        $this->reservation = $reservation;\n\n        $this->showModal();\n    }\n\n    public function showModal()\n    {\n        $this->showingModal = true;\n    }\n\n    public function closeModal()\n    {\n        $this->showingModal = false;\n    }\n\n    public function confirmReservationDeletion(string $id)\n    {\n        $this->deletingReservation = $id;\n\n        $this->confirmingReservationDeletion = true;\n    }\n\n    public function deleteReservation(Reservation $reservation)\n    {\n        $this->authorize('delete', $reservation);\n\n        $reservation->delete();\n\n        $this->confirmingReservationDeletion = false;\n    }\n\n    public function save()\n    {\n        if (empty($this->reservation)) {\n            $this->authorize('create', Reservation::class);\n        } else {\n            $this->authorize('update', $this->reservation);\n        }\n\n        $this->form->tour_id = $this->tour->id;\n        $this->form->save();\n\n        $this->closeModal();\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->detailReservationsSortField === $field) {\n            $this->detailReservationsSortDirection =\n                $this->detailReservationsSortDirection === 'asc'\n                    ? 'desc'\n                    : 'asc';\n        } else {\n            $this->detailReservationsSortDirection = 'asc';\n        }\n\n        $this->detailReservationsSortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return $this->tour\n            ->reservations()\n            ->orderBy(\n                $this->detailReservationsSortField,\n                $this->detailReservationsSortDirection\n            )\n            ->where(\n                'created_at',\n                'like',\n                \"%{$this->detailReservationsSearch}%\"\n            );\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.tours.reservations-detail', [\n            'detailReservations' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_89": {
                "path": "app/Livewire/Dashboard",
                "name": "TourReviewsDetail.php",
                "fullPath": "app/Livewire/Dashboard/TourReviewsDetail.php",
                "template": "crud/views/livewire/HasManyDetailComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 89,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Form;\nuse App\\Models\\Tour;\nuse App\\Models\\User;\nuse App\\Models\\Review;\nuse Livewire\\Component;\nuse Livewire\\WithPagination;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse Illuminate\\Support\\Facades\\Storage;\nuse App\\Livewire\\Dashboard\\Reviews\\Forms\\CreateDetailForm;\nuse App\\Livewire\\Dashboard\\Reviews\\Forms\\UpdateDetailForm;\n\nclass TourReviewsDetail extends Component\n{\n    use WithFileUploads, WithPagination;\n\n    public CreateDetailForm|UpdateDetailForm $form;\n\n    public ?Review $review;\n    public Tour $tour;\n\n    public Collection $users;\n\n    public $showingModal = false;\n\n    public $detailReviewsSearch = '';\n    public $detailReviewsSortField = 'updated_at';\n    public $detailReviewsSortDirection = 'desc';\n\n    public $queryString = [\n        'detailReviewsSearch',\n        'detailReviewsSortField',\n        'detailReviewsSortDirection',\n    ];\n\n    public $confirmingReviewDeletion = false;\n    public string $deletingReview;\n\n    public function mount()\n    {\n        $this->form = new CreateDetailForm($this, 'form');\n\n        $this->users = User::pluck('name', 'id');\n    }\n\n    public function newReview()\n    {\n        $this->form = new CreateDetailForm($this, 'form');\n        $this->review = null;\n\n        $this->showModal();\n    }\n\n    public function editReview(Review $review)\n    {\n        $this->form = new UpdateDetailForm($this, 'form');\n        $this->form->setReview($review);\n        $this->review = $review;\n\n        $this->showModal();\n    }\n\n    public function showModal()\n    {\n        $this->showingModal = true;\n    }\n\n    public function closeModal()\n    {\n        $this->showingModal = false;\n    }\n\n    public function confirmReviewDeletion(string $id)\n    {\n        $this->deletingReview = $id;\n\n        $this->confirmingReviewDeletion = true;\n    }\n\n    public function deleteReview(Review $review)\n    {\n        $this->authorize('delete', $review);\n\n        $review->delete();\n\n        $this->confirmingReviewDeletion = false;\n    }\n\n    public function save()\n    {\n        if (empty($this->review)) {\n            $this->authorize('create', Review::class);\n        } else {\n            $this->authorize('update', $this->review);\n        }\n\n        $this->form->tour_id = $this->tour->id;\n        $this->form->save();\n\n        $this->closeModal();\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->detailReviewsSortField === $field) {\n            $this->detailReviewsSortDirection =\n                $this->detailReviewsSortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->detailReviewsSortDirection = 'asc';\n        }\n\n        $this->detailReviewsSortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return $this->tour\n            ->reviews()\n            ->orderBy(\n                $this->detailReviewsSortField,\n                $this->detailReviewsSortDirection\n            )\n            ->where('comment', 'like', \"%{$this->detailReviewsSearch}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.tours.reviews-detail', [\n            'detailReviews' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_90": {
                "path": "app/Livewire/Dashboard",
                "name": "ReservationIndex.php",
                "fullPath": "app/Livewire/Dashboard/ReservationIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 90,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\Reservation;\nuse Livewire\\WithPagination;\n\nclass ReservationIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingReservation;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingReservation = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(Reservation $reservation)\n    {\n        $reservation->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return Reservation::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('created_at', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.reservations.index', [\n            'reservations' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_91": {
                "path": "resources/views/livewire/dashboard/reservations",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/reservations/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 91,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link\n            href=\"{{ route('dashboard.reservations.index') }}\"\n            >{{ __('crud.reservations.collectionTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Create {{ __('crud.reservations.itemTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Create {{ __('crud.reservations.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"user_id\"\n                        >{{ __('crud.reservations.inputs.user_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.user_id\"\n                        name=\"user_id\"\n                        id=\"user_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($users as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.user_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"tour_id\"\n                        >{{ __('crud.reservations.inputs.tour_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.tour_id\"\n                        name=\"tour_id\"\n                        id=\"tour_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($tours as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.tour_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"status\"\n                        >{{ __('crud.reservations.inputs.status.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.status\"\n                        class=\"w-full\"\n                        id=\"status\"\n                        name=\"status\"\n                    >\n                        <option value=\"\">Select</option>\n                        <option value=\"placed\">Placed</option>\n                        <option value=\"confirmed\">Confirmed</option>\n                        <option value=\"canceled\">Canceled</option>\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"status\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"number_of_people\"\n                        >{{\n                        __('crud.reservations.inputs.number_of_people.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.number\n                        class=\"w-full\"\n                        wire:model=\"form.number_of_people\"\n                        name=\"number_of_people\"\n                        id=\"number_of_people\"\n                        placeholder=\"{{ __('crud.reservations.inputs.number_of_people.placeholder') }}\"\n                        step=\"1\"\n                    />\n                    <x-ui.input.error for=\"form.number_of_people\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_92": {
                "path": "app/Livewire/Dashboard",
                "name": "ReservationCreate.php",
                "fullPath": "app/Livewire/Dashboard/ReservationCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 92,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\User;\nuse App\\Models\\Tour;\nuse Livewire\\Component;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Reservations\\Forms\\CreateForm;\n\nclass ReservationCreate extends Component\n{\n    use WithFileUploads;\n\n    public CreateForm $form;\n    public Collection $users;\n    public Collection $tours;\n\n    public function mount()\n    {\n        $this->users = User::pluck('name', 'id');\n        $this->tours = Tour::pluck('title', 'id');\n    }\n\n    public function save()\n    {\n        $this->authorize('create', Reservation::class);\n\n        $this->validate();\n\n        $reservation = $this->form->save();\n\n        return redirect()->route('dashboard.reservations.edit', $reservation);\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.reservations.create', []);\n    }\n}\n"
            },
            "item_93": {
                "path": "resources/views/livewire/dashboard/reservations",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/reservations/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 93,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link\n            href=\"{{ route('dashboard.reservations.index') }}\"\n            >{{ __('crud.reservations.collectionTitle')\n            }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Edit {{ __('crud.reservations.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <x-ui.toast on=\"saved\"> Reservation saved successfully. </x-ui.toast>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Edit {{ __('crud.reservations.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"user_id\"\n                        >{{ __('crud.reservations.inputs.user_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.user_id\"\n                        name=\"user_id\"\n                        id=\"user_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($users as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.user_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"tour_id\"\n                        >{{ __('crud.reservations.inputs.tour_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.tour_id\"\n                        name=\"tour_id\"\n                        id=\"tour_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($tours as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.tour_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"status\"\n                        >{{ __('crud.reservations.inputs.status.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.status\"\n                        class=\"w-full\"\n                        id=\"status\"\n                        name=\"status\"\n                    >\n                        <option value=\"\">Select</option>\n                        <option value=\"placed\">Placed</option>\n                        <option value=\"confirmed\">Confirmed</option>\n                        <option value=\"canceled\">Canceled</option>\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"status\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"number_of_people\"\n                        >{{\n                        __('crud.reservations.inputs.number_of_people.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.number\n                        class=\"w-full\"\n                        wire:model=\"form.number_of_people\"\n                        name=\"number_of_people\"\n                        id=\"number_of_people\"\n                        placeholder=\"{{ __('crud.reservations.inputs.number_of_people.placeholder') }}\"\n                        step=\"1\"\n                    />\n                    <x-ui.input.error for=\"form.number_of_people\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_94": {
                "path": "app/Livewire/Dashboard",
                "name": "ReservationEdit.php",
                "fullPath": "app/Livewire/Dashboard/ReservationEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 94,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\User;\nuse App\\Models\\Tour;\nuse Livewire\\Component;\nuse App\\Models\\Reservation;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Reservations\\Forms\\UpdateForm;\n\nclass ReservationEdit extends Component\n{\n    public ?Reservation $reservation = null;\n\n    public UpdateForm $form;\n    public Collection $users;\n    public Collection $tours;\n\n    public function mount(Reservation $reservation)\n    {\n        $this->authorize('view-any', Reservation::class);\n\n        $this->reservation = $reservation;\n\n        $this->form->setReservation($reservation);\n        $this->users = User::pluck('name', 'id');\n        $this->tours = Tour::pluck('title', 'id');\n    }\n\n    public function save()\n    {\n        $this->authorize('update', $this->reservation);\n\n        $this->validate();\n\n        $this->form->save();\n\n        $this->dispatch('saved');\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.reservations.edit', []);\n    }\n}\n"
            },
            "item_95": {
                "path": "app/Livewire/Dashboard/Reservations/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/Reservations/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 95,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Reservations\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Reservation;\nuse Livewire\\Attributes\\Rule;\n\nclass CreateForm extends Form\n{\n    #[Rule('required')]\n    public $user_id = '';\n\n    #[Rule('required')]\n    public $tour_id = '';\n\n    #[Rule('required')]\n    public $status = '';\n\n    #[Rule('required')]\n    public $number_of_people = '';\n\n    public function save()\n    {\n        $this->validate();\n\n        $reservation = Reservation::create($this->except([]));\n\n        $this->reset();\n\n        return $reservation;\n    }\n}\n"
            },
            "item_96": {
                "path": "app/Livewire/Dashboard/Reservations/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/Reservations/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 96,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Reservations\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Reservation;\nuse Illuminate\\Validation\\Rule;\n\nclass UpdateForm extends Form\n{\n    public ?Reservation $reservation;\n\n    public $user_id = '';\n\n    public $tour_id = '';\n\n    public $status = '';\n\n    public $number_of_people = '';\n\n    public function rules(): array\n    {\n        return [\n            'user_id' => ['required'],\n            'tour_id' => ['required'],\n            'status' => ['required'],\n            'number_of_people' => ['required'],\n        ];\n    }\n\n    public function setReservation(Reservation $reservation)\n    {\n        $this->reservation = $reservation;\n\n        $this->user_id = $reservation->user_id;\n        $this->tour_id = $reservation->tour_id;\n        $this->status = $reservation->status;\n        $this->number_of_people = $reservation->number_of_people;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->reservation->update(\n            $this->except(['reservation', 'user_id', 'tour_id'])\n        );\n    }\n}\n"
            },
            "item_97": {
                "path": "resources/views/livewire/dashboard/reviews",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/reviews/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 97,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >{{ __('crud.reviews.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"search\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.reviews.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\Review::class)\n        <a wire:navigate href=\"{{ route('dashboard.reviews.create') }}\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"delete({{ $deletingReview }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-crud wire:click=\"sortBy('user_id')\"\n                    >{{ __('crud.reviews.inputs.user_id.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('tour_id')\"\n                    >{{ __('crud.reviews.inputs.tour_id.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('rating')\"\n                    >{{ __('crud.reviews.inputs.rating.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('comment')\"\n                    >{{ __('crud.reviews.inputs.comment.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($reviews as $review)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-crud\n                        >{{ $review->user_id }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $review->tour_id }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $review->rating }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $review->comment }}</x-ui.table.column\n                    >\n                    <x-ui.table.action-column>\n                        @can('update', $review)\n                        <x-ui.action\n                            wire:navigate\n                            href=\"{{ route('dashboard.reviews.edit', $review) }}\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $review)\n                        <x-ui.action.danger\n                            wire:click=\"confirmDeletion({{ $review->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"5\"\n                        >No {{ __('crud.reviews.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $reviews->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_98": {
                "path": "app/Livewire/Dashboard",
                "name": "ReviewIndex.php",
                "fullPath": "app/Livewire/Dashboard/ReviewIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 98,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\Review;\nuse Livewire\\Component;\nuse Livewire\\WithPagination;\n\nclass ReviewIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingReview;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingReview = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(Review $review)\n    {\n        $review->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return Review::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('comment', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.reviews.index', [\n            'reviews' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_99": {
                "path": "resources/views/livewire/dashboard/reviews",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/reviews/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 99,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.reviews.index') }}\"\n            >{{ __('crud.reviews.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Create {{ __('crud.reviews.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Create {{ __('crud.reviews.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"user_id\"\n                        >{{ __('crud.reviews.inputs.user_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.user_id\"\n                        name=\"user_id\"\n                        id=\"user_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($users as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.user_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"tour_id\"\n                        >{{ __('crud.reviews.inputs.tour_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.tour_id\"\n                        name=\"tour_id\"\n                        id=\"tour_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($tours as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.tour_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"rating\"\n                        >{{ __('crud.reviews.inputs.rating.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.number\n                        class=\"w-full\"\n                        wire:model=\"form.rating\"\n                        name=\"rating\"\n                        id=\"rating\"\n                        placeholder=\"{{ __('crud.reviews.inputs.rating.placeholder') }}\"\n                        step=\"1\"\n                    />\n                    <x-ui.input.error for=\"form.rating\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"comment\"\n                        >{{ __('crud.reviews.inputs.comment.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.comment\"\n                        name=\"comment\"\n                        id=\"comment\"\n                        placeholder=\"{{ __('crud.reviews.inputs.comment.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.comment\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_100": {
                "path": "app/Livewire/Dashboard",
                "name": "ReviewCreate.php",
                "fullPath": "app/Livewire/Dashboard/ReviewCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 100,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\User;\nuse App\\Models\\Tour;\nuse Livewire\\Component;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Reviews\\Forms\\CreateForm;\n\nclass ReviewCreate extends Component\n{\n    use WithFileUploads;\n\n    public CreateForm $form;\n    public Collection $users;\n    public Collection $tours;\n\n    public function mount()\n    {\n        $this->users = User::pluck('name', 'id');\n        $this->tours = Tour::pluck('title', 'id');\n    }\n\n    public function save()\n    {\n        $this->authorize('create', Review::class);\n\n        $this->validate();\n\n        $review = $this->form->save();\n\n        return redirect()->route('dashboard.reviews.edit', $review);\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.reviews.create', []);\n    }\n}\n"
            },
            "item_101": {
                "path": "resources/views/livewire/dashboard/reviews",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/reviews/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 101,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.reviews.index') }}\"\n            >{{ __('crud.reviews.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Edit {{ __('crud.reviews.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <x-ui.toast on=\"saved\"> Review saved successfully. </x-ui.toast>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Edit {{ __('crud.reviews.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"user_id\"\n                        >{{ __('crud.reviews.inputs.user_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.user_id\"\n                        name=\"user_id\"\n                        id=\"user_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($users as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.user_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"tour_id\"\n                        >{{ __('crud.reviews.inputs.tour_id.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.select\n                        wire:model=\"form.tour_id\"\n                        name=\"tour_id\"\n                        id=\"tour_id\"\n                        class=\"w-full\"\n                    >\n                        <option value=\"\">Select data</option>\n                        @foreach ($tours as $value => $label)\n                        <option value=\"{{ $value }}\">{{ $label }}</option>\n                        @endforeach\n                    </x-ui.input.select>\n                    <x-ui.input.error for=\"form.tour_id\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"rating\"\n                        >{{ __('crud.reviews.inputs.rating.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.number\n                        class=\"w-full\"\n                        wire:model=\"form.rating\"\n                        name=\"rating\"\n                        id=\"rating\"\n                        placeholder=\"{{ __('crud.reviews.inputs.rating.placeholder') }}\"\n                        step=\"1\"\n                    />\n                    <x-ui.input.error for=\"form.rating\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"comment\"\n                        >{{ __('crud.reviews.inputs.comment.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.comment\"\n                        name=\"comment\"\n                        id=\"comment\"\n                        placeholder=\"{{ __('crud.reviews.inputs.comment.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.comment\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_102": {
                "path": "app/Livewire/Dashboard",
                "name": "ReviewEdit.php",
                "fullPath": "app/Livewire/Dashboard/ReviewEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 102,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse App\\Models\\User;\nuse App\\Models\\Tour;\nuse App\\Models\\Review;\nuse Livewire\\Component;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Reviews\\Forms\\UpdateForm;\n\nclass ReviewEdit extends Component\n{\n    public ?Review $review = null;\n\n    public UpdateForm $form;\n    public Collection $users;\n    public Collection $tours;\n\n    public function mount(Review $review)\n    {\n        $this->authorize('view-any', Review::class);\n\n        $this->review = $review;\n\n        $this->form->setReview($review);\n        $this->users = User::pluck('name', 'id');\n        $this->tours = Tour::pluck('title', 'id');\n    }\n\n    public function save()\n    {\n        $this->authorize('update', $this->review);\n\n        $this->validate();\n\n        $this->form->save();\n\n        $this->dispatch('saved');\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.reviews.edit', []);\n    }\n}\n"
            },
            "item_103": {
                "path": "app/Livewire/Dashboard/Reviews/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/Reviews/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 103,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Reviews\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Review;\nuse Livewire\\Attributes\\Rule;\n\nclass CreateForm extends Form\n{\n    #[Rule('required')]\n    public $user_id = '';\n\n    #[Rule('required')]\n    public $tour_id = '';\n\n    #[Rule('required')]\n    public $rating = '';\n\n    #[Rule('required|string')]\n    public $comment = '';\n\n    public function save()\n    {\n        $this->validate();\n\n        $review = Review::create($this->except([]));\n\n        $this->reset();\n\n        return $review;\n    }\n}\n"
            },
            "item_104": {
                "path": "app/Livewire/Dashboard/Reviews/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/Reviews/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 104,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Reviews\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Review;\nuse Illuminate\\Validation\\Rule;\n\nclass UpdateForm extends Form\n{\n    public ?Review $review;\n\n    public $user_id = '';\n\n    public $tour_id = '';\n\n    public $rating = '';\n\n    public $comment = '';\n\n    public function rules(): array\n    {\n        return [\n            'user_id' => ['required'],\n            'tour_id' => ['required'],\n            'rating' => ['required'],\n            'comment' => ['required', 'string'],\n        ];\n    }\n\n    public function setReview(Review $review)\n    {\n        $this->review = $review;\n\n        $this->user_id = $review->user_id;\n        $this->tour_id = $review->tour_id;\n        $this->rating = $review->rating;\n        $this->comment = $review->comment;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->review->update($this->except(['review', 'user_id', 'tour_id']));\n    }\n}\n"
            },
            "item_105": {
                "path": "resources/views/livewire/dashboard/categories",
                "name": "index.blade.php",
                "fullPath": "resources/views/livewire/dashboard/categories/index.blade.php",
                "template": "crud/views/livewire/IndexView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 105,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >{{ __('crud.categories.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"flex justify-between align-top py-4\">\n        <x-ui.input\n            wire:model.live=\"search\"\n            type=\"text\"\n            placeholder=\"Search {{ __('crud.categories.collectionTitle') }}...\"\n        />\n\n        @can('create', App\\Models\\Category::class)\n        <a wire:navigate href=\"{{ route('dashboard.categories.create') }}\">\n            <x-ui.button>New</x-ui.button>\n        </a>\n        @endcan\n    </div>\n\n    {{-- Delete Modal --}}\n    <x-ui.modal.confirm wire:model=\"confirmingDeletion\">\n        <x-slot name=\"title\"> {{ __('Delete') }} </x-slot>\n\n        <x-slot name=\"content\"> {{ __('Are you sure?') }} </x-slot>\n\n        <x-slot name=\"footer\">\n            <x-ui.button\n                wire:click=\"$toggle('confirmingDeletion')\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Cancel') }}\n            </x-ui.button>\n\n            <x-ui.button.danger\n                class=\"ml-3\"\n                wire:click=\"delete({{ $deletingCategory }})\"\n                wire:loading.attr=\"disabled\"\n            >\n                {{ __('Delete') }}\n            </x-ui.button.danger>\n        </x-slot>\n    </x-ui.modal.confirm>\n\n    {{-- Index Table --}}\n    <x-ui.container.table>\n        <x-ui.table>\n            <x-slot name=\"head\">\n                <x-ui.table.header for-crud wire:click=\"sortBy('name')\"\n                    >{{ __('crud.categories.inputs.name.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.header for-crud wire:click=\"sortBy('description')\"\n                    >{{ __('crud.categories.inputs.description.label')\n                    }}</x-ui.table.header\n                >\n                <x-ui.table.action-header>Actions</x-ui.table.action-header>\n            </x-slot>\n\n            <x-slot name=\"body\">\n                @forelse ($categories as $category)\n                <x-ui.table.row wire:loading.class.delay=\"opacity-75\">\n                    <x-ui.table.column for-crud\n                        >{{ $category->name }}</x-ui.table.column\n                    >\n                    <x-ui.table.column for-crud\n                        >{{ $category->description }}</x-ui.table.column\n                    >\n                    <x-ui.table.action-column>\n                        @can('update', $category)\n                        <x-ui.action\n                            wire:navigate\n                            href=\"{{ route('dashboard.categories.edit', $category) }}\"\n                            >Edit</x-ui.action\n                        >\n                        @endcan @can('delete', $category)\n                        <x-ui.action.danger\n                            wire:click=\"confirmDeletion({{ $category->id }})\"\n                            >Delete</x-ui.action.danger\n                        >\n                        @endcan\n                    </x-ui.table.action-column>\n                </x-ui.table.row>\n                @empty\n                <x-ui.table.row>\n                    <x-ui.table.column colspan=\"3\"\n                        >No {{ __('crud.categories.collectionTitle') }} found.</x-ui.table.column\n                    >\n                </x-ui.table.row>\n                @endforelse\n            </x-slot>\n        </x-ui.table>\n\n        <div class=\"mt-2\">{{ $categories->links() }}</div>\n    </x-ui.container.table>\n</div>\n"
            },
            "item_106": {
                "path": "app/Livewire/Dashboard",
                "name": "CategoryIndex.php",
                "fullPath": "app/Livewire/Dashboard/CategoryIndex.php",
                "template": "crud/views/livewire/IndexComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 106,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\Category;\nuse Livewire\\WithPagination;\n\nclass CategoryIndex extends Component\n{\n    use WithPagination;\n\n    public $search;\n    public $sortField = 'updated_at';\n    public $sortDirection = 'desc';\n\n    public $queryString = ['search', 'sortField', 'sortDirection'];\n\n    public $confirmingDeletion = false;\n    public $deletingCategory;\n\n    public function updatingSearch()\n    {\n        $this->resetPage();\n    }\n\n    public function confirmDeletion(string $id)\n    {\n        $this->deletingCategory = $id;\n\n        $this->confirmingDeletion = true;\n    }\n\n    public function delete(Category $category)\n    {\n        $category->delete();\n\n        $this->confirmingDeletion = false;\n    }\n\n    public function sortBy($field)\n    {\n        if ($this->sortField === $field) {\n            $this->sortDirection =\n                $this->sortDirection === 'asc' ? 'desc' : 'asc';\n        } else {\n            $this->sortDirection = 'asc';\n        }\n\n        $this->sortField = $field;\n    }\n\n    public function getRowsProperty()\n    {\n        return $this->rowsQuery->paginate(5);\n    }\n\n    public function getRowsQueryProperty()\n    {\n        return Category::query()\n            ->orderBy($this->sortField, $this->sortDirection)\n            ->where('name', 'like', \"%{$this->search}%\");\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.categories.index', [\n            'categories' => $this->rows,\n        ]);\n    }\n}\n"
            },
            "item_107": {
                "path": "resources/views/livewire/dashboard/categories",
                "name": "create.blade.php",
                "fullPath": "resources/views/livewire/dashboard/categories/create.blade.php",
                "template": "crud/views/livewire/CreateView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 107,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.categories.index') }}\"\n            >{{ __('crud.categories.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Create {{ __('crud.categories.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Create {{ __('crud.categories.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.categories.inputs.name.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.categories.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"description\"\n                        >{{ __('crud.categories.inputs.description.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.textarea\n                        class=\"w-full\"\n                        wire:model=\"form.description\"\n                        rows=\"6\"\n                        name=\"description\"\n                        id=\"description\"\n                        placeholder=\"{{ __('crud.categories.inputs.description.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.description\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_108": {
                "path": "app/Livewire/Dashboard",
                "name": "CategoryCreate.php",
                "fullPath": "app/Livewire/Dashboard/CategoryCreate.php",
                "template": "crud/views/livewire/CreateComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 108,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse Livewire\\WithFileUploads;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Categories\\Forms\\CreateForm;\n\nclass CategoryCreate extends Component\n{\n    use WithFileUploads;\n\n    public CreateForm $form;\n\n    public function mount()\n    {\n    }\n\n    public function save()\n    {\n        $this->authorize('create', Category::class);\n\n        $this->validate();\n\n        $category = $this->form->save();\n\n        return redirect()->route('dashboard.categories.edit', $category);\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.categories.create', []);\n    }\n}\n"
            },
            "item_109": {
                "path": "resources/views/livewire/dashboard/categories",
                "name": "edit.blade.php",
                "fullPath": "resources/views/livewire/dashboard/categories/edit.blade.php",
                "template": "crud/views/livewire/EditView.vemtl",
                "projectId": 1,
                "type": "blade",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 109,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<div class=\"max-w-7xl mx-auto py-10 sm:px-6 lg:px-8 space-y-4\">\n    <x-ui.breadcrumbs>\n        <x-ui.breadcrumbs.link href=\"/dashboard\"\n            >Dashboard</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link href=\"{{ route('dashboard.categories.index') }}\"\n            >{{ __('crud.categories.collectionTitle') }}</x-ui.breadcrumbs.link\n        >\n        <x-ui.breadcrumbs.separator />\n        <x-ui.breadcrumbs.link active\n            >Edit {{ __('crud.categories.itemTitle') }}</x-ui.breadcrumbs.link\n        >\n    </x-ui.breadcrumbs>\n\n    <x-ui.toast on=\"saved\"> Category saved successfully. </x-ui.toast>\n\n    <div class=\"w-full text-gray-500 text-lg font-semibold py-4 uppercase\">\n        <h1>Edit {{ __('crud.categories.itemTitle') }}</h1>\n    </div>\n\n    <div class=\"overflow-hidden border rounded-lg bg-white\">\n        <form class=\"w-full mb-0\" wire:submit.prevent=\"save\">\n            <div class=\"p-6 space-y-3\">\n                <div class=\"w-full\">\n                    <x-ui.label for=\"name\"\n                        >{{ __('crud.categories.inputs.name.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.text\n                        class=\"w-full\"\n                        wire:model=\"form.name\"\n                        name=\"name\"\n                        id=\"name\"\n                        placeholder=\"{{ __('crud.categories.inputs.name.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.name\" />\n                </div>\n\n                <div class=\"w-full\">\n                    <x-ui.label for=\"description\"\n                        >{{ __('crud.categories.inputs.description.label')\n                        }}</x-ui.label\n                    >\n                    <x-ui.input.textarea\n                        class=\"w-full\"\n                        wire:model=\"form.description\"\n                        rows=\"6\"\n                        name=\"description\"\n                        id=\"description\"\n                        placeholder=\"{{ __('crud.categories.inputs.description.placeholder') }}\"\n                    />\n                    <x-ui.input.error for=\"form.description\" />\n                </div>\n            </div>\n\n            <div class=\"flex justify-between mt-4 border-t border-gray-50 p-4\">\n                <div>\n                    <!-- Other buttons here -->\n                </div>\n                <div>\n                    <x-ui.button type=\"submit\">Save</x-ui.button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n"
            },
            "item_110": {
                "path": "app/Livewire/Dashboard",
                "name": "CategoryEdit.php",
                "fullPath": "app/Livewire/Dashboard/CategoryEdit.php",
                "template": "crud/views/livewire/EditComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 110,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard;\n\nuse Livewire\\Component;\nuse App\\Models\\Category;\nuse Illuminate\\Support\\Collection;\nuse App\\Livewire\\Dashboard\\Categories\\Forms\\UpdateForm;\n\nclass CategoryEdit extends Component\n{\n    public ?Category $category = null;\n\n    public UpdateForm $form;\n\n    public function mount(Category $category)\n    {\n        $this->authorize('view-any', Category::class);\n\n        $this->category = $category;\n\n        $this->form->setCategory($category);\n    }\n\n    public function save()\n    {\n        $this->authorize('update', $this->category);\n\n        $this->validate();\n\n        $this->form->save();\n\n        $this->dispatch('saved');\n    }\n\n    public function render()\n    {\n        return view('livewire.dashboard.categories.edit', []);\n    }\n}\n"
            },
            "item_111": {
                "path": "app/Livewire/Dashboard/Categories/Forms",
                "name": "CreateForm.php",
                "fullPath": "app/Livewire/Dashboard/Categories/Forms/CreateForm.php",
                "template": "crud/views/livewire/CreateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 111,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Categories\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Category;\nuse Livewire\\Attributes\\Rule;\n\nclass CreateForm extends Form\n{\n    #[Rule('required|string')]\n    public $name = '';\n\n    #[Rule('required|string')]\n    public $description = '';\n\n    public function save()\n    {\n        $this->validate();\n\n        $category = Category::create($this->except([]));\n\n        $this->reset();\n\n        return $category;\n    }\n}\n"
            },
            "item_112": {
                "path": "app/Livewire/Dashboard/Categories/Forms",
                "name": "UpdateForm.php",
                "fullPath": "app/Livewire/Dashboard/Categories/Forms/UpdateForm.php",
                "template": "crud/views/livewire/UpdateFormComponent.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 112,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace App\\Livewire\\Dashboard\\Categories\\Forms;\n\nuse Livewire\\Form;\nuse App\\Models\\Category;\nuse Illuminate\\Validation\\Rule;\n\nclass UpdateForm extends Form\n{\n    public ?Category $category;\n\n    public $name = '';\n\n    public $description = '';\n\n    public function rules(): array\n    {\n        return [\n            'name' => ['required', 'string'],\n            'description' => ['required', 'string'],\n        ];\n    }\n\n    public function setCategory(Category $category)\n    {\n        $this->category = $category;\n\n        $this->name = $category->name;\n        $this->description = $category->description;\n    }\n\n    public function save()\n    {\n        $this->validate();\n\n        $this->category->update($this->except(['category']));\n    }\n}\n"
            },
            "item_113": {
                "path": "database/seeders",
                "name": "DatabaseSeeder.php",
                "fullPath": "database/seeders/DatabaseSeeder.php",
                "template": "database/DatabaseSeeder.vemtl",
                "projectId": 1,
                "type": "php",
                "status": "conflict",
                "ignoreConflicts": false,
                "id": 113,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nnamespace Database\\Seeders;\n\nuse Illuminate\\Database\\Seeder;\n// use Illuminate\\Database\\Console\\Seeds\\WithoutModelEvents;\n\nuse App\\Models\\User;\n\nclass DatabaseSeeder extends Seeder\n{\n    /**\n     * Seed the application's database.\n     */\n    public function run(): void\n    {\n        User::factory()\n            ->count(1)\n            ->create([\n                'email' => 'admin@admin.com',\n                'password' => \\Hash::make('admin'),\n            ]);\n\n        $this->call(TourSeeder::class);\n        $this->call(ReservationSeeder::class);\n        $this->call(ReviewSeeder::class);\n        $this->call(CategorySeeder::class);\n    }\n}\n",
                "conflictFileName": "rMkb4VLqxQdsBEjsn2UGOO8U6X3vA9QX.json"
            },
            "item_114": {
                "path": "resources/views/components/layouts",
                "name": "app.blade.php",
                "fullPath": "resources/views/components/layouts/app.blade.php",
                "template": "crud/views/livewire/BreezeLayoutComponent.vemtl",
                "projectId": 1,
                "type": "html",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 114,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"{{ str_replace('_', '-', app()->getLocale()) }}\">\r\n    <head>\r\n        <meta charset=\"utf-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n        <meta name=\"csrf-token\" content=\"{{ csrf_token() }}\">\r\n\r\n        <title>{{ config('app.name', 'Laravel') }}</title>\r\n\r\n        <!-- Fonts -->\r\n        <link rel=\"preconnect\" href=\"https://fonts.bunny.net\">\r\n        <link href=\"https://fonts.bunny.net/css?family=figtree:400,500,600&display=swap\" rel=\"stylesheet\" />\r\n\r\n        <!-- Scripts -->\r\n        @vite(['resources/css/app.css', 'resources/js/app.js'])\r\n    </head>\r\n    <body class=\"font-sans antialiased\">\r\n        <div class=\"min-h-screen bg-gray-100\">\r\n            @livewire('layout.navigation')\r\n\r\n            <!-- Page Heading -->\r\n            @if (isset($header))\r\n                <header class=\"bg-white shadow\">\r\n                    <div class=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\r\n                        {{ $header }}\r\n                    </div>\r\n                </header>\r\n            @endif\r\n\r\n            <!-- Page Content -->\r\n            <main>\r\n                {{ $slot }}\r\n            </main>\r\n        </div>\r\n\r\n        @stack('modals')\r\n    </body>\r\n</html>\r\n"
            },
            "item_115": {
                "path": "/lang/en/",
                "name": "navigation.php",
                "fullPath": "/lang/en//navigation.php",
                "template": "NoTemplate",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 115,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nreturn [\n    'home' => 'Home',\n    'apps' => 'Apps',\n    'users' => 'Users',\n    'tours' => 'Tours',\n    'reservations' => 'Reservations',\n    'reviews' => 'Reviews',\n    'categories' => 'Categories',\n];\n"
            },
            "item_116": {
                "path": "/lang/en/",
                "name": "crud.php",
                "fullPath": "/lang/en//crud.php",
                "template": "NoTemplate",
                "projectId": 1,
                "type": "php",
                "status": "rendered",
                "ignoreConflicts": false,
                "id": 116,
                "createdAt": "2025-08-07 18:25:04",
                "updatedAt": "2025-08-07 18:25:07",
                "content": "<?php\n\nreturn [\n    'users' => [\n        'itemTitle' => 'User',\n        'collectionTitle' => 'Users',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'email' => [\n                'label' => 'Email',\n                'placeholder' => 'Email',\n            ],\n            'phone_number' => [\n                'label' => 'Phone number',\n                'placeholder' => 'Phone number',\n            ],\n            'password' => [\n                'label' => 'Password',\n                'placeholder' => 'Password',\n            ],\n            'role' => [\n                'label' => 'Role',\n                'placeholder' => 'Role',\n            ],\n        ],\n    ],\n    'reservations' => [\n        'itemTitle' => 'Reservation',\n        'collectionTitle' => 'Reservations',\n        'inputs' => [\n            'tour_id' => [\n                'label' => 'Tour id',\n                'placeholder' => 'Tour id',\n            ],\n            'status' => [\n                'label' => 'Status',\n                'placeholder' => 'Status',\n            ],\n            'number_of_people' => [\n                'label' => 'Number of people',\n                'placeholder' => 'Number of people',\n            ],\n            'user_id' => [\n                'label' => 'User id',\n                'placeholder' => 'User id',\n            ],\n        ],\n    ],\n    'reviews' => [\n        'itemTitle' => 'Review',\n        'collectionTitle' => 'Reviews',\n        'inputs' => [\n            'tour_id' => [\n                'label' => 'Tour id',\n                'placeholder' => 'Tour id',\n            ],\n            'rating' => [\n                'label' => 'Rating',\n                'placeholder' => 'Rating',\n            ],\n            'comment' => [\n                'label' => 'Comment',\n                'placeholder' => 'Comment',\n            ],\n            'user_id' => [\n                'label' => 'User id',\n                'placeholder' => 'User id',\n            ],\n        ],\n    ],\n    'tours' => [\n        'itemTitle' => 'Tour',\n        'collectionTitle' => 'Tours',\n        'inputs' => [\n            'title' => [\n                'label' => 'Title',\n                'placeholder' => 'Title',\n            ],\n            'description' => [\n                'label' => 'Description',\n                'placeholder' => 'Description',\n            ],\n            'location' => [\n                'label' => 'Location',\n                'placeholder' => 'Location',\n            ],\n            'price' => [\n                'label' => 'Price',\n                'placeholder' => 'Price',\n            ],\n            'start_date' => [\n                'label' => 'Start date',\n                'placeholder' => 'Start date',\n            ],\n            'end_date' => [\n                'label' => 'End date',\n                'placeholder' => 'End date',\n            ],\n            'max_participants' => [\n                'label' => 'Max participants',\n                'placeholder' => 'Max participants',\n            ],\n        ],\n    ],\n    'categoryTour' => [\n        'itemTitle' => 'Category Tour',\n        'collectionTitle' => 'Category Tour',\n        'inputs' => [\n            'category_id' => [\n                'label' => 'Category id',\n                'placeholder' => 'Category id',\n            ],\n            'tour_id' => [\n                'label' => 'Tour id',\n                'placeholder' => 'Tour id',\n            ],\n        ],\n    ],\n    'categories' => [\n        'itemTitle' => 'Category',\n        'collectionTitle' => 'Categories',\n        'inputs' => [\n            'name' => [\n                'label' => 'Name',\n                'placeholder' => 'Name',\n            ],\n            'description' => [\n                'label' => 'Description',\n                'placeholder' => 'Description',\n            ],\n        ],\n    ],\n];\n"
            }
        },
        "relationships": {
            "__tableData": {
                "count": 10,
                "lastPrimaryKey": 12,
                "index": {
                    "3": {
                        "hasMany": {
                            "relationships.inverseId": [
                                4
                            ],
                            "has_many_details.relationshipId": [
                                1
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "relationships.inverseId": [
                                3
                            ],
                            "inputs.relationshipId": [
                                19,
                                26
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "relationships.inverseId": [
                                6
                            ],
                            "has_many_details.relationshipId": [
                                3
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "relationships.inverseId": [
                                5
                            ],
                            "inputs.relationshipId": [
                                6,
                                27
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "relationships.inverseId": [
                                8
                            ],
                            "belongs_to_many_details.relationshipId": [
                                1
                            ],
                            "inputs.relationshipId": [
                                25
                            ]
                        }
                    },
                    "8": {
                        "hasMany": {
                            "relationships.inverseId": [
                                7
                            ],
                            "belongs_to_many_details.relationshipId": [
                                2
                            ],
                            "inputs.relationshipId": [
                                36
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "relationships.inverseId": [
                                10
                            ],
                            "has_many_details.relationshipId": [
                                2
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {
                            "relationships.inverseId": [
                                9
                            ],
                            "inputs.relationshipId": [
                                22,
                                30
                            ]
                        }
                    },
                    "11": {
                        "hasMany": {
                            "relationships.inverseId": [
                                12
                            ],
                            "has_many_details.relationshipId": [
                                4
                            ]
                        }
                    },
                    "12": {
                        "hasMany": {
                            "relationships.inverseId": [
                                11
                            ],
                            "inputs.relationshipId": [
                                9,
                                31
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_3": {
                "name": "reservations",
                "modelId": 1,
                "projectId": 1,
                "relatedModelId": 4,
                "type": "HasMany",
                "foreignKeyName": "user_id",
                "parentKeyId": 43,
                "foreignKeyId": 69,
                "defaultName": "reservations",
                "usingFirstDefaultName": true,
                "id": 3,
                "createdAt": "2025-08-07 18:01:05",
                "updatedAt": "2025-08-07 18:25:14",
                "inverseId": 4,
                "removed": false,
                "relatedTableName": "reservations",
                "relatedModelName": "App\\Models\\Reservation",
                "parentTableName": "users",
                "parentModelName": "App\\Models\\User",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "reservations",
                    "type": "HasMany",
                    "relatedTableName": "reservations",
                    "relatedModelName": "App\\Models\\Reservation",
                    "parentTableName": "users",
                    "parentModelName": "App\\Models\\User",
                    "foreignKeyName": "user_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_4": {
                "modelId": 4,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 1,
                "defaultName": "user",
                "usingFirstDefaultName": true,
                "name": "user",
                "parentKeyId": 43,
                "foreignKeyName": "user_id",
                "inverseId": 3,
                "foreignKeyId": 69,
                "id": 4,
                "createdAt": "2025-08-07 18:01:05",
                "updatedAt": "2025-08-07 18:25:14",
                "removed": false,
                "relatedTableName": "users",
                "relatedModelName": "App\\Models\\User",
                "parentTableName": "reservations",
                "parentModelName": "App\\Models\\Reservation",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "user",
                    "type": "BelongsTo",
                    "relatedTableName": "users",
                    "relatedModelName": "App\\Models\\User",
                    "parentTableName": "reservations",
                    "parentModelName": "App\\Models\\Reservation",
                    "foreignKeyName": "user_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_5": {
                "name": "reservations",
                "modelId": 2,
                "projectId": 1,
                "relatedModelId": 4,
                "type": "HasMany",
                "foreignKeyName": "tour_id",
                "parentKeyId": 52,
                "foreignKeyId": 70,
                "defaultName": "reservations",
                "usingFirstDefaultName": true,
                "id": 5,
                "createdAt": "2025-08-07 18:01:40",
                "updatedAt": "2025-08-07 18:25:14",
                "inverseId": 6,
                "removed": false,
                "relatedTableName": "reservations",
                "relatedModelName": "App\\Models\\Reservation",
                "parentTableName": "tours",
                "parentModelName": "App\\Models\\Tour",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "reservations",
                    "type": "HasMany",
                    "relatedTableName": "reservations",
                    "relatedModelName": "App\\Models\\Reservation",
                    "parentTableName": "tours",
                    "parentModelName": "App\\Models\\Tour",
                    "foreignKeyName": "tour_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_6": {
                "modelId": 4,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 2,
                "defaultName": "tour",
                "usingFirstDefaultName": true,
                "name": "tour",
                "parentKeyId": 52,
                "foreignKeyName": "tour_id",
                "inverseId": 5,
                "foreignKeyId": 70,
                "id": 6,
                "createdAt": "2025-08-07 18:01:40",
                "updatedAt": "2025-08-07 18:25:14",
                "removed": false,
                "relatedTableName": "tours",
                "relatedModelName": "App\\Models\\Tour",
                "parentTableName": "reservations",
                "parentModelName": "App\\Models\\Reservation",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "tour",
                    "type": "BelongsTo",
                    "relatedTableName": "tours",
                    "relatedModelName": "App\\Models\\Tour",
                    "parentTableName": "reservations",
                    "parentModelName": "App\\Models\\Reservation",
                    "foreignKeyName": "tour_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_7": {
                "modelId": 2,
                "projectId": 1,
                "type": "BelongsToMany",
                "relatedModelId": 6,
                "defaultName": "categories2",
                "usingFirstDefaultName": false,
                "name": "categories",
                "relatedPivotKeyName": "category_id",
                "foreignPivotKeyName": "tour_id",
                "pivotTableName": "category_tour",
                "pivotId": 15,
                "id": 7,
                "createdAt": "2025-08-07 18:03:15",
                "updatedAt": "2025-08-07 18:25:14",
                "foreignPivotKeyId": 88,
                "relatedPivotKeyId": 87,
                "inverseId": 8,
                "removed": false,
                "relatedTableName": "categories",
                "relatedModelName": "App\\Models\\Category",
                "parentTableName": "tours",
                "parentModelName": "App\\Models\\Tour",
                "foreignKeyName": null,
                "localKeyName": null,
                "ownerKeyName": null,
                "relatedKeyName": "id",
                "morphType": null,
                "createdFromInterface": false,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "categories",
                    "type": "BelongsToMany",
                    "relatedTableName": "categories",
                    "relatedModelName": "App\\Models\\Category",
                    "parentTableName": "tours",
                    "parentModelName": "App\\Models\\Tour",
                    "foreignKeyName": null,
                    "localKeyName": null,
                    "ownerKeyName": null,
                    "relatedKeyName": "id",
                    "morphType": null,
                    "foreignPivotKeyName": "tour_id",
                    "relatedPivotKeyName": "category_id",
                    "pivotTableName": "category_tour",
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_8": {
                "name": "tours",
                "modelId": 6,
                "relatedModelId": 2,
                "type": "BelongsToMany",
                "pivotId": 15,
                "foreignPivotKeyId": 87,
                "relatedPivotKeyId": 88,
                "defaultName": "tours",
                "usingFirstDefaultName": true,
                "relatedPivotKeyName": "tour_id",
                "foreignPivotKeyName": "category_id",
                "pivotTableName": "category_tour",
                "id": 8,
                "createdAt": "2025-08-07 18:03:15",
                "updatedAt": "2025-08-07 18:25:14",
                "inverseId": 7,
                "removed": false,
                "projectId": 1,
                "relatedTableName": "tours",
                "relatedModelName": "App\\Models\\Tour",
                "parentTableName": "categories",
                "parentModelName": "App\\Models\\Category",
                "foreignKeyName": null,
                "localKeyName": null,
                "ownerKeyName": null,
                "relatedKeyName": "id",
                "morphType": null,
                "createdFromInterface": false,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "tours",
                    "type": "BelongsToMany",
                    "relatedTableName": "tours",
                    "relatedModelName": "App\\Models\\Tour",
                    "parentTableName": "categories",
                    "parentModelName": "App\\Models\\Category",
                    "foreignKeyName": null,
                    "localKeyName": null,
                    "ownerKeyName": null,
                    "relatedKeyName": "id",
                    "morphType": null,
                    "foreignPivotKeyName": "category_id",
                    "relatedPivotKeyName": "tour_id",
                    "pivotTableName": "category_tour",
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_9": {
                "name": "reviews",
                "modelId": 1,
                "projectId": 1,
                "relatedModelId": 5,
                "type": "HasMany",
                "foreignKeyName": "user_id",
                "parentKeyId": 43,
                "foreignKeyId": 77,
                "defaultName": "reviews",
                "usingFirstDefaultName": true,
                "id": 9,
                "createdAt": "2025-08-07 18:04:24",
                "updatedAt": "2025-08-07 18:25:14",
                "inverseId": 10,
                "removed": false,
                "relatedTableName": "reviews",
                "relatedModelName": "App\\Models\\Review",
                "parentTableName": "users",
                "parentModelName": "App\\Models\\User",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "reviews",
                    "type": "HasMany",
                    "relatedTableName": "reviews",
                    "relatedModelName": "App\\Models\\Review",
                    "parentTableName": "users",
                    "parentModelName": "App\\Models\\User",
                    "foreignKeyName": "user_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_10": {
                "modelId": 5,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 1,
                "defaultName": "user",
                "usingFirstDefaultName": true,
                "name": "user",
                "parentKeyId": 43,
                "foreignKeyName": "user_id",
                "inverseId": 9,
                "foreignKeyId": 77,
                "id": 10,
                "createdAt": "2025-08-07 18:04:24",
                "updatedAt": "2025-08-07 18:25:14",
                "removed": false,
                "relatedTableName": "users",
                "relatedModelName": "App\\Models\\User",
                "parentTableName": "reviews",
                "parentModelName": "App\\Models\\Review",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "user",
                    "type": "BelongsTo",
                    "relatedTableName": "users",
                    "relatedModelName": "App\\Models\\User",
                    "parentTableName": "reviews",
                    "parentModelName": "App\\Models\\Review",
                    "foreignKeyName": "user_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_11": {
                "name": "reviews",
                "modelId": 2,
                "projectId": 1,
                "relatedModelId": 5,
                "type": "HasMany",
                "foreignKeyName": "tour_id",
                "parentKeyId": 52,
                "foreignKeyId": 78,
                "defaultName": "reviews",
                "usingFirstDefaultName": true,
                "id": 11,
                "createdAt": "2025-08-07 18:04:30",
                "updatedAt": "2025-08-07 18:25:14",
                "inverseId": 12,
                "removed": false,
                "relatedTableName": "reviews",
                "relatedModelName": "App\\Models\\Review",
                "parentTableName": "tours",
                "parentModelName": "App\\Models\\Tour",
                "localKeyName": "id",
                "ownerKeyName": null,
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "reviews",
                    "type": "HasMany",
                    "relatedTableName": "reviews",
                    "relatedModelName": "App\\Models\\Review",
                    "parentTableName": "tours",
                    "parentModelName": "App\\Models\\Tour",
                    "foreignKeyName": "tour_id",
                    "localKeyName": "id",
                    "ownerKeyName": null,
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            },
            "item_12": {
                "modelId": 5,
                "projectId": 1,
                "type": "BelongsTo",
                "relatedModelId": 2,
                "defaultName": "tour",
                "usingFirstDefaultName": true,
                "name": "tour",
                "parentKeyId": 52,
                "foreignKeyName": "tour_id",
                "inverseId": 11,
                "foreignKeyId": 78,
                "id": 12,
                "createdAt": "2025-08-07 18:04:30",
                "updatedAt": "2025-08-07 18:25:14",
                "removed": false,
                "relatedTableName": "tours",
                "relatedModelName": "App\\Models\\Tour",
                "parentTableName": "reviews",
                "parentModelName": "App\\Models\\Review",
                "localKeyName": null,
                "ownerKeyName": "id",
                "relatedKeyName": null,
                "morphType": null,
                "createdFromInterface": false,
                "foreignPivotKeyName": null,
                "relatedPivotKeyName": null,
                "pivotTableName": null,
                "firstKeyName": null,
                "secondKeyName": null,
                "withPivotColumns": false,
                "includedPivotColumns": [],
                "schemaState": {
                    "name": "tour",
                    "type": "BelongsTo",
                    "relatedTableName": "tours",
                    "relatedModelName": "App\\Models\\Tour",
                    "parentTableName": "reviews",
                    "parentModelName": "App\\Models\\Review",
                    "foreignKeyName": "tour_id",
                    "localKeyName": null,
                    "ownerKeyName": "id",
                    "relatedKeyName": null,
                    "morphType": null,
                    "foreignPivotKeyName": null,
                    "relatedPivotKeyName": null,
                    "pivotTableName": null,
                    "firstKeyName": null,
                    "secondKeyName": null,
                    "withPivotColumns": false,
                    "includedPivotColumns": []
                }
            }
        },
        "cruds": {
            "item_1": {
                "type": "Livewire",
                "name": "User",
                "plural": "Users",
                "sectionId": 1,
                "modelId": 1,
                "tableId": 9,
                "projectId": 1,
                "basePath": "Users",
                "settings": {
                    "itemName": "user",
                    "collectionName": "users",
                    "itemTitle": "crud.users.itemTitle",
                    "collectionTitle": "crud.users.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Users\\Forms",
                "livewireIndexComponentName": "UserIndex",
                "livewireShowComponentName": "UserShow",
                "livewireCreateComponentName": "UserCreate",
                "livewireEditComponentName": "UserEdit",
                "defaultSearchColumnId": 44,
                "defaultSortColumnId": 50,
                "defaultSortDirection": "desc",
                "id": 1,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "__tableData": {
                "count": 11,
                "lastPrimaryKey": 11,
                "index": {
                    "1": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                1
                            ],
                            "inputs.crudId": [
                                1,
                                2,
                                3,
                                4,
                                5
                            ],
                            "has_many_details.crudId": [
                                1,
                                2
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                2
                            ],
                            "inputs.crudId": [
                                6,
                                7,
                                8
                            ],
                            "has_many_details.detailCrudId": [
                                1
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                3
                            ],
                            "inputs.crudId": [
                                9,
                                10,
                                11
                            ],
                            "has_many_details.detailCrudId": [
                                2
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                4
                            ],
                            "inputs.crudId": [
                                12,
                                13,
                                14,
                                15,
                                16,
                                17,
                                18
                            ],
                            "has_many_details.crudId": [
                                3,
                                4
                            ],
                            "belongs_to_many_details.crudId": [
                                1
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                5
                            ],
                            "inputs.crudId": [
                                19,
                                20,
                                21
                            ],
                            "has_many_details.detailCrudId": [
                                3
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                6
                            ],
                            "inputs.crudId": [
                                22,
                                23,
                                24
                            ],
                            "has_many_details.detailCrudId": [
                                4
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                7
                            ],
                            "inputs.crudId": [
                                25
                            ],
                            "belongs_to_many_details.detailCrudId": [
                                1
                            ]
                        }
                    },
                    "8": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                8
                            ],
                            "inputs.crudId": [
                                26,
                                27,
                                28,
                                29
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                9
                            ],
                            "inputs.crudId": [
                                30,
                                31,
                                32,
                                33
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                10
                            ],
                            "inputs.crudId": [
                                34,
                                35
                            ],
                            "belongs_to_many_details.crudId": [
                                2
                            ]
                        }
                    },
                    "11": {
                        "hasMany": {
                            "crud_panels.crudId": [
                                11
                            ],
                            "inputs.crudId": [
                                36
                            ],
                            "belongs_to_many_details.detailCrudId": [
                                2
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "type": "Livewire",
                "name": "Reservation",
                "plural": "Reservations",
                "sectionId": 1,
                "modelId": 4,
                "tableId": 12,
                "projectId": 1,
                "basePath": "UserReservationsDetail",
                "settings": {
                    "itemName": "reservation",
                    "collectionName": "reservations",
                    "itemTitle": "crud.reservations.itemTitle",
                    "collectionTitle": "crud.reservations.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Reservations\\Forms",
                "livewireIndexComponentName": "ReservationIndex",
                "livewireShowComponentName": "ReservationShow",
                "livewireCreateComponentName": "ReservationCreate",
                "livewireEditComponentName": "ReservationEdit",
                "defaultSearchColumnId": 67,
                "defaultSortColumnId": 68,
                "defaultSortDirection": "desc",
                "id": 2,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21",
                "isHasManyDetail": true
            },
            "item_3": {
                "type": "Livewire",
                "name": "Review",
                "plural": "Reviews",
                "sectionId": 1,
                "modelId": 5,
                "tableId": 13,
                "projectId": 1,
                "basePath": "UserReviewsDetail",
                "settings": {
                    "itemName": "review",
                    "collectionName": "reviews",
                    "itemTitle": "crud.reviews.itemTitle",
                    "collectionTitle": "crud.reviews.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Reviews\\Forms",
                "livewireIndexComponentName": "ReviewIndex",
                "livewireShowComponentName": "ReviewShow",
                "livewireCreateComponentName": "ReviewCreate",
                "livewireEditComponentName": "ReviewEdit",
                "defaultSearchColumnId": 80,
                "defaultSortColumnId": 76,
                "defaultSortDirection": "desc",
                "id": 3,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21",
                "isHasManyDetail": true
            },
            "item_4": {
                "type": "Livewire",
                "name": "Tour",
                "plural": "Tours",
                "sectionId": 1,
                "modelId": 2,
                "tableId": 10,
                "projectId": 1,
                "basePath": "Tours",
                "settings": {
                    "itemName": "tour",
                    "collectionName": "tours",
                    "itemTitle": "crud.tours.itemTitle",
                    "collectionTitle": "crud.tours.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Tours\\Forms",
                "livewireIndexComponentName": "TourIndex",
                "livewireShowComponentName": "TourShow",
                "livewireCreateComponentName": "TourCreate",
                "livewireEditComponentName": "TourEdit",
                "defaultSearchColumnId": 55,
                "defaultSortColumnId": 54,
                "defaultSortDirection": "desc",
                "id": 4,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_5": {
                "type": "Livewire",
                "name": "Reservation",
                "plural": "Reservations",
                "sectionId": 1,
                "modelId": 4,
                "tableId": 12,
                "projectId": 1,
                "basePath": "TourReservationsDetail",
                "settings": {
                    "itemName": "reservation",
                    "collectionName": "reservations",
                    "itemTitle": "crud.reservations.itemTitle",
                    "collectionTitle": "crud.reservations.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Reservations\\Forms",
                "livewireIndexComponentName": "ReservationIndex",
                "livewireShowComponentName": "ReservationShow",
                "livewireCreateComponentName": "ReservationCreate",
                "livewireEditComponentName": "ReservationEdit",
                "defaultSearchColumnId": 67,
                "defaultSortColumnId": 68,
                "defaultSortDirection": "desc",
                "id": 5,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25",
                "isHasManyDetail": true
            },
            "item_6": {
                "type": "Livewire",
                "name": "Review",
                "plural": "Reviews",
                "sectionId": 1,
                "modelId": 5,
                "tableId": 13,
                "projectId": 1,
                "basePath": "TourReviewsDetail",
                "settings": {
                    "itemName": "review",
                    "collectionName": "reviews",
                    "itemTitle": "crud.reviews.itemTitle",
                    "collectionTitle": "crud.reviews.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Reviews\\Forms",
                "livewireIndexComponentName": "ReviewIndex",
                "livewireShowComponentName": "ReviewShow",
                "livewireCreateComponentName": "ReviewCreate",
                "livewireEditComponentName": "ReviewEdit",
                "defaultSearchColumnId": 80,
                "defaultSortColumnId": 76,
                "defaultSortDirection": "desc",
                "id": 6,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25",
                "isHasManyDetail": true
            },
            "item_7": {
                "type": "Livewire",
                "name": "Category Tour",
                "plural": "Category Tour",
                "sectionId": 1,
                "tableId": 15,
                "projectId": 1,
                "basePath": "TourCategory TourDetail",
                "settings": {
                    "itemName": "categoryTour",
                    "collectionName": "categoryTour",
                    "itemTitle": "crud.categoryTour.itemTitle",
                    "collectionTitle": "crud.categoryTour.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\CategoryTour\\Forms",
                "livewireIndexComponentName": "CategoryTourIndex",
                "livewireShowComponentName": "CategoryTourShow",
                "livewireCreateComponentName": "CategoryTourCreate",
                "livewireEditComponentName": "CategoryTourEdit",
                "defaultSortDirection": "desc",
                "id": 7,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25",
                "isBelongsToManyDetail": true
            },
            "item_8": {
                "type": "Livewire",
                "name": "Reservation",
                "plural": "Reservations",
                "sectionId": 1,
                "modelId": 4,
                "tableId": 12,
                "projectId": 1,
                "basePath": "Reservations",
                "settings": {
                    "itemName": "reservation",
                    "collectionName": "reservations",
                    "itemTitle": "crud.reservations.itemTitle",
                    "collectionTitle": "crud.reservations.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Reservations\\Forms",
                "livewireIndexComponentName": "ReservationIndex",
                "livewireShowComponentName": "ReservationShow",
                "livewireCreateComponentName": "ReservationCreate",
                "livewireEditComponentName": "ReservationEdit",
                "defaultSearchColumnId": 67,
                "defaultSortColumnId": 68,
                "defaultSortDirection": "desc",
                "id": 8,
                "createdAt": "2025-08-07 18:24:29",
                "updatedAt": "2025-08-07 18:24:29"
            },
            "item_9": {
                "type": "Livewire",
                "name": "Review",
                "plural": "Reviews",
                "sectionId": 1,
                "modelId": 5,
                "tableId": 13,
                "projectId": 1,
                "basePath": "Reviews",
                "settings": {
                    "itemName": "review",
                    "collectionName": "reviews",
                    "itemTitle": "crud.reviews.itemTitle",
                    "collectionTitle": "crud.reviews.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Reviews\\Forms",
                "livewireIndexComponentName": "ReviewIndex",
                "livewireShowComponentName": "ReviewShow",
                "livewireCreateComponentName": "ReviewCreate",
                "livewireEditComponentName": "ReviewEdit",
                "defaultSearchColumnId": 80,
                "defaultSortColumnId": 76,
                "defaultSortDirection": "desc",
                "id": 9,
                "createdAt": "2025-08-07 18:24:32",
                "updatedAt": "2025-08-07 18:24:32"
            },
            "item_10": {
                "type": "Livewire",
                "name": "Category",
                "plural": "Categories",
                "sectionId": 1,
                "modelId": 6,
                "tableId": 14,
                "projectId": 1,
                "basePath": "Categories",
                "settings": {
                    "itemName": "category",
                    "collectionName": "categories",
                    "itemTitle": "crud.categories.itemTitle",
                    "collectionTitle": "crud.categories.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\Categories\\Forms",
                "livewireIndexComponentName": "CategoryIndex",
                "livewireShowComponentName": "CategoryShow",
                "livewireCreateComponentName": "CategoryCreate",
                "livewireEditComponentName": "CategoryEdit",
                "defaultSearchColumnId": 84,
                "defaultSortColumnId": 83,
                "defaultSortDirection": "desc",
                "id": 10,
                "createdAt": "2025-08-07 18:24:36",
                "updatedAt": "2025-08-07 18:24:36"
            },
            "item_11": {
                "type": "Livewire",
                "name": "Category Tour",
                "plural": "Category Tour",
                "sectionId": 1,
                "tableId": 15,
                "projectId": 1,
                "basePath": "CategoryCategory TourDetail",
                "settings": {
                    "itemName": "categoryTour",
                    "collectionName": "categoryTour",
                    "itemTitle": "crud.categoryTour.itemTitle",
                    "collectionTitle": "crud.categoryTour.collectionTitle"
                },
                "livewireNamespace": "App\\Livewire\\Dashboard",
                "livewireFormsNamespace": "App\\Livewire\\Dashboard\\CategoryTour\\Forms",
                "livewireIndexComponentName": "CategoryTourIndex",
                "livewireShowComponentName": "CategoryTourShow",
                "livewireCreateComponentName": "CategoryTourCreate",
                "livewireEditComponentName": "CategoryTourEdit",
                "defaultSortDirection": "desc",
                "id": 11,
                "createdAt": "2025-08-07 18:24:36",
                "updatedAt": "2025-08-07 18:24:36",
                "isBelongsToManyDetail": true
            }
        },
        "crud_panels": {
            "item_1": {
                "title": "Main",
                "crudId": 1,
                "order": 0,
                "id": 1,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "__tableData": {
                "count": 11,
                "lastPrimaryKey": 11,
                "index": {
                    "1": {
                        "hasMany": {
                            "inputs.panelId": [
                                1,
                                2,
                                3,
                                4,
                                5
                            ]
                        }
                    },
                    "2": {
                        "hasMany": {
                            "inputs.panelId": [
                                6,
                                7,
                                8
                            ]
                        }
                    },
                    "3": {
                        "hasMany": {
                            "inputs.panelId": [
                                9,
                                10,
                                11
                            ]
                        }
                    },
                    "4": {
                        "hasMany": {
                            "inputs.panelId": [
                                12,
                                13,
                                14,
                                15,
                                16,
                                17,
                                18
                            ]
                        }
                    },
                    "5": {
                        "hasMany": {
                            "inputs.panelId": [
                                19,
                                20,
                                21
                            ]
                        }
                    },
                    "6": {
                        "hasMany": {
                            "inputs.panelId": [
                                22,
                                23,
                                24
                            ]
                        }
                    },
                    "7": {
                        "hasMany": {
                            "inputs.panelId": [
                                25
                            ]
                        }
                    },
                    "8": {
                        "hasMany": {
                            "inputs.panelId": [
                                26,
                                27,
                                28,
                                29
                            ]
                        }
                    },
                    "9": {
                        "hasMany": {
                            "inputs.panelId": [
                                30,
                                31,
                                32,
                                33
                            ]
                        }
                    },
                    "10": {
                        "hasMany": {
                            "inputs.panelId": [
                                34,
                                35
                            ]
                        }
                    },
                    "11": {
                        "hasMany": {
                            "inputs.panelId": [
                                36
                            ]
                        }
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "title": "Main",
                "crudId": 2,
                "order": 0,
                "id": 2,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "item_3": {
                "title": "Main",
                "crudId": 3,
                "order": 0,
                "id": 3,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "item_4": {
                "title": "Main",
                "crudId": 4,
                "order": 0,
                "id": 4,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_5": {
                "title": "Main",
                "crudId": 5,
                "order": 0,
                "id": 5,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_6": {
                "title": "Main",
                "crudId": 6,
                "order": 0,
                "id": 6,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_7": {
                "title": "Main",
                "crudId": 7,
                "order": 0,
                "id": 7,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_8": {
                "title": "Main",
                "crudId": 8,
                "order": 0,
                "id": 8,
                "createdAt": "2025-08-07 18:24:29",
                "updatedAt": "2025-08-07 18:24:29"
            },
            "item_9": {
                "title": "Main",
                "crudId": 9,
                "order": 0,
                "id": 9,
                "createdAt": "2025-08-07 18:24:32",
                "updatedAt": "2025-08-07 18:24:32"
            },
            "item_10": {
                "title": "Main",
                "crudId": 10,
                "order": 0,
                "id": 10,
                "createdAt": "2025-08-07 18:24:36",
                "updatedAt": "2025-08-07 18:24:36"
            },
            "item_11": {
                "title": "Main",
                "crudId": 11,
                "order": 0,
                "id": 11,
                "createdAt": "2025-08-07 18:24:36",
                "updatedAt": "2025-08-07 18:24:36"
            }
        },
        "inputs": {
            "item_1": {
                "crudId": 1,
                "columnId": 44,
                "name": "name",
                "label": "crud.users.inputs.name.label",
                "placeholder": "crud.users.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 1,
                "id": 1,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "__tableData": {
                "count": 36,
                "lastPrimaryKey": 36,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {}
                    },
                    "15": {
                        "hasMany": {}
                    },
                    "16": {
                        "hasMany": {}
                    },
                    "17": {
                        "hasMany": {}
                    },
                    "18": {
                        "hasMany": {}
                    },
                    "19": {
                        "hasMany": {}
                    },
                    "20": {
                        "hasMany": {}
                    },
                    "21": {
                        "hasMany": {}
                    },
                    "22": {
                        "hasMany": {}
                    },
                    "23": {
                        "hasMany": {}
                    },
                    "24": {
                        "hasMany": {}
                    },
                    "25": {
                        "hasMany": {}
                    },
                    "26": {
                        "hasMany": {}
                    },
                    "27": {
                        "hasMany": {}
                    },
                    "28": {
                        "hasMany": {}
                    },
                    "29": {
                        "hasMany": {}
                    },
                    "30": {
                        "hasMany": {}
                    },
                    "31": {
                        "hasMany": {}
                    },
                    "32": {
                        "hasMany": {}
                    },
                    "33": {
                        "hasMany": {}
                    },
                    "34": {
                        "hasMany": {}
                    },
                    "35": {
                        "hasMany": {}
                    },
                    "36": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "crudId": 1,
                "columnId": 45,
                "name": "email",
                "label": "crud.users.inputs.email.label",
                "placeholder": "crud.users.inputs.email.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "email",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "unique:users,email"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "unique:users,email"
                    }
                ],
                "panelId": 1,
                "id": 2,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "item_3": {
                "crudId": 1,
                "columnId": 89,
                "name": "phone_number",
                "label": "crud.users.inputs.phone_number.label",
                "placeholder": "crud.users.inputs.phone_number.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 1,
                "id": 3,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "item_4": {
                "crudId": 1,
                "columnId": 47,
                "name": "password",
                "label": "crud.users.inputs.password.label",
                "placeholder": "crud.users.inputs.password.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": false,
                "showOnIndex": false,
                "type": "password",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "min:6"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    },
                    {
                        "type": "textual",
                        "value": "min:6"
                    }
                ],
                "panelId": 1,
                "id": 4,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "item_5": {
                "crudId": 1,
                "columnId": 51,
                "name": "role",
                "label": "crud.users.inputs.role.label",
                "placeholder": "crud.users.inputs.role.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "label": "User",
                        "value": "user"
                    },
                    {
                        "label": "Admin",
                        "value": "admin"
                    },
                    {
                        "label": "Manager",
                        "value": "manager"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 1,
                "id": 5,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "item_6": {
                "crudId": 2,
                "columnId": 70,
                "name": "tour_id",
                "label": "crud.reservations.inputs.tour_id.label",
                "placeholder": "crud.reservations.inputs.tour_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 6,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 2,
                "id": 6,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "item_7": {
                "crudId": 2,
                "columnId": 71,
                "name": "status",
                "label": "crud.reservations.inputs.status.label",
                "placeholder": "crud.reservations.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "label": "Placed",
                        "value": "placed"
                    },
                    {
                        "label": "Confirmed",
                        "value": "confirmed"
                    },
                    {
                        "label": "Canceled",
                        "value": "canceled"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 2,
                "id": 7,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "item_8": {
                "crudId": 2,
                "columnId": 73,
                "name": "number_of_people",
                "label": "crud.reservations.inputs.number_of_people.label",
                "placeholder": "crud.reservations.inputs.number_of_people.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 2,
                "id": 8,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "item_9": {
                "crudId": 3,
                "columnId": 78,
                "name": "tour_id",
                "label": "crud.reviews.inputs.tour_id.label",
                "placeholder": "crud.reviews.inputs.tour_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 12,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 3,
                "id": 9,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "item_10": {
                "crudId": 3,
                "columnId": 79,
                "name": "rating",
                "label": "crud.reviews.inputs.rating.label",
                "placeholder": "crud.reviews.inputs.rating.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 3,
                "id": 10,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "item_11": {
                "crudId": 3,
                "columnId": 80,
                "name": "comment",
                "label": "crud.reviews.inputs.comment.label",
                "placeholder": "crud.reviews.inputs.comment.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 3,
                "id": 11,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "item_12": {
                "crudId": 4,
                "columnId": 55,
                "name": "title",
                "label": "crud.tours.inputs.title.label",
                "placeholder": "crud.tours.inputs.title.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 4,
                "id": 12,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_13": {
                "crudId": 4,
                "columnId": 56,
                "name": "description",
                "label": "crud.tours.inputs.description.label",
                "placeholder": "crud.tours.inputs.description.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "textarea",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 4,
                "id": 13,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_14": {
                "crudId": 4,
                "columnId": 57,
                "name": "location",
                "label": "crud.tours.inputs.location.label",
                "placeholder": "crud.tours.inputs.location.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 4,
                "id": 14,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_15": {
                "crudId": 4,
                "columnId": 58,
                "name": "price",
                "label": "crud.tours.inputs.price.label",
                "placeholder": "crud.tours.inputs.price.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 4,
                "id": 15,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_16": {
                "crudId": 4,
                "columnId": 59,
                "name": "start_date",
                "label": "crud.tours.inputs.start_date.label",
                "placeholder": "crud.tours.inputs.start_date.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "date",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "date"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "date"
                    }
                ],
                "panelId": 4,
                "id": 16,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_17": {
                "crudId": 4,
                "columnId": 60,
                "name": "end_date",
                "label": "crud.tours.inputs.end_date.label",
                "placeholder": "crud.tours.inputs.end_date.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "date",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "date"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "date"
                    }
                ],
                "panelId": 4,
                "id": 17,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_18": {
                "crudId": 4,
                "columnId": 61,
                "name": "max_participants",
                "label": "crud.tours.inputs.max_participants.label",
                "placeholder": "crud.tours.inputs.max_participants.placeholder",
                "readOnly": false,
                "required": false,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "nullable"
                    }
                ],
                "panelId": 4,
                "id": 18,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_19": {
                "crudId": 5,
                "columnId": 69,
                "name": "user_id",
                "label": "crud.reservations.inputs.user_id.label",
                "placeholder": "crud.reservations.inputs.user_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 4,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 5,
                "id": 19,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_20": {
                "crudId": 5,
                "columnId": 71,
                "name": "status",
                "label": "crud.reservations.inputs.status.label",
                "placeholder": "crud.reservations.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "label": "Placed",
                        "value": "placed"
                    },
                    {
                        "label": "Confirmed",
                        "value": "confirmed"
                    },
                    {
                        "label": "Canceled",
                        "value": "canceled"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 5,
                "id": 20,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_21": {
                "crudId": 5,
                "columnId": 73,
                "name": "number_of_people",
                "label": "crud.reservations.inputs.number_of_people.label",
                "placeholder": "crud.reservations.inputs.number_of_people.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 5,
                "id": 21,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_22": {
                "crudId": 6,
                "columnId": 77,
                "name": "user_id",
                "label": "crud.reviews.inputs.user_id.label",
                "placeholder": "crud.reviews.inputs.user_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 10,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 6,
                "id": 22,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_23": {
                "crudId": 6,
                "columnId": 79,
                "name": "rating",
                "label": "crud.reviews.inputs.rating.label",
                "placeholder": "crud.reviews.inputs.rating.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 6,
                "id": 23,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_24": {
                "crudId": 6,
                "columnId": 80,
                "name": "comment",
                "label": "crud.reviews.inputs.comment.label",
                "placeholder": "crud.reviews.inputs.comment.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 6,
                "id": 24,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_25": {
                "crudId": 7,
                "columnId": 87,
                "name": "category_id",
                "label": "crud.categoryTour.inputs.category_id.label",
                "placeholder": "crud.categoryTour.inputs.category_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 7,
                "id": 25,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25",
                "relationshipId": 7
            },
            "item_26": {
                "crudId": 8,
                "columnId": 69,
                "name": "user_id",
                "label": "crud.reservations.inputs.user_id.label",
                "placeholder": "crud.reservations.inputs.user_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 4,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 8,
                "id": 26,
                "createdAt": "2025-08-07 18:24:29",
                "updatedAt": "2025-08-07 18:24:29"
            },
            "item_27": {
                "crudId": 8,
                "columnId": 70,
                "name": "tour_id",
                "label": "crud.reservations.inputs.tour_id.label",
                "placeholder": "crud.reservations.inputs.tour_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 6,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 8,
                "id": 27,
                "createdAt": "2025-08-07 18:24:29",
                "updatedAt": "2025-08-07 18:24:29"
            },
            "item_28": {
                "crudId": 8,
                "columnId": 71,
                "name": "status",
                "label": "crud.reservations.inputs.status.label",
                "placeholder": "crud.reservations.inputs.status.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [
                    {
                        "label": "Placed",
                        "value": "placed"
                    },
                    {
                        "label": "Confirmed",
                        "value": "confirmed"
                    },
                    {
                        "label": "Canceled",
                        "value": "canceled"
                    }
                ],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "select",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 8,
                "id": 28,
                "createdAt": "2025-08-07 18:24:29",
                "updatedAt": "2025-08-07 18:24:29"
            },
            "item_29": {
                "crudId": 8,
                "columnId": 73,
                "name": "number_of_people",
                "label": "crud.reservations.inputs.number_of_people.label",
                "placeholder": "crud.reservations.inputs.number_of_people.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 8,
                "id": 29,
                "createdAt": "2025-08-07 18:24:29",
                "updatedAt": "2025-08-07 18:24:29"
            },
            "item_30": {
                "crudId": 9,
                "columnId": 77,
                "name": "user_id",
                "label": "crud.reviews.inputs.user_id.label",
                "placeholder": "crud.reviews.inputs.user_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 10,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 9,
                "id": 30,
                "createdAt": "2025-08-07 18:24:32",
                "updatedAt": "2025-08-07 18:24:32"
            },
            "item_31": {
                "crudId": 9,
                "columnId": 78,
                "name": "tour_id",
                "label": "crud.reviews.inputs.tour_id.label",
                "placeholder": "crud.reviews.inputs.tour_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "relationshipId": 12,
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 9,
                "id": 31,
                "createdAt": "2025-08-07 18:24:32",
                "updatedAt": "2025-08-07 18:24:32"
            },
            "item_32": {
                "crudId": 9,
                "columnId": 79,
                "name": "rating",
                "label": "crud.reviews.inputs.rating.label",
                "placeholder": "crud.reviews.inputs.rating.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "number",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 9,
                "id": 32,
                "createdAt": "2025-08-07 18:24:32",
                "updatedAt": "2025-08-07 18:24:32"
            },
            "item_33": {
                "crudId": 9,
                "columnId": 80,
                "name": "comment",
                "label": "crud.reviews.inputs.comment.label",
                "placeholder": "crud.reviews.inputs.comment.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 9,
                "id": 33,
                "createdAt": "2025-08-07 18:24:32",
                "updatedAt": "2025-08-07 18:24:32"
            },
            "item_34": {
                "crudId": 10,
                "columnId": 84,
                "name": "name",
                "label": "crud.categories.inputs.name.label",
                "placeholder": "crud.categories.inputs.name.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "text",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 10,
                "id": 34,
                "createdAt": "2025-08-07 18:24:36",
                "updatedAt": "2025-08-07 18:24:36"
            },
            "item_35": {
                "crudId": 10,
                "columnId": 85,
                "name": "description",
                "label": "crud.categories.inputs.description.label",
                "placeholder": "crud.categories.inputs.description.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 0,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "textarea",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    },
                    {
                        "type": "textual",
                        "value": "string"
                    }
                ],
                "panelId": 10,
                "id": 35,
                "createdAt": "2025-08-07 18:24:36",
                "updatedAt": "2025-08-07 18:24:36"
            },
            "item_36": {
                "crudId": 11,
                "columnId": 88,
                "name": "tour_id",
                "label": "crud.categoryTour.inputs.tour_id.label",
                "placeholder": "crud.categoryTour.inputs.tour_id.placeholder",
                "readOnly": false,
                "required": true,
                "hidden": false,
                "defaultValue": "",
                "checked": false,
                "max": 0,
                "min": 0,
                "step": 1,
                "items": [],
                "showOnCreation": true,
                "showOnUpdate": true,
                "showOnDetails": true,
                "showOnIndex": true,
                "type": "belongsTo",
                "creationRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "updateRules": [
                    {
                        "type": "textual",
                        "value": "required"
                    }
                ],
                "panelId": 11,
                "id": 36,
                "createdAt": "2025-08-07 18:24:36",
                "updatedAt": "2025-08-07 18:24:36",
                "relationshipId": 8
            }
        },
        "has_many_details": {
            "item_1": {
                "crudId": 1,
                "relationshipId": 3,
                "sectionId": 1,
                "detailCrudId": 2,
                "id": 1,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "__tableData": {
                "count": 4,
                "lastPrimaryKey": 4,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "crudId": 1,
                "relationshipId": 9,
                "sectionId": 1,
                "detailCrudId": 3,
                "id": 2,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "item_3": {
                "crudId": 4,
                "relationshipId": 5,
                "sectionId": 1,
                "detailCrudId": 5,
                "id": 3,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_4": {
                "crudId": 4,
                "relationshipId": 11,
                "sectionId": 1,
                "detailCrudId": 6,
                "id": 4,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            }
        },
        "routes": {
            "item_1": {
                "name": "users.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/users",
                "routableId": 1,
                "routableType": "Crud",
                "projectId": 1,
                "id": 1,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "__tableData": {
                "count": 15,
                "lastPrimaryKey": 15,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    },
                    "3": {
                        "hasMany": {}
                    },
                    "4": {
                        "hasMany": {}
                    },
                    "5": {
                        "hasMany": {}
                    },
                    "6": {
                        "hasMany": {}
                    },
                    "7": {
                        "hasMany": {}
                    },
                    "8": {
                        "hasMany": {}
                    },
                    "9": {
                        "hasMany": {}
                    },
                    "10": {
                        "hasMany": {}
                    },
                    "11": {
                        "hasMany": {}
                    },
                    "12": {
                        "hasMany": {}
                    },
                    "13": {
                        "hasMany": {}
                    },
                    "14": {
                        "hasMany": {}
                    },
                    "15": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "name": "users.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/users/create",
                "routableId": 1,
                "routableType": "Crud",
                "projectId": 1,
                "id": 2,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "item_3": {
                "name": "users.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/users/{user}",
                "routableId": 1,
                "routableType": "Crud",
                "projectId": 1,
                "id": 3,
                "createdAt": "2025-08-07 18:24:21",
                "updatedAt": "2025-08-07 18:24:21"
            },
            "item_4": {
                "name": "tours.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/tours",
                "routableId": 4,
                "routableType": "Crud",
                "projectId": 1,
                "id": 4,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_5": {
                "name": "tours.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/tours/create",
                "routableId": 4,
                "routableType": "Crud",
                "projectId": 1,
                "id": 5,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_6": {
                "name": "tours.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/tours/{tour}",
                "routableId": 4,
                "routableType": "Crud",
                "projectId": 1,
                "id": 6,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "item_7": {
                "name": "reservations.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/reservations",
                "routableId": 8,
                "routableType": "Crud",
                "projectId": 1,
                "id": 7,
                "createdAt": "2025-08-07 18:24:29",
                "updatedAt": "2025-08-07 18:24:29"
            },
            "item_8": {
                "name": "reservations.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/reservations/create",
                "routableId": 8,
                "routableType": "Crud",
                "projectId": 1,
                "id": 8,
                "createdAt": "2025-08-07 18:24:29",
                "updatedAt": "2025-08-07 18:24:29"
            },
            "item_9": {
                "name": "reservations.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/reservations/{reservation}",
                "routableId": 8,
                "routableType": "Crud",
                "projectId": 1,
                "id": 9,
                "createdAt": "2025-08-07 18:24:29",
                "updatedAt": "2025-08-07 18:24:29"
            },
            "item_10": {
                "name": "reviews.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/reviews",
                "routableId": 9,
                "routableType": "Crud",
                "projectId": 1,
                "id": 10,
                "createdAt": "2025-08-07 18:24:32",
                "updatedAt": "2025-08-07 18:24:32"
            },
            "item_11": {
                "name": "reviews.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/reviews/create",
                "routableId": 9,
                "routableType": "Crud",
                "projectId": 1,
                "id": 11,
                "createdAt": "2025-08-07 18:24:32",
                "updatedAt": "2025-08-07 18:24:32"
            },
            "item_12": {
                "name": "reviews.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/reviews/{review}",
                "routableId": 9,
                "routableType": "Crud",
                "projectId": 1,
                "id": 12,
                "createdAt": "2025-08-07 18:24:32",
                "updatedAt": "2025-08-07 18:24:32"
            },
            "item_13": {
                "name": "categories.index",
                "tag": "index",
                "method": "get",
                "type": "route",
                "path": "/categories",
                "routableId": 10,
                "routableType": "Crud",
                "projectId": 1,
                "id": 13,
                "createdAt": "2025-08-07 18:24:36",
                "updatedAt": "2025-08-07 18:24:36"
            },
            "item_14": {
                "name": "categories.create",
                "tag": "create",
                "method": "get",
                "type": "route",
                "path": "/categories/create",
                "routableId": 10,
                "routableType": "Crud",
                "projectId": 1,
                "id": 14,
                "createdAt": "2025-08-07 18:24:36",
                "updatedAt": "2025-08-07 18:24:36"
            },
            "item_15": {
                "name": "categories.edit",
                "tag": "edit",
                "method": "get",
                "type": "route",
                "path": "/categories/{category}",
                "routableId": 10,
                "routableType": "Crud",
                "projectId": 1,
                "id": 15,
                "createdAt": "2025-08-07 18:24:36",
                "updatedAt": "2025-08-07 18:24:36"
            }
        },
        "belongs_to_many_details": {
            "item_1": {
                "crudId": 4,
                "relationshipId": 7,
                "sectionId": 1,
                "detailCrudId": 7,
                "id": 1,
                "createdAt": "2025-08-07 18:24:25",
                "updatedAt": "2025-08-07 18:24:25"
            },
            "__tableData": {
                "count": 2,
                "lastPrimaryKey": 2,
                "index": {
                    "1": {
                        "hasMany": {}
                    },
                    "2": {
                        "hasMany": {}
                    }
                },
                "additionalIndexes": {},
                "items": [],
                "relations": []
            },
            "item_2": {
                "crudId": 10,
                "relationshipId": 8,
                "sectionId": 1,
                "detailCrudId": 11,
                "id": 2,
                "createdAt": "2025-08-07 18:24:36",
                "updatedAt": "2025-08-07 18:24:36"
            }
        }
    },
    "tablesNames": [
        "projects",
        "tables",
        "columns",
        "indices",
        "index_column",
        "models",
        "fillable_model_column",
        "hidden_model_column",
        "casts_model_column",
        "app_sections",
        "schema_sections",
        "navs",
        "renderable_files",
        "relationships",
        "cruds",
        "crud_panels",
        "inputs",
        "has_many_details",
        "routes",
        "belongs_to_many_details"
    ]
}